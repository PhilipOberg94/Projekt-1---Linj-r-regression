
atmega328p_library_cpp1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00002716  000027aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002716  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000051  00800138  00800138  000027e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002840  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000450  00000000  00000000  00002880  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008058  00000000  00000000  00002cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001e9d  00000000  00000000  0000ad28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ea6  00000000  00000000  0000cbc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f30  00000000  00000000  0000ea6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002769  00000000  00000000  0000f99c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000040a3  00000000  00000000  00012105  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  000161a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__dtors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 c4 03 	jmp	0x788	; 0x788 <__vector_3>
      10:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__vector_4>
      14:	0c 94 14 04 	jmp	0x828	; 0x828 <__vector_5>
      18:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <__vector_6>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 4a 0b 	jmp	0x1694	; 0x1694 <__vector_9>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 25 0b 	jmp	0x164a	; 0x164a <__vector_11>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__vector_16>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>

00000068 <__ctors_start>:
      68:	4f 04       	cpc	r4, r15
      6a:	04 09       	sbc	r16, r4
      6c:	80 0b       	sbc	r24, r16

0000006e <__ctors_end>:
      6e:	56 04       	cpc	r5, r6
      70:	0b 09       	sbc	r16, r11
      72:	87 0b       	sbc	r24, r23

00000074 <__dtors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e6 e1       	ldi	r30, 0x16	; 22
      88:	f7 e2       	ldi	r31, 0x27	; 39
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a8 33       	cpi	r26, 0x38	; 56
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a8 e3       	ldi	r26, 0x38	; 56
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a9 38       	cpi	r26, 0x89	; 137
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>

000000a6 <__do_global_ctors>:
      a6:	10 e0       	ldi	r17, 0x00	; 0
      a8:	c7 e3       	ldi	r28, 0x37	; 55
      aa:	d0 e0       	ldi	r29, 0x00	; 0
      ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_global_ctors+0x10>
      ae:	21 97       	sbiw	r28, 0x01	; 1
      b0:	fe 01       	movw	r30, r28
      b2:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <__tablejump2__>
      b6:	c4 33       	cpi	r28, 0x34	; 52
      b8:	d1 07       	cpc	r29, r17
      ba:	c9 f7       	brne	.-14     	; 0xae <__do_global_ctors+0x8>
      bc:	0e 94 8b 05 	call	0xb16	; 0xb16 <main>
      c0:	0c 94 7e 13 	jmp	0x26fc	; 0x26fc <__do_global_dtors>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <_ZN6driver3adc4readEh>:
    return read(pin) / static_cast<double>(MaxVal); 
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
      c8:	0f 93       	push	r16
constexpr uint8_t AdcPortOffset{14U};

// -----------------------------------------------------------------------------
constexpr bool isPinNumberValid(const uint8_t pin) 
{
    return (pin >= Pin::A0 && pin <= Pin::A5) || 
      ca:	86 30       	cpi	r24, 0x06	; 6
      cc:	30 f0       	brcs	.+12     	; 0xda <_ZN6driver3adc4readEh+0x12>
        (pin >= Port::C0 && pin <= Port::C5);
      ce:	92 ef       	ldi	r25, 0xF2	; 242
      d0:	98 0f       	add	r25, r24
constexpr uint8_t AdcPortOffset{14U};

// -----------------------------------------------------------------------------
constexpr bool isPinNumberValid(const uint8_t pin) 
{
    return (pin >= Pin::A0 && pin <= Pin::A5) || 
      d2:	96 30       	cpi	r25, 0x06	; 6
      d4:	20 f4       	brcc	.+8      	; 0xde <_ZN6driver3adc4readEh+0x16>
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	03 c0       	rjmp	.+6      	; 0xe0 <_ZN6driver3adc4readEh+0x18>
      da:	91 e0       	ldi	r25, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <_ZN6driver3adc4readEh+0x18>
      de:	90 e0       	ldi	r25, 0x00	; 0
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
      e0:	99 23       	and	r25, r25
      e2:	c9 f1       	breq	.+114    	; 0x156 <_ZN6driver3adc4readEh+0x8e>
}

// -----------------------------------------------------------------------------
constexpr uint8_t isPinAdjustedForOffset(const uint8_t pin) 
{
    return pin <= Pin::A5 ? pin : pin - AdcPortOffset;
      e4:	86 30       	cpi	r24, 0x06	; 6
      e6:	08 f0       	brcs	.+2      	; 0xea <_ZN6driver3adc4readEh+0x22>
      e8:	8e 50       	subi	r24, 0x0E	; 14

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
   ADMUX = (1 << REFS0) | isPinAdjustedForOffset(pin);
      ea:	80 64       	ori	r24, 0x40	; 64
      ec:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
      f0:	ea e7       	ldi	r30, 0x7A	; 122
      f2:	f0 e0       	ldi	r31, 0x00	; 0
      f4:	80 81       	ld	r24, Z
      f6:	80 68       	ori	r24, 0x80	; 128
      f8:	80 83       	st	Z, r24
      fa:	80 81       	ld	r24, Z
      fc:	80 64       	ori	r24, 0x40	; 64
      fe:	80 83       	st	Z, r24
     100:	80 81       	ld	r24, Z
     102:	81 60       	ori	r24, 0x01	; 1
     104:	80 83       	st	Z, r24
     106:	80 81       	ld	r24, Z
     108:	82 60       	ori	r24, 0x02	; 2
     10a:	80 83       	st	Z, r24
     10c:	80 81       	ld	r24, Z
     10e:	84 60       	ori	r24, 0x04	; 4
     110:	80 83       	st	Z, r24
template <typename T>
constexpr bool read(const volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    return reg & (1ULL << bit);
     112:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	40 e0       	ldi	r20, 0x00	; 0
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	60 e0       	ldi	r22, 0x00	; 0
     11e:	70 e0       	ldi	r23, 0x00	; 0
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	04 e0       	ldi	r16, 0x04	; 4
     126:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <__lshrdi3>
     12a:	21 70       	andi	r18, 0x01	; 1
   utils::set(ADCSRA, ADEN, ADSC, ADPS0, ADPS1, ADPS2);
   while (!utils::read(ADCSRA, ADIF));
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	40 e0       	ldi	r20, 0x00	; 0
     130:	50 e0       	ldi	r21, 0x00	; 0
     132:	60 e0       	ldi	r22, 0x00	; 0
     134:	70 e0       	ldi	r23, 0x00	; 0
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__cmpdi2_s8>
     140:	41 f3       	breq	.-48     	; 0x112 <_ZN6driver3adc4readEh+0x4a>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
     142:	ea e7       	ldi	r30, 0x7A	; 122
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	80 81       	ld	r24, Z
     148:	80 61       	ori	r24, 0x10	; 16
     14a:	80 83       	st	Z, r24
   utils::set(ADCSRA, ADIF);
   return ADC;
     14c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     150:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     154:	02 c0       	rjmp	.+4      	; 0x15a <_ZN6driver3adc4readEh+0x92>
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
   ADMUX = (1 << REFS0) | isPinAdjustedForOffset(pin);
   utils::set(ADCSRA, ADEN, ADSC, ADPS0, ADPS1, ADPS2);
   while (!utils::read(ADCSRA, ADIF));
   utils::set(ADCSRA, ADIF);
   return ADC;
}
     15a:	0f 91       	pop	r16
     15c:	08 95       	ret

0000015e <_ZN6driver3adc4initEv>:
    return pin <= Pin::A5 ? pin : pin - AdcPortOffset;
}
} // namespace 

// -----------------------------------------------------------------------------
void init(void) { read(Pin::A0); }
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	0e 94 64 00 	call	0xc8	; 0xc8 <_ZN6driver3adc4readEh>
     164:	08 95       	ret

00000166 <_ZN6driver3adc12getDutyCycleEh>:

// -----------------------------------------------------------------------------
double getDutyCycle(const uint8_t pin) 
{ 
    return read(pin) / static_cast<double>(MaxVal); 
     166:	0e 94 64 00 	call	0xc8	; 0xc8 <_ZN6driver3adc4readEh>
     16a:	bc 01       	movw	r22, r24
     16c:	80 e0       	ldi	r24, 0x00	; 0
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <__floatunsisf>
     174:	20 e0       	ldi	r18, 0x00	; 0
     176:	30 ec       	ldi	r19, 0xC0	; 192
     178:	4f e7       	ldi	r20, 0x7F	; 127
     17a:	54 e4       	ldi	r21, 0x44	; 68
     17c:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__divsf3>
}
     180:	08 95       	ret

00000182 <_ZNK2ml6LinReg7predictERKd>:
                myWeight += error * myLearningRate * input;
            }                
        }
    }
    return true;
}
     182:	cf 92       	push	r12
     184:	df 92       	push	r13
     186:	ef 92       	push	r14
     188:	ff 92       	push	r15
     18a:	fb 01       	movw	r30, r22
     18c:	dc 01       	movw	r26, r24
     18e:	cd 90       	ld	r12, X+
     190:	dd 90       	ld	r13, X+
     192:	ed 90       	ld	r14, X+
     194:	fc 90       	ld	r15, X
     196:	13 97       	sbiw	r26, 0x03	; 3
     198:	14 96       	adiw	r26, 0x04	; 4
     19a:	6d 91       	ld	r22, X+
     19c:	7d 91       	ld	r23, X+
     19e:	8d 91       	ld	r24, X+
     1a0:	9c 91       	ld	r25, X
     1a2:	17 97       	sbiw	r26, 0x07	; 7
     1a4:	20 81       	ld	r18, Z
     1a6:	31 81       	ldd	r19, Z+1	; 0x01
     1a8:	42 81       	ldd	r20, Z+2	; 0x02
     1aa:	53 81       	ldd	r21, Z+3	; 0x03
     1ac:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__mulsf3>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	c7 01       	movw	r24, r14
     1b6:	b6 01       	movw	r22, r12
     1b8:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__addsf3>
     1bc:	ff 90       	pop	r15
     1be:	ef 90       	pop	r14
     1c0:	df 90       	pop	r13
     1c2:	cf 90       	pop	r12
     1c4:	08 95       	ret

000001c6 <_ZN9container6VectorIdE6resizeEj>:
    mySize = 0;
}

// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::resize(const size_t newSize) 
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	ec 01       	movw	r28, r24
     1d0:	8b 01       	movw	r16, r22

// -----------------------------------------------------------------------------
template <typename T>
inline T* reallocMemory(T* block, const size_t new_size) 
{
    return static_cast<T*>(realloc(block, sizeof(T) * new_size));
     1d2:	66 0f       	add	r22, r22
     1d4:	77 1f       	adc	r23, r23
     1d6:	66 0f       	add	r22, r22
     1d8:	77 1f       	adc	r23, r23
     1da:	88 81       	ld	r24, Y
     1dc:	99 81       	ldd	r25, Y+1	; 0x01
     1de:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <realloc>
{
    auto copy{utils::reallocMemory<T>(myData, newSize)};
    if (copy == nullptr) { return false; }
     1e2:	00 97       	sbiw	r24, 0x00	; 0
     1e4:	31 f0       	breq	.+12     	; 0x1f2 <_ZN9container6VectorIdE6resizeEj+0x2c>
    myData = copy;
     1e6:	99 83       	std	Y+1, r25	; 0x01
     1e8:	88 83       	st	Y, r24
    mySize = newSize;
     1ea:	1b 83       	std	Y+3, r17	; 0x03
     1ec:	0a 83       	std	Y+2, r16	; 0x02
    return true;
     1ee:	81 e0       	ldi	r24, 0x01	; 1
     1f0:	01 c0       	rjmp	.+2      	; 0x1f4 <_ZN9container6VectorIdE6resizeEj+0x2e>
// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::resize(const size_t newSize) 
{
    auto copy{utils::reallocMemory<T>(myData, newSize)};
    if (copy == nullptr) { return false; }
     1f2:	80 e0       	ldi	r24, 0x00	; 0
    myData = copy;
    mySize = newSize;
    return true;
}
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	1f 91       	pop	r17
     1fa:	0f 91       	pop	r16
     1fc:	08 95       	ret

000001fe <_ZN9container6VectorIdE6assignERKS1_j>:
    return true;
}

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::assign(const Vector<T>& source, const size_t offset) 
     1fe:	ef 92       	push	r14
     200:	ff 92       	push	r15
     202:	0f 93       	push	r16
     204:	1f 93       	push	r17
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
{
    for (size_t i{}; offset + i < mySize && i < source.mySize; ++i) 
     20a:	a0 e0       	ldi	r26, 0x00	; 0
     20c:	b0 e0       	ldi	r27, 0x00	; 0
     20e:	9d 01       	movw	r18, r26
     210:	24 0f       	add	r18, r20
     212:	35 1f       	adc	r19, r21
     214:	ec 01       	movw	r28, r24
     216:	ea 81       	ldd	r30, Y+2	; 0x02
     218:	fb 81       	ldd	r31, Y+3	; 0x03
     21a:	2e 17       	cp	r18, r30
     21c:	3f 07       	cpc	r19, r31
     21e:	28 f5       	brcc	.+74     	; 0x26a <_ZN9container6VectorIdE6assignERKS1_j+0x6c>
     220:	eb 01       	movw	r28, r22
     222:	ea 81       	ldd	r30, Y+2	; 0x02
     224:	fb 81       	ldd	r31, Y+3	; 0x03
     226:	ae 17       	cp	r26, r30
     228:	bf 07       	cpc	r27, r31
     22a:	f8 f4       	brcc	.+62     	; 0x26a <_ZN9container6VectorIdE6assignERKS1_j+0x6c>
    {
        myData[offset + i] = source.myData[i];
     22c:	22 0f       	add	r18, r18
     22e:	33 1f       	adc	r19, r19
     230:	22 0f       	add	r18, r18
     232:	33 1f       	adc	r19, r19
     234:	ec 01       	movw	r28, r24
     236:	e8 81       	ld	r30, Y
     238:	f9 81       	ldd	r31, Y+1	; 0x01
     23a:	7f 01       	movw	r14, r30
     23c:	e2 0e       	add	r14, r18
     23e:	f3 1e       	adc	r15, r19
     240:	9d 01       	movw	r18, r26
     242:	22 0f       	add	r18, r18
     244:	33 1f       	adc	r19, r19
     246:	22 0f       	add	r18, r18
     248:	33 1f       	adc	r19, r19
     24a:	fb 01       	movw	r30, r22
     24c:	c0 81       	ld	r28, Z
     24e:	d1 81       	ldd	r29, Z+1	; 0x01
     250:	c2 0f       	add	r28, r18
     252:	d3 1f       	adc	r29, r19
     254:	08 81       	ld	r16, Y
     256:	19 81       	ldd	r17, Y+1	; 0x01
     258:	2a 81       	ldd	r18, Y+2	; 0x02
     25a:	3b 81       	ldd	r19, Y+3	; 0x03
     25c:	e7 01       	movw	r28, r14
     25e:	08 83       	st	Y, r16
     260:	19 83       	std	Y+1, r17	; 0x01
     262:	2a 83       	std	Y+2, r18	; 0x02
     264:	3b 83       	std	Y+3, r19	; 0x03

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::assign(const Vector<T>& source, const size_t offset) 
{
    for (size_t i{}; offset + i < mySize && i < source.mySize; ++i) 
     266:	11 96       	adiw	r26, 0x01	; 1
     268:	d2 cf       	rjmp	.-92     	; 0x20e <_ZN9container6VectorIdE6assignERKS1_j+0x10>
    {
        myData[offset + i] = source.myData[i];
    }
}
     26a:	df 91       	pop	r29
     26c:	cf 91       	pop	r28
     26e:	1f 91       	pop	r17
     270:	0f 91       	pop	r16
     272:	ff 90       	pop	r15
     274:	ef 90       	pop	r14
     276:	08 95       	ret

00000278 <_ZN9container6VectorIdE4copyERKS1_>:
    }
}

// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::copy(const Vector<T>& source) 
     278:	ef 92       	push	r14
     27a:	ff 92       	push	r15
     27c:	0f 93       	push	r16
     27e:	1f 93       	push	r17
     280:	cf 93       	push	r28
     282:	8c 01       	movw	r16, r24
     284:	7b 01       	movw	r14, r22
{
    if (!resize(source.mySize)) { return false; }
     286:	fb 01       	movw	r30, r22
     288:	62 81       	ldd	r22, Z+2	; 0x02
     28a:	73 81       	ldd	r23, Z+3	; 0x03
     28c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <_ZN9container6VectorIdE6resizeEj>
     290:	c8 2f       	mov	r28, r24
     292:	88 23       	and	r24, r24
     294:	31 f0       	breq	.+12     	; 0x2a2 <_ZN9container6VectorIdE4copyERKS1_+0x2a>
    assign(source);
     296:	40 e0       	ldi	r20, 0x00	; 0
     298:	50 e0       	ldi	r21, 0x00	; 0
     29a:	b7 01       	movw	r22, r14
     29c:	c8 01       	movw	r24, r16
     29e:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_ZN9container6VectorIdE6assignERKS1_j>
    return true;
}
     2a2:	8c 2f       	mov	r24, r28
     2a4:	cf 91       	pop	r28
     2a6:	1f 91       	pop	r17
     2a8:	0f 91       	pop	r16
     2aa:	ff 90       	pop	r15
     2ac:	ef 90       	pop	r14
     2ae:	08 95       	ret

000002b0 <_ZN9container6VectorIdEC1ERKS1_>:
    addValues(array);
}

// -----------------------------------------------------------------------------
template <typename T>
Vector<T>::Vector(const Vector<T>& source) { copy(source); }
     2b0:	fc 01       	movw	r30, r24
     2b2:	11 82       	std	Z+1, r1	; 0x01
     2b4:	10 82       	st	Z, r1
     2b6:	13 82       	std	Z+3, r1	; 0x03
     2b8:	12 82       	std	Z+2, r1	; 0x02
     2ba:	0e 94 3c 01 	call	0x278	; 0x278 <_ZN9container6VectorIdE4copyERKS1_>
     2be:	08 95       	ret

000002c0 <_ZN2ml6LinRegC1ERKdS2_RKN9container6VectorIdEES7_S2_>:
 * @param weight Initial weight value
 * @param trainingInput Vector of training input values
 * @param trainingOutput Vector of training output values
 * @param learningRate Learning rate for the model
 ********************************************************************************/
LinReg::LinReg(const double &bias, const double &weight,
     2c0:	ef 92       	push	r14
     2c2:	ff 92       	push	r15
     2c4:	0f 93       	push	r16
     2c6:	1f 93       	push	r17
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	ec 01       	movw	r28, r24
    const double &learningRate)
    : myBias(bias)
    , myWeight(weight)
    , myLearningRate(learningRate)
    , myTrainingInput(trainingInput)
    , myTrainingOutput(trainingOutput)
     2ce:	fb 01       	movw	r30, r22
     2d0:	80 81       	ld	r24, Z
     2d2:	91 81       	ldd	r25, Z+1	; 0x01
     2d4:	a2 81       	ldd	r26, Z+2	; 0x02
     2d6:	b3 81       	ldd	r27, Z+3	; 0x03
     2d8:	88 83       	st	Y, r24
     2da:	99 83       	std	Y+1, r25	; 0x01
     2dc:	aa 83       	std	Y+2, r26	; 0x02
     2de:	bb 83       	std	Y+3, r27	; 0x03
     2e0:	fa 01       	movw	r30, r20
     2e2:	80 81       	ld	r24, Z
     2e4:	91 81       	ldd	r25, Z+1	; 0x01
     2e6:	a2 81       	ldd	r26, Z+2	; 0x02
     2e8:	b3 81       	ldd	r27, Z+3	; 0x03
     2ea:	8c 83       	std	Y+4, r24	; 0x04
     2ec:	9d 83       	std	Y+5, r25	; 0x05
     2ee:	ae 83       	std	Y+6, r26	; 0x06
     2f0:	bf 83       	std	Y+7, r27	; 0x07
     2f2:	f7 01       	movw	r30, r14
     2f4:	80 81       	ld	r24, Z
     2f6:	91 81       	ldd	r25, Z+1	; 0x01
     2f8:	a2 81       	ldd	r26, Z+2	; 0x02
     2fa:	b3 81       	ldd	r27, Z+3	; 0x03
     2fc:	88 87       	std	Y+8, r24	; 0x08
     2fe:	99 87       	std	Y+9, r25	; 0x09
     300:	aa 87       	std	Y+10, r26	; 0x0a
     302:	bb 87       	std	Y+11, r27	; 0x0b
     304:	b9 01       	movw	r22, r18
     306:	ce 01       	movw	r24, r28
     308:	0c 96       	adiw	r24, 0x0c	; 12
     30a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <_ZN9container6VectorIdEC1ERKS1_>
     30e:	b8 01       	movw	r22, r16
     310:	ce 01       	movw	r24, r28
     312:	40 96       	adiw	r24, 0x10	; 16
     314:	0e 94 58 01 	call	0x2b0	; 0x2b0 <_ZN9container6VectorIdEC1ERKS1_>
{
}
     318:	df 91       	pop	r29
     31a:	cf 91       	pop	r28
     31c:	1f 91       	pop	r17
     31e:	0f 91       	pop	r16
     320:	ff 90       	pop	r15
     322:	ef 90       	pop	r14
     324:	08 95       	ret

00000326 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>:
 * @tparam Size The array size.
 * 
 * @note The array size must exceed 0, else a compilation error will be generated.
 ********************************************************************************/
template <size_t Size>
class CallbackArray : public Array<void (*)(), Size>
     326:	43 30       	cpi	r20, 0x03	; 3
     328:	51 05       	cpc	r21, r1
     32a:	60 f4       	brcc	.+24     	; 0x344 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x1e>
     32c:	61 15       	cp	r22, r1
     32e:	71 05       	cpc	r23, r1
     330:	59 f0       	breq	.+22     	; 0x348 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x22>
     332:	44 0f       	add	r20, r20
     334:	55 1f       	adc	r21, r21
     336:	fc 01       	movw	r30, r24
     338:	e4 0f       	add	r30, r20
     33a:	f5 1f       	adc	r31, r21
     33c:	71 83       	std	Z+1, r23	; 0x01
     33e:	60 83       	st	Z, r22
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	08 95       	ret
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	08 95       	ret
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	08 95       	ret

0000034c <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>:
     34c:	66 0f       	add	r22, r22
     34e:	77 1f       	adc	r23, r23
     350:	86 0f       	add	r24, r22
     352:	97 1f       	adc	r25, r23
     354:	fc 01       	movw	r30, r24
     356:	20 81       	ld	r18, Z
     358:	31 81       	ldd	r19, Z+1	; 0x01
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	23 2b       	or	r18, r19
     35e:	09 f4       	brne	.+2      	; 0x362 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj+0x16>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	08 95       	ret

00000364 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>:
     364:	ef 92       	push	r14
     366:	ff 92       	push	r15
     368:	1f 93       	push	r17
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	7c 01       	movw	r14, r24
     370:	eb 01       	movw	r28, r22
     372:	63 30       	cpi	r22, 0x03	; 3
     374:	71 05       	cpc	r23, r1
     376:	20 f4       	brcc	.+8      	; 0x380 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1c>
     378:	0e 94 a6 01 	call	0x34c	; 0x34c <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>
     37c:	18 2f       	mov	r17, r24
     37e:	01 c0       	rjmp	.+2      	; 0x382 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1e>
     380:	10 e0       	ldi	r17, 0x00	; 0
     382:	11 23       	and	r17, r17
     384:	39 f0       	breq	.+14     	; 0x394 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x30>
     386:	cc 0f       	add	r28, r28
     388:	dd 1f       	adc	r29, r29
     38a:	ce 0d       	add	r28, r14
     38c:	df 1d       	adc	r29, r15
     38e:	e8 81       	ld	r30, Y
     390:	f9 81       	ldd	r31, Y+1	; 0x01
     392:	09 95       	icall
     394:	81 2f       	mov	r24, r17
     396:	df 91       	pop	r29
     398:	cf 91       	pop	r28
     39a:	1f 91       	pop	r17
     39c:	ff 90       	pop	r15
     39e:	ef 90       	pop	r14
     3a0:	08 95       	ret

000003a2 <_ZNK6driver4GPIO6ioPortEv>:
     3a2:	dc 01       	movw	r26, r24
     3a4:	ed 91       	ld	r30, X+
     3a6:	fc 91       	ld	r31, X
     3a8:	81 85       	ldd	r24, Z+9	; 0x09
     3aa:	92 85       	ldd	r25, Z+10	; 0x0a
     3ac:	08 95       	ret

000003ae <_ZN6driver4GPIO16disableInterruptEv>:
     3ae:	0f 93       	push	r16
     3b0:	dc 01       	movw	r26, r24
     3b2:	12 96       	adiw	r26, 0x02	; 2
     3b4:	0c 91       	ld	r16, X
     3b6:	12 97       	sbiw	r26, 0x02	; 2
     3b8:	ed 91       	ld	r30, X+
     3ba:	fc 91       	ld	r31, X
     3bc:	a6 81       	ldd	r26, Z+6	; 0x06
     3be:	b7 81       	ldd	r27, Z+7	; 0x07
     3c0:	ec 91       	ld	r30, X
     3c2:	21 e0       	ldi	r18, 0x01	; 1
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	40 e0       	ldi	r20, 0x00	; 0
     3c8:	50 e0       	ldi	r21, 0x00	; 0
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     3d6:	20 95       	com	r18
     3d8:	e2 23       	and	r30, r18
     3da:	ec 93       	st	X, r30
     3dc:	0f 91       	pop	r16
     3de:	08 95       	ret

000003e0 <_ZN6driver4GPIO7disableEv>:
     3e0:	4f 92       	push	r4
     3e2:	5f 92       	push	r5
     3e4:	6f 92       	push	r6
     3e6:	7f 92       	push	r7
     3e8:	8f 92       	push	r8
     3ea:	9f 92       	push	r9
     3ec:	af 92       	push	r10
     3ee:	bf 92       	push	r11
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	ec 01       	movw	r28, r24
     400:	0a 81       	ldd	r16, Y+2	; 0x02
     402:	e8 81       	ld	r30, Y
     404:	f9 81       	ldd	r31, Y+1	; 0x01
     406:	a0 81       	ld	r26, Z
     408:	b1 81       	ldd	r27, Z+1	; 0x01
     40a:	ec 91       	ld	r30, X
     40c:	21 e0       	ldi	r18, 0x01	; 1
     40e:	30 e0       	ldi	r19, 0x00	; 0
     410:	40 e0       	ldi	r20, 0x00	; 0
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	60 e0       	ldi	r22, 0x00	; 0
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     420:	20 95       	com	r18
     422:	e2 23       	and	r30, r18
     424:	ec 93       	st	X, r30
     426:	0a 81       	ldd	r16, Y+2	; 0x02
     428:	e8 81       	ld	r30, Y
     42a:	f9 81       	ldd	r31, Y+1	; 0x01
     42c:	a2 81       	ldd	r26, Z+2	; 0x02
     42e:	b3 81       	ldd	r27, Z+3	; 0x03
     430:	ec 91       	ld	r30, X
     432:	21 e0       	ldi	r18, 0x01	; 1
     434:	30 e0       	ldi	r19, 0x00	; 0
     436:	40 e0       	ldi	r20, 0x00	; 0
     438:	50 e0       	ldi	r21, 0x00	; 0
     43a:	60 e0       	ldi	r22, 0x00	; 0
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     446:	20 95       	com	r18
     448:	e2 23       	and	r30, r18
     44a:	ec 93       	st	X, r30
     44c:	0a 81       	ldd	r16, Y+2	; 0x02
     44e:	e8 e3       	ldi	r30, 0x38	; 56
     450:	f1 e0       	ldi	r31, 0x01	; 1
     452:	40 80       	ld	r4, Z
     454:	51 80       	ldd	r5, Z+1	; 0x01
     456:	62 80       	ldd	r6, Z+2	; 0x02
     458:	73 80       	ldd	r7, Z+3	; 0x03
     45a:	21 e0       	ldi	r18, 0x01	; 1
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	40 e0       	ldi	r20, 0x00	; 0
     460:	50 e0       	ldi	r21, 0x00	; 0
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     46e:	82 2e       	mov	r8, r18
     470:	93 2e       	mov	r9, r19
     472:	a4 2e       	mov	r10, r20
     474:	b5 2e       	mov	r11, r21
     476:	80 94       	com	r8
     478:	90 94       	com	r9
     47a:	a0 94       	com	r10
     47c:	b0 94       	com	r11
     47e:	84 20       	and	r8, r4
     480:	95 20       	and	r9, r5
     482:	a6 20       	and	r10, r6
     484:	b7 20       	and	r11, r7
     486:	80 82       	st	Z, r8
     488:	91 82       	std	Z+1, r9	; 0x01
     48a:	a2 82       	std	Z+2, r10	; 0x02
     48c:	b3 82       	std	Z+3, r11	; 0x03
     48e:	ce 01       	movw	r24, r28
     490:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_ZN6driver4GPIO16disableInterruptEv>
     494:	19 82       	std	Y+1, r1	; 0x01
     496:	18 82       	st	Y, r1
     498:	1a 82       	std	Y+2, r1	; 0x02
     49a:	df 91       	pop	r29
     49c:	cf 91       	pop	r28
     49e:	0f 91       	pop	r16
     4a0:	ff 90       	pop	r15
     4a2:	ef 90       	pop	r14
     4a4:	df 90       	pop	r13
     4a6:	cf 90       	pop	r12
     4a8:	bf 90       	pop	r11
     4aa:	af 90       	pop	r10
     4ac:	9f 90       	pop	r9
     4ae:	8f 90       	pop	r8
     4b0:	7f 90       	pop	r7
     4b2:	6f 90       	pop	r6
     4b4:	5f 90       	pop	r5
     4b6:	4f 90       	pop	r4
     4b8:	08 95       	ret

000004ba <_ZN6driver4GPIOD1Ev>:
     4ba:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_ZN6driver4GPIO7disableEv>
     4be:	08 95       	ret

000004c0 <_ZN6driver4GPIO15enableInterruptEv>:
     4c0:	0f 93       	push	r16
     4c2:	cf 93       	push	r28
     4c4:	fc 01       	movw	r30, r24
     4c6:	78 94       	sei
     4c8:	a0 81       	ld	r26, Z
     4ca:	b1 81       	ldd	r27, Z+1	; 0x01
     4cc:	18 96       	adiw	r26, 0x08	; 8
     4ce:	0c 91       	ld	r16, X
     4d0:	a8 e6       	ldi	r26, 0x68	; 104
     4d2:	b0 e0       	ldi	r27, 0x00	; 0
     4d4:	cc 91       	ld	r28, X
     4d6:	21 e0       	ldi	r18, 0x01	; 1
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	40 e0       	ldi	r20, 0x00	; 0
     4dc:	50 e0       	ldi	r21, 0x00	; 0
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     4ea:	2c 2b       	or	r18, r28
     4ec:	2c 93       	st	X, r18
     4ee:	02 81       	ldd	r16, Z+2	; 0x02
     4f0:	01 90       	ld	r0, Z+
     4f2:	f0 81       	ld	r31, Z
     4f4:	e0 2d       	mov	r30, r0
     4f6:	06 80       	ldd	r0, Z+6	; 0x06
     4f8:	f7 81       	ldd	r31, Z+7	; 0x07
     4fa:	e0 2d       	mov	r30, r0
     4fc:	a0 81       	ld	r26, Z
     4fe:	21 e0       	ldi	r18, 0x01	; 1
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 e0       	ldi	r20, 0x00	; 0
     504:	50 e0       	ldi	r21, 0x00	; 0
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	70 e0       	ldi	r23, 0x00	; 0
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     512:	2a 2b       	or	r18, r26
     514:	20 83       	st	Z, r18
     516:	cf 91       	pop	r28
     518:	0f 91       	pop	r16
     51a:	08 95       	ret

0000051c <_ZNK6driver4GPIO4readEv>:
     51c:	0f 93       	push	r16
     51e:	dc 01       	movw	r26, r24
     520:	12 96       	adiw	r26, 0x02	; 2
     522:	0c 91       	ld	r16, X
     524:	12 97       	sbiw	r26, 0x02	; 2
     526:	ed 91       	ld	r30, X+
     528:	fc 91       	ld	r31, X
     52a:	04 80       	ldd	r0, Z+4	; 0x04
     52c:	f5 81       	ldd	r31, Z+5	; 0x05
     52e:	e0 2d       	mov	r30, r0
     530:	20 81       	ld	r18, Z
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 e0       	ldi	r20, 0x00	; 0
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <__lshrdi3>
     544:	82 2f       	mov	r24, r18
     546:	81 70       	andi	r24, 0x01	; 1
     548:	0f 91       	pop	r16
     54a:	08 95       	ret

0000054c <_ZNK6driver4GPIO11addCallbackEPFvvE>:
     54c:	dc 01       	movw	r26, r24
     54e:	ed 91       	ld	r30, X+
     550:	fc 91       	ld	r31, X
     552:	82 81       	ldd	r24, Z+2	; 0x02
     554:	93 81       	ldd	r25, Z+3	; 0x03
     556:	85 32       	cpi	r24, 0x25	; 37
     558:	91 05       	cpc	r25, r1
     55a:	39 f4       	brne	.+14     	; 0x56a <_ZNK6driver4GPIO11addCallbackEPFvvE+0x1e>
     55c:	40 e0       	ldi	r20, 0x00	; 0
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	8c e3       	ldi	r24, 0x3C	; 60
     562:	91 e0       	ldi	r25, 0x01	; 1
     564:	0e 94 93 01 	call	0x326	; 0x326 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     568:	08 95       	ret
     56a:	88 32       	cpi	r24, 0x28	; 40
     56c:	91 05       	cpc	r25, r1
     56e:	39 f4       	brne	.+14     	; 0x57e <_ZNK6driver4GPIO11addCallbackEPFvvE+0x32>
     570:	41 e0       	ldi	r20, 0x01	; 1
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	8c e3       	ldi	r24, 0x3C	; 60
     576:	91 e0       	ldi	r25, 0x01	; 1
     578:	0e 94 93 01 	call	0x326	; 0x326 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     57c:	08 95       	ret
     57e:	8b 97       	sbiw	r24, 0x2b	; 43
     580:	39 f4       	brne	.+14     	; 0x590 <_ZNK6driver4GPIO11addCallbackEPFvvE+0x44>
     582:	42 e0       	ldi	r20, 0x02	; 2
     584:	50 e0       	ldi	r21, 0x00	; 0
     586:	8c e3       	ldi	r24, 0x3C	; 60
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	0e 94 93 01 	call	0x326	; 0x326 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     58e:	08 95       	ret
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	08 95       	ret

00000594 <_ZN6driver4GPIO24enableInterruptsOnIoPortENS0_6IoPortE>:
     594:	0f 93       	push	r16
     596:	1f 93       	push	r17
     598:	78 94       	sei
     59a:	e8 e6       	ldi	r30, 0x68	; 104
     59c:	f0 e0       	ldi	r31, 0x00	; 0
     59e:	a0 81       	ld	r26, Z
     5a0:	8c 01       	movw	r16, r24
     5a2:	11 27       	eor	r17, r17
     5a4:	21 e0       	ldi	r18, 0x01	; 1
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	50 e0       	ldi	r21, 0x00	; 0
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     5b8:	2a 2b       	or	r18, r26
     5ba:	20 83       	st	Z, r18
     5bc:	1f 91       	pop	r17
     5be:	0f 91       	pop	r16
     5c0:	08 95       	ret

000005c2 <_ZN6driver4GPIO24enableInterruptsOnIoPortEv>:
     5c2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <_ZNK6driver4GPIO6ioPortEv>
     5c6:	0e 94 ca 02 	call	0x594	; 0x594 <_ZN6driver4GPIO24enableInterruptsOnIoPortENS0_6IoPortE>
     5ca:	08 95       	ret

000005cc <_ZN6driver4GPIO25disableInterruptsOnIoPortENS0_6IoPortE>:
     5cc:	0f 93       	push	r16
     5ce:	1f 93       	push	r17
     5d0:	a8 e6       	ldi	r26, 0x68	; 104
     5d2:	b0 e0       	ldi	r27, 0x00	; 0
     5d4:	ec 91       	ld	r30, X
     5d6:	8c 01       	movw	r16, r24
     5d8:	11 27       	eor	r17, r17
     5da:	21 e0       	ldi	r18, 0x01	; 1
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     5ee:	20 95       	com	r18
     5f0:	e2 23       	and	r30, r18
     5f2:	ec 93       	st	X, r30
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	08 95       	ret

000005fa <_ZN6driver4GPIO25disableInterruptsOnIoPortEv>:
     5fa:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <_ZNK6driver4GPIO6ioPortEv>
     5fe:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_ZN6driver4GPIO25disableInterruptsOnIoPortENS0_6IoPortE>
     602:	08 95       	ret

00000604 <_ZN6driver4GPIO16setIoRegPointersEh>:
     604:	68 30       	cpi	r22, 0x08	; 8
     606:	38 f4       	brcc	.+14     	; 0x616 <_ZN6driver4GPIO16setIoRegPointersEh+0x12>
     608:	26 e0       	ldi	r18, 0x06	; 6
     60a:	31 e0       	ldi	r19, 0x01	; 1
     60c:	fc 01       	movw	r30, r24
     60e:	31 83       	std	Z+1, r19	; 0x01
     610:	20 83       	st	Z, r18
     612:	62 83       	std	Z+2, r22	; 0x02
     614:	08 95       	ret
     616:	28 ef       	ldi	r18, 0xF8	; 248
     618:	26 0f       	add	r18, r22
     61a:	26 30       	cpi	r18, 0x06	; 6
     61c:	38 f4       	brcc	.+14     	; 0x62c <_ZN6driver4GPIO16setIoRegPointersEh+0x28>
     61e:	41 e1       	ldi	r20, 0x11	; 17
     620:	51 e0       	ldi	r21, 0x01	; 1
     622:	fc 01       	movw	r30, r24
     624:	51 83       	std	Z+1, r21	; 0x01
     626:	40 83       	st	Z, r20
     628:	22 83       	std	Z+2, r18	; 0x02
     62a:	08 95       	ret
     62c:	6e 50       	subi	r22, 0x0E	; 14
     62e:	66 30       	cpi	r22, 0x06	; 6
     630:	30 f4       	brcc	.+12     	; 0x63e <_ZN6driver4GPIO16setIoRegPointersEh+0x3a>
     632:	26 e0       	ldi	r18, 0x06	; 6
     634:	31 e0       	ldi	r19, 0x01	; 1
     636:	fc 01       	movw	r30, r24
     638:	31 83       	std	Z+1, r19	; 0x01
     63a:	20 83       	st	Z, r18
     63c:	62 83       	std	Z+2, r22	; 0x02
     63e:	08 95       	ret

00000640 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE>:
     640:	0f 93       	push	r16
     642:	61 30       	cpi	r22, 0x01	; 1
     644:	71 05       	cpc	r23, r1
     646:	b9 f4       	brne	.+46     	; 0x676 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE+0x36>
     648:	dc 01       	movw	r26, r24
     64a:	12 96       	adiw	r26, 0x02	; 2
     64c:	0c 91       	ld	r16, X
     64e:	12 97       	sbiw	r26, 0x02	; 2
     650:	ed 91       	ld	r30, X+
     652:	fc 91       	ld	r31, X
     654:	02 80       	ldd	r0, Z+2	; 0x02
     656:	f3 81       	ldd	r31, Z+3	; 0x03
     658:	e0 2d       	mov	r30, r0
     65a:	a0 81       	ld	r26, Z
     65c:	21 e0       	ldi	r18, 0x01	; 1
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	40 e0       	ldi	r20, 0x00	; 0
     662:	50 e0       	ldi	r21, 0x00	; 0
     664:	60 e0       	ldi	r22, 0x00	; 0
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     670:	2a 2b       	or	r18, r26
     672:	20 83       	st	Z, r18
     674:	18 c0       	rjmp	.+48     	; 0x6a6 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE+0x66>
     676:	62 30       	cpi	r22, 0x02	; 2
     678:	71 05       	cpc	r23, r1
     67a:	a9 f4       	brne	.+42     	; 0x6a6 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE+0x66>
     67c:	fc 01       	movw	r30, r24
     67e:	02 81       	ldd	r16, Z+2	; 0x02
     680:	01 90       	ld	r0, Z+
     682:	f0 81       	ld	r31, Z
     684:	e0 2d       	mov	r30, r0
     686:	01 90       	ld	r0, Z+
     688:	f0 81       	ld	r31, Z
     68a:	e0 2d       	mov	r30, r0
     68c:	a0 81       	ld	r26, Z
     68e:	21 e0       	ldi	r18, 0x01	; 1
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     6a2:	2a 2b       	or	r18, r26
     6a4:	20 83       	st	Z, r18
     6a6:	0f 91       	pop	r16
     6a8:	08 95       	ret

000006aa <_ZN6driver4GPIO4initEhNS0_9DirectionE>:
     6aa:	4f 92       	push	r4
     6ac:	5f 92       	push	r5
     6ae:	6f 92       	push	r6
     6b0:	7f 92       	push	r7
     6b2:	8f 92       	push	r8
     6b4:	9f 92       	push	r9
     6b6:	af 92       	push	r10
     6b8:	bf 92       	push	r11
     6ba:	cf 92       	push	r12
     6bc:	df 92       	push	r13
     6be:	ef 92       	push	r14
     6c0:	ff 92       	push	r15
     6c2:	0f 93       	push	r16
     6c4:	dc 01       	movw	r26, r24
     6c6:	e6 2f       	mov	r30, r22
     6c8:	7a 01       	movw	r14, r20
     6ca:	64 31       	cpi	r22, 0x14	; 20
     6cc:	d8 f4       	brcc	.+54     	; 0x704 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5a>
     6ce:	64 31       	cpi	r22, 0x14	; 20
     6d0:	b8 f4       	brcc	.+46     	; 0x700 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x56>
     6d2:	40 91 38 01 	lds	r20, 0x0138	; 0x800138 <__data_end>
     6d6:	50 91 39 01 	lds	r21, 0x0139	; 0x800139 <__data_end+0x1>
     6da:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <__data_end+0x2>
     6de:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <__data_end+0x3>
     6e2:	3a 01       	movw	r6, r20
     6e4:	4b 01       	movw	r8, r22
     6e6:	24 2f       	mov	r18, r20
     6e8:	37 2d       	mov	r19, r7
     6ea:	48 2d       	mov	r20, r8
     6ec:	59 2d       	mov	r21, r9
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	0e 2f       	mov	r16, r30
     6f8:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <__lshrdi3>
     6fc:	21 70       	andi	r18, 0x01	; 1
     6fe:	03 c0       	rjmp	.+6      	; 0x706 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5c>
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	01 c0       	rjmp	.+2      	; 0x706 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5c>
     704:	21 e0       	ldi	r18, 0x01	; 1
     706:	21 11       	cpse	r18, r1
     708:	29 c0       	rjmp	.+82     	; 0x75c <_ZN6driver4GPIO4initEhNS0_9DirectionE+0xb2>
     70a:	67 01       	movw	r12, r14
     70c:	0e 2f       	mov	r16, r30
     70e:	7d 01       	movw	r14, r26
     710:	6e 2f       	mov	r22, r30
     712:	cd 01       	movw	r24, r26
     714:	0e 94 02 03 	call	0x604	; 0x604 <_ZN6driver4GPIO16setIoRegPointersEh>
     718:	b6 01       	movw	r22, r12
     71a:	c7 01       	movw	r24, r14
     71c:	0e 94 20 03 	call	0x640	; 0x640 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE>
     720:	e8 e3       	ldi	r30, 0x38	; 56
     722:	f1 e0       	ldi	r31, 0x01	; 1
     724:	40 80       	ld	r4, Z
     726:	51 80       	ldd	r5, Z+1	; 0x01
     728:	62 80       	ldd	r6, Z+2	; 0x02
     72a:	73 80       	ldd	r7, Z+3	; 0x03
     72c:	21 e0       	ldi	r18, 0x01	; 1
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
     740:	82 2e       	mov	r8, r18
     742:	93 2e       	mov	r9, r19
     744:	a4 2e       	mov	r10, r20
     746:	b5 2e       	mov	r11, r21
     748:	84 28       	or	r8, r4
     74a:	95 28       	or	r9, r5
     74c:	a6 28       	or	r10, r6
     74e:	b7 28       	or	r11, r7
     750:	80 82       	st	Z, r8
     752:	91 82       	std	Z+1, r9	; 0x01
     754:	a2 82       	std	Z+2, r10	; 0x02
     756:	b3 82       	std	Z+3, r11	; 0x03
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	01 c0       	rjmp	.+2      	; 0x75e <_ZN6driver4GPIO4initEhNS0_9DirectionE+0xb4>
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	0f 91       	pop	r16
     760:	ff 90       	pop	r15
     762:	ef 90       	pop	r14
     764:	df 90       	pop	r13
     766:	cf 90       	pop	r12
     768:	bf 90       	pop	r11
     76a:	af 90       	pop	r10
     76c:	9f 90       	pop	r9
     76e:	8f 90       	pop	r8
     770:	7f 90       	pop	r7
     772:	6f 90       	pop	r6
     774:	5f 90       	pop	r5
     776:	4f 90       	pop	r4
     778:	08 95       	ret

0000077a <_ZN6driver4GPIOC1EhNS0_9DirectionE>:
     77a:	fc 01       	movw	r30, r24
     77c:	11 82       	std	Z+1, r1	; 0x01
     77e:	10 82       	st	Z, r1
     780:	12 82       	std	Z+2, r1	; 0x02
     782:	0e 94 55 03 	call	0x6aa	; 0x6aa <_ZN6driver4GPIO4initEhNS0_9DirectionE>
     786:	08 95       	ret

00000788 <__vector_3>:
     788:	1f 92       	push	r1
     78a:	0f 92       	push	r0
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	0f 92       	push	r0
     790:	11 24       	eor	r1, r1
     792:	2f 93       	push	r18
     794:	3f 93       	push	r19
     796:	4f 93       	push	r20
     798:	5f 93       	push	r21
     79a:	6f 93       	push	r22
     79c:	7f 93       	push	r23
     79e:	8f 93       	push	r24
     7a0:	9f 93       	push	r25
     7a2:	af 93       	push	r26
     7a4:	bf 93       	push	r27
     7a6:	ef 93       	push	r30
     7a8:	ff 93       	push	r31
     7aa:	60 e0       	ldi	r22, 0x00	; 0
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	8c e3       	ldi	r24, 0x3C	; 60
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	0e 94 b2 01 	call	0x364	; 0x364 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     7b6:	ff 91       	pop	r31
     7b8:	ef 91       	pop	r30
     7ba:	bf 91       	pop	r27
     7bc:	af 91       	pop	r26
     7be:	9f 91       	pop	r25
     7c0:	8f 91       	pop	r24
     7c2:	7f 91       	pop	r23
     7c4:	6f 91       	pop	r22
     7c6:	5f 91       	pop	r21
     7c8:	4f 91       	pop	r20
     7ca:	3f 91       	pop	r19
     7cc:	2f 91       	pop	r18
     7ce:	0f 90       	pop	r0
     7d0:	0f be       	out	0x3f, r0	; 63
     7d2:	0f 90       	pop	r0
     7d4:	1f 90       	pop	r1
     7d6:	18 95       	reti

000007d8 <__vector_4>:
     7d8:	1f 92       	push	r1
     7da:	0f 92       	push	r0
     7dc:	0f b6       	in	r0, 0x3f	; 63
     7de:	0f 92       	push	r0
     7e0:	11 24       	eor	r1, r1
     7e2:	2f 93       	push	r18
     7e4:	3f 93       	push	r19
     7e6:	4f 93       	push	r20
     7e8:	5f 93       	push	r21
     7ea:	6f 93       	push	r22
     7ec:	7f 93       	push	r23
     7ee:	8f 93       	push	r24
     7f0:	9f 93       	push	r25
     7f2:	af 93       	push	r26
     7f4:	bf 93       	push	r27
     7f6:	ef 93       	push	r30
     7f8:	ff 93       	push	r31
     7fa:	61 e0       	ldi	r22, 0x01	; 1
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	8c e3       	ldi	r24, 0x3C	; 60
     800:	91 e0       	ldi	r25, 0x01	; 1
     802:	0e 94 b2 01 	call	0x364	; 0x364 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     806:	ff 91       	pop	r31
     808:	ef 91       	pop	r30
     80a:	bf 91       	pop	r27
     80c:	af 91       	pop	r26
     80e:	9f 91       	pop	r25
     810:	8f 91       	pop	r24
     812:	7f 91       	pop	r23
     814:	6f 91       	pop	r22
     816:	5f 91       	pop	r21
     818:	4f 91       	pop	r20
     81a:	3f 91       	pop	r19
     81c:	2f 91       	pop	r18
     81e:	0f 90       	pop	r0
     820:	0f be       	out	0x3f, r0	; 63
     822:	0f 90       	pop	r0
     824:	1f 90       	pop	r1
     826:	18 95       	reti

00000828 <__vector_5>:
     828:	1f 92       	push	r1
     82a:	0f 92       	push	r0
     82c:	0f b6       	in	r0, 0x3f	; 63
     82e:	0f 92       	push	r0
     830:	11 24       	eor	r1, r1
     832:	2f 93       	push	r18
     834:	3f 93       	push	r19
     836:	4f 93       	push	r20
     838:	5f 93       	push	r21
     83a:	6f 93       	push	r22
     83c:	7f 93       	push	r23
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	af 93       	push	r26
     844:	bf 93       	push	r27
     846:	ef 93       	push	r30
     848:	ff 93       	push	r31
     84a:	62 e0       	ldi	r22, 0x02	; 2
     84c:	70 e0       	ldi	r23, 0x00	; 0
     84e:	8c e3       	ldi	r24, 0x3C	; 60
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	0e 94 b2 01 	call	0x364	; 0x364 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     856:	ff 91       	pop	r31
     858:	ef 91       	pop	r30
     85a:	bf 91       	pop	r27
     85c:	af 91       	pop	r26
     85e:	9f 91       	pop	r25
     860:	8f 91       	pop	r24
     862:	7f 91       	pop	r23
     864:	6f 91       	pop	r22
     866:	5f 91       	pop	r21
     868:	4f 91       	pop	r20
     86a:	3f 91       	pop	r19
     86c:	2f 91       	pop	r18
     86e:	0f 90       	pop	r0
     870:	0f be       	out	0x3f, r0	; 63
     872:	0f 90       	pop	r0
     874:	1f 90       	pop	r1
     876:	18 95       	reti

00000878 <_ZN9container5ArrayIPFvvELj3EEC1Ev>:
     878:	26 e0       	ldi	r18, 0x06	; 6
     87a:	fc 01       	movw	r30, r24
     87c:	11 92       	st	Z+, r1
     87e:	2a 95       	dec	r18
     880:	e9 f7       	brne	.-6      	; 0x87c <_ZN9container5ArrayIPFvvELj3EEC1Ev+0x4>
     882:	08 95       	ret

00000884 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>:
     884:	0e 94 3c 04 	call	0x878	; 0x878 <_ZN9container5ArrayIPFvvELj3EEC1Ev>
     888:	08 95       	ret

0000088a <_Z41__static_initialization_and_destruction_0ii>:
ISR (PCINT2_vect) 
{
    callbacks.call(CallbackIndex::PortD);
}

} // namespace driver
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	39 f4       	brne	.+14     	; 0x89c <_Z41__static_initialization_and_destruction_0ii+0x12>
     88e:	6f 3f       	cpi	r22, 0xFF	; 255
     890:	7f 4f       	sbci	r23, 0xFF	; 255
     892:	21 f4       	brne	.+8      	; 0x89c <_Z41__static_initialization_and_destruction_0ii+0x12>

namespace
{

constexpr uint8_t NumIoPorts{3U}; 
container::CallbackArray<NumIoPorts> callbacks{};
     894:	8c e3       	ldi	r24, 0x3C	; 60
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	0e 94 42 04 	call	0x884	; 0x884 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>
     89c:	08 95       	ret

0000089e <_GLOBAL__sub_I__ZN6driver4GPIO8myHwPinBE>:
ISR (PCINT2_vect) 
{
    callbacks.call(CallbackIndex::PortD);
}

} // namespace driver
     89e:	6f ef       	ldi	r22, 0xFF	; 255
     8a0:	7f ef       	ldi	r23, 0xFF	; 255
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 45 04 	call	0x88a	; 0x88a <_Z41__static_initialization_and_destruction_0ii>
     8aa:	08 95       	ret

000008ac <_GLOBAL__sub_D__ZN6driver4GPIO8myHwPinBE>:
     8ac:	6f ef       	ldi	r22, 0xFF	; 255
     8ae:	7f ef       	ldi	r23, 0xFF	; 255
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 45 04 	call	0x88a	; 0x88a <_Z41__static_initialization_and_destruction_0ii>
     8b8:	08 95       	ret

000008ba <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>:
        utils::round<uint16_t>(F_CPU / 16.0 * baudRateKbps);
}

// -----------------------------------------------------------------------------
void printChar(const char c)
{
     8ba:	0f 93       	push	r16
     8bc:	e8 2f       	mov	r30, r24
template <typename T>
constexpr bool read(const volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    return reg & (1ULL << bit);
     8be:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	40 e0       	ldi	r20, 0x00	; 0
     8c6:	50 e0       	ldi	r21, 0x00	; 0
     8c8:	60 e0       	ldi	r22, 0x00	; 0
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	05 e0       	ldi	r16, 0x05	; 5
     8d2:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <__lshrdi3>
     8d6:	21 70       	andi	r18, 0x01	; 1
    while (utils::read(UCSR0A, UDRE0) == 0U);
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	40 e0       	ldi	r20, 0x00	; 0
     8dc:	50 e0       	ldi	r21, 0x00	; 0
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	70 e0       	ldi	r23, 0x00	; 0
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__cmpdi2_s8>
     8ec:	41 f3       	breq	.-48     	; 0x8be <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc+0x4>
    UDR0 = c;
     8ee:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     8f2:	0f 91       	pop	r16
     8f4:	08 95       	ret

000008f6 <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc>:

// -----------------------------------------------------------------------------
void print(const char* s)
{
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
     8fa:	ec 01       	movw	r28, r24
    for (const char* i{s}; *i; ++i)
     8fc:	88 81       	ld	r24, Y
     8fe:	88 23       	and	r24, r24
     900:	51 f0       	breq	.+20     	; 0x916 <__stack+0x17>
    {
        printChar(*i);
     902:	0e 94 5d 04 	call	0x8ba	; 0x8ba <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>

        if (*i == detail::CarriageReturn)
     906:	88 81       	ld	r24, Y
     908:	8d 30       	cpi	r24, 0x0D	; 13
     90a:	19 f4       	brne	.+6      	; 0x912 <__stack+0x13>
        {
            printChar(detail::NewLine);
     90c:	8a e0       	ldi	r24, 0x0A	; 10
     90e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>
}

// -----------------------------------------------------------------------------
void print(const char* s)
{
    for (const char* i{s}; *i; ++i)
     912:	21 96       	adiw	r28, 0x01	; 1
     914:	f3 cf       	rjmp	.-26     	; 0x8fc <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc+0x6>
        if (*i == detail::CarriageReturn)
        {
            printChar(detail::NewLine);
        }
    }
}
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	08 95       	ret

0000091c <_ZN6driver6serial12_GLOBAL__N_14initEm>:
// -----------------------------------------------------------------------------
void init(const uint32_t baudRateKbps)
{
    static bool serialInitialized{false};

    if (!serialInitialized)
     91c:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <_ZZN6driver6serial12_GLOBAL__N_14initEmE17serialInitialized>
     920:	21 11       	cpse	r18, r1
     922:	30 c0       	rjmp	.+96     	; 0x984 <_ZN6driver6serial12_GLOBAL__N_14initEm+0x68>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
     924:	e1 ec       	ldi	r30, 0xC1	; 193
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	20 81       	ld	r18, Z
     92a:	28 60       	ori	r18, 0x08	; 8
     92c:	20 83       	st	Z, r18
     92e:	e2 ec       	ldi	r30, 0xC2	; 194
     930:	f0 e0       	ldi	r31, 0x00	; 0
     932:	20 81       	ld	r18, Z
     934:	22 60       	ori	r18, 0x02	; 2
     936:	20 83       	st	Z, r18
     938:	20 81       	ld	r18, Z
     93a:	24 60       	ori	r18, 0x04	; 4
     93c:	20 83       	st	Z, r18

// -----------------------------------------------------------------------------
constexpr uint16_t getBaudRateValue(const uint32_t baudRateKbps)
{
    return baudRateKbps == 9600U ? 103U :
        utils::round<uint16_t>(F_CPU / 16.0 * baudRateKbps);
     93e:	60 38       	cpi	r22, 0x80	; 128
     940:	25 e2       	ldi	r18, 0x25	; 37
     942:	72 07       	cpc	r23, r18
     944:	81 05       	cpc	r24, r1
     946:	91 05       	cpc	r25, r1
     948:	89 f0       	breq	.+34     	; 0x96c <_ZN6driver6serial12_GLOBAL__N_14initEm+0x50>
     94a:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <__floatunsisf>
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	34 e2       	ldi	r19, 0x24	; 36
     952:	44 e7       	ldi	r20, 0x74	; 116
     954:	59 e4       	ldi	r21, 0x49	; 73
     956:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__mulsf3>
constexpr T1 round(const T2 value) 
{
    static_assert(type_traits::is_integral<T1>::value && 
                  type_traits::is_arithmetic<T2>::value, 
                  "Rounding only possible for arithmetic types!");
    return static_cast<T1>(value + 0.5);
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	40 e0       	ldi	r20, 0x00	; 0
     960:	5f e3       	ldi	r21, 0x3F	; 63
     962:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__addsf3>
     966:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <__fixunssfsi>
     96a:	02 c0       	rjmp	.+4      	; 0x970 <_ZN6driver6serial12_GLOBAL__N_14initEm+0x54>
     96c:	67 e6       	ldi	r22, 0x67	; 103
     96e:	70 e0       	ldi	r23, 0x00	; 0

    if (!serialInitialized)
    {
        utils::set(UCSR0B, TXEN0);
        utils::set(UCSR0C, UCSZ00, UCSZ01);
        UBRR0 = detail::getBaudRateValue(baudRateKbps);
     970:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     974:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
        UDR0 = detail::CarriageReturn;
     978:	8d e0       	ldi	r24, 0x0D	; 13
     97a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
        serialInitialized = true;
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_ZZN6driver6serial12_GLOBAL__N_14initEmE17serialInitialized>
     984:	08 95       	ret

00000986 <_ZN12_GLOBAL__N_112inputVoltageEh>:
 *
 * @return The input voltage in volts.
 ********************************************************************************/
double inputVoltage(const uint8_t pin) 
{
    return adc::getDutyCycle(pin) * Vcc;
     986:	0e 94 b3 00 	call	0x166	; 0x166 <_ZN6driver3adc12getDutyCycleEh>
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	40 ea       	ldi	r20, 0xA0	; 160
     990:	50 e4       	ldi	r21, 0x40	; 64
     992:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__mulsf3>
}
     996:	08 95       	ret

00000998 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_>:
    }
}

// -----------------------------------------------------------------------------
template <typename... Args>
bool printf(const char* format, const Args&... args)
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
{
    if (format == nullptr) { return false; }
     9a4:	00 97       	sbiw	r24, 0x00	; 0
     9a6:	d1 f1       	breq	.+116    	; 0xa1c <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x84>
     9a8:	8b 01       	movw	r16, r22
     9aa:	ec 01       	movw	r28, r24
    if (sizeof...(args) > 0)
    {
        const int length{snprintf(nullptr, 0, format, nullptr)};
     9ac:	1f 92       	push	r1
     9ae:	1f 92       	push	r1
     9b0:	df 93       	push	r29
     9b2:	cf 93       	push	r28
     9b4:	1f 92       	push	r1
     9b6:	1f 92       	push	r1
     9b8:	1f 92       	push	r1
     9ba:	1f 92       	push	r1
     9bc:	0e 94 64 10 	call	0x20c8	; 0x20c8 <snprintf>
        char* buffer{(char*)malloc(sizeof(char) * length)};
     9c0:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <malloc>
     9c4:	7c 01       	movw	r14, r24
        if (!buffer) { return false; }
     9c6:	ed b7       	in	r30, 0x3d	; 61
     9c8:	fe b7       	in	r31, 0x3e	; 62
     9ca:	38 96       	adiw	r30, 0x08	; 8
     9cc:	0f b6       	in	r0, 0x3f	; 63
     9ce:	f8 94       	cli
     9d0:	fe bf       	out	0x3e, r31	; 62
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	ed bf       	out	0x3d, r30	; 61
     9d6:	00 97       	sbiw	r24, 0x00	; 0
     9d8:	19 f1       	breq	.+70     	; 0xa20 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x88>
        buffer[0U] = '\0';
     9da:	fc 01       	movw	r30, r24
     9dc:	10 82       	st	Z, r1
        sprintf(buffer, format, args...);
     9de:	f8 01       	movw	r30, r16
     9e0:	80 81       	ld	r24, Z
     9e2:	91 81       	ldd	r25, Z+1	; 0x01
     9e4:	22 81       	ldd	r18, Z+2	; 0x02
     9e6:	33 81       	ldd	r19, Z+3	; 0x03
     9e8:	3f 93       	push	r19
     9ea:	2f 93       	push	r18
     9ec:	9f 93       	push	r25
     9ee:	8f 93       	push	r24
     9f0:	df 93       	push	r29
     9f2:	cf 93       	push	r28
     9f4:	ff 92       	push	r15
     9f6:	ef 92       	push	r14
     9f8:	0e 94 94 10 	call	0x2128	; 0x2128 <sprintf>
        detail::print(buffer);
     9fc:	c7 01       	movw	r24, r14
     9fe:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc>
        free(buffer);
     a02:	c7 01       	movw	r24, r14
     a04:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <free>
    }
    else
    {
        detail::print(format);
    }
    return true;
     a08:	ed b7       	in	r30, 0x3d	; 61
     a0a:	fe b7       	in	r31, 0x3e	; 62
     a0c:	38 96       	adiw	r30, 0x08	; 8
     a0e:	0f b6       	in	r0, 0x3f	; 63
     a10:	f8 94       	cli
     a12:	fe bf       	out	0x3e, r31	; 62
     a14:	0f be       	out	0x3f, r0	; 63
     a16:	ed bf       	out	0x3d, r30	; 61
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	03 c0       	rjmp	.+6      	; 0xa22 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x8a>

// -----------------------------------------------------------------------------
template <typename... Args>
bool printf(const char* format, const Args&... args)
{
    if (format == nullptr) { return false; }
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	01 c0       	rjmp	.+2      	; 0xa22 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x8a>
    if (sizeof...(args) > 0)
    {
        const int length{snprintf(nullptr, 0, format, nullptr)};
        char* buffer{(char*)malloc(sizeof(char) * length)};
        if (!buffer) { return false; }
     a20:	80 e0       	ldi	r24, 0x00	; 0
    else
    {
        detail::print(format);
    }
    return true;
}
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	ff 90       	pop	r15
     a2c:	ef 90       	pop	r14
     a2e:	08 95       	ret

00000a30 <_ZN12_GLOBAL__N_118predictTemperatureEv>:

/**
 * @brief Predicts the temperature based on the input voltage.
 */
void predictTemperature()
{
     a30:	cf 92       	push	r12
     a32:	df 92       	push	r13
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	28 97       	sbiw	r28, 0x08	; 8
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
    const auto input{inputVoltage(tempSensorPin)};
     a4c:	82 e0       	ldi	r24, 0x02	; 2
     a4e:	0e 94 c3 04 	call	0x986	; 0x986 <_ZN12_GLOBAL__N_112inputVoltageEh>
     a52:	69 83       	std	Y+1, r22	; 0x01
     a54:	7a 83       	std	Y+2, r23	; 0x02
     a56:	8b 83       	std	Y+3, r24	; 0x03
     a58:	9c 83       	std	Y+4, r25	; 0x04
    
    const auto prediction{linReg.predict(input)};
     a5a:	be 01       	movw	r22, r28
     a5c:	6f 5f       	subi	r22, 0xFF	; 255
     a5e:	7f 4f       	sbci	r23, 0xFF	; 255
     a60:	83 e4       	ldi	r24, 0x43	; 67
     a62:	91 e0       	ldi	r25, 0x01	; 1
     a64:	0e 94 c1 00 	call	0x182	; 0x182 <_ZNK2ml6LinReg7predictERKd>
     a68:	6b 01       	movw	r12, r22
     a6a:	7c 01       	movw	r14, r24
    const auto temperature{prediction >= 0 ? prediction + 0.5 : prediction - 0.5};
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	a9 01       	movw	r20, r18
     a72:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__gesf2>
     a76:	88 23       	and	r24, r24
     a78:	4c f0       	brlt	.+18     	; 0xa8c <_ZN12_GLOBAL__N_118predictTemperatureEv+0x5c>
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	40 e0       	ldi	r20, 0x00	; 0
     a80:	5f e3       	ldi	r21, 0x3F	; 63
     a82:	c7 01       	movw	r24, r14
     a84:	b6 01       	movw	r22, r12
     a86:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__addsf3>
     a8a:	08 c0       	rjmp	.+16     	; 0xa9c <_ZN12_GLOBAL__N_118predictTemperatureEv+0x6c>
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	5f e3       	ldi	r21, 0x3F	; 63
     a94:	c7 01       	movw	r24, r14
     a96:	b6 01       	movw	r22, r12
     a98:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__subsf3>
     a9c:	6d 83       	std	Y+5, r22	; 0x05
     a9e:	7e 83       	std	Y+6, r23	; 0x06
     aa0:	8f 83       	std	Y+7, r24	; 0x07
     aa2:	98 87       	std	Y+8, r25	; 0x08
    serial::printf("%d ", temperature);
     aa4:	be 01       	movw	r22, r28
     aa6:	6b 5f       	subi	r22, 0xFB	; 251
     aa8:	7f 4f       	sbci	r23, 0xFF	; 255
     aaa:	84 e3       	ldi	r24, 0x34	; 52
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_>
}
     ab2:	28 96       	adiw	r28, 0x08	; 8
     ab4:	0f b6       	in	r0, 0x3f	; 63
     ab6:	f8 94       	cli
     ab8:	de bf       	out	0x3e, r29	; 62
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	cd bf       	out	0x3d, r28	; 61
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	ff 90       	pop	r15
     ac4:	ef 90       	pop	r14
     ac6:	df 90       	pop	r13
     ac8:	cf 90       	pop	r12
     aca:	08 95       	ret

00000acc <_ZN12_GLOBAL__N_123predictionTimerCallbackEv>:
 ********************************************************************************/
void predictionTimerCallback(void) 
{
    /** @attention Add code to predict the temperature! 
     *             Also remove the Swedish comment. */
    predictTemperature();
     acc:	0e 94 18 05 	call	0xa30	; 0xa30 <_ZN12_GLOBAL__N_118predictTemperatureEv>
    predictionTimer.restart();
     ad0:	8f e5       	ldi	r24, 0x5F	; 95
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	0e 94 95 09 	call	0x132a	; 0x132a <_ZN6driver5Timer7restartEv>
     ad8:	08 95       	ret

00000ada <_ZN12_GLOBAL__N_121debounceTimerCallbackEv>:
 * @brief Enables pin change interrupts on the button's I/O port 300 ms after
 *        press or release to reduce the effects of contact bounces.
 ********************************************************************************/
void debounceTimerCallback(void) 
{
    debounceTimer.stop();
     ada:	88 e6       	ldi	r24, 0x68	; 104
     adc:	91 e0       	ldi	r25, 0x01	; 1
     ade:	0e 94 77 09 	call	0x12ee	; 0x12ee <_ZN6driver5Timer4stopEv>
    predictionButton.enableInterruptsOnIoPort();
     ae2:	81 e7       	ldi	r24, 0x71	; 113
     ae4:	91 e0       	ldi	r25, 0x01	; 1
     ae6:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_ZN6driver4GPIO24enableInterruptsOnIoPortEv>
     aea:	08 95       	ret

00000aec <_ZN12_GLOBAL__N_114buttonCallbackEv>:
 *        Pin change interrupts are disabled for 300 ms on the button's I/O port
 *        to reduce the effects of contact bounces.
 ********************************************************************************/
void buttonCallback(void) 
{
     predictionButton.disableInterruptsOnIoPort();
     aec:	81 e7       	ldi	r24, 0x71	; 113
     aee:	91 e0       	ldi	r25, 0x01	; 1
     af0:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_ZN6driver4GPIO25disableInterruptsOnIoPortEv>
     debounceTimer.start();
     af4:	88 e6       	ldi	r24, 0x68	; 104
     af6:	91 e0       	ldi	r25, 0x01	; 1
     af8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <_ZN6driver5Timer5startEv>

     if (predictionButton.read())
     afc:	81 e7       	ldi	r24, 0x71	; 113
     afe:	91 e0       	ldi	r25, 0x01	; 1
     b00:	0e 94 8e 02 	call	0x51c	; 0x51c <_ZNK6driver4GPIO4readEv>
     b04:	88 23       	and	r24, r24
     b06:	31 f0       	breq	.+12     	; 0xb14 <_ZN12_GLOBAL__N_114buttonCallbackEv+0x28>
     {
         /** @attention Add code to predict the temperature and reset the prediction timer!
          *             Also remove the Swedish comments. */
         predictTemperature();      // Prediktera temperaturen.
     b08:	0e 94 18 05 	call	0xa30	; 0xa30 <_ZN12_GLOBAL__N_118predictTemperatureEv>
         predictionTimer.restart(); // Nollst�ll 60-sekunderstimern.
     b0c:	8f e5       	ldi	r24, 0x5F	; 95
     b0e:	91 e0       	ldi	r25, 0x01	; 1
     b10:	0e 94 95 09 	call	0x132a	; 0x132a <_ZN6driver5Timer7restartEv>
     b14:	08 95       	ret

00000b16 <main>:
 * @brief Sets callback routines, enabled pin change interrupt on predictionButton and
 *        enables the watchdog timer in system reset mode.
 ********************************************************************************/
inline void setup(void) 
{
    adc::init();
     b16:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN6driver3adc4initEv>
    serial::init();
     b1a:	60 e8       	ldi	r22, 0x80	; 128
     b1c:	75 e2       	ldi	r23, 0x25	; 37
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 8e 04 	call	0x91c	; 0x91c <_ZN6driver6serial12_GLOBAL__N_14initEm>

    /** @note Consider using names */
    
    
    predictionButton.addCallback(buttonCallback);
     b26:	66 e7       	ldi	r22, 0x76	; 118
     b28:	75 e0       	ldi	r23, 0x05	; 5
     b2a:	81 e7       	ldi	r24, 0x71	; 113
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	0e 94 a6 02 	call	0x54c	; 0x54c <_ZNK6driver4GPIO11addCallbackEPFvvE>
    debounceTimer.addCallback(debounceTimerCallback);
     b32:	6d e6       	ldi	r22, 0x6D	; 109
     b34:	75 e0       	ldi	r23, 0x05	; 5
     b36:	88 e6       	ldi	r24, 0x68	; 104
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	0e 94 9f 09 	call	0x133e	; 0x133e <_ZNK6driver5Timer11addCallbackEPFvvE>
    predictionTimer.addCallback(predictionTimerCallback);
     b3e:	66 e6       	ldi	r22, 0x66	; 102
     b40:	75 e0       	ldi	r23, 0x05	; 5
     b42:	8f e5       	ldi	r24, 0x5F	; 95
     b44:	91 e0       	ldi	r25, 0x01	; 1
     b46:	0e 94 9f 09 	call	0x133e	; 0x133e <_ZNK6driver5Timer11addCallbackEPFvvE>
    predictionButton.enableInterrupt();
     b4a:	81 e7       	ldi	r24, 0x71	; 113
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_ZN6driver4GPIO15enableInterruptEv>
    
    watchdog::init(watchdog::Timeout::Timeout1024ms);
     b52:	86 e0       	ldi	r24, 0x06	; 6
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	0e 94 8e 0b 	call	0x171c	; 0x171c <_ZN6driver8watchdog4initENS0_7TimeoutE>
    watchdog::enableSystemReset();
     b5a:	0e 94 a1 0b 	call	0x1742	; 0x1742 <_ZN6driver8watchdog17enableSystemResetEv>
{
    setup();
    
    while (1) 
    {   
        watchdog::reset();
     b5e:	0e 94 9a 0b 	call	0x1734	; 0x1734 <_ZN6driver8watchdog5resetEv>
     b62:	fd cf       	rjmp	.-6      	; 0xb5e <main+0x48>

00000b64 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj>:
}

// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
void Vector<T>::assign(const T (&values)[NumValues], const size_t offset) 
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
{
    for (size_t i{}; i < NumValues && offset + i < mySize; ++i) 
     b6c:	a0 e0       	ldi	r26, 0x00	; 0
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	ab 30       	cpi	r26, 0x0B	; 11
     b72:	b1 05       	cpc	r27, r1
     b74:	10 f5       	brcc	.+68     	; 0xbba <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0x56>
     b76:	9d 01       	movw	r18, r26
     b78:	24 0f       	add	r18, r20
     b7a:	35 1f       	adc	r19, r21
     b7c:	ec 01       	movw	r28, r24
     b7e:	ea 81       	ldd	r30, Y+2	; 0x02
     b80:	fb 81       	ldd	r31, Y+3	; 0x03
     b82:	2e 17       	cp	r18, r30
     b84:	3f 07       	cpc	r19, r31
     b86:	c8 f4       	brcc	.+50     	; 0xbba <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0x56>
    {
        myData[offset + i] = values[i];
     b88:	22 0f       	add	r18, r18
     b8a:	33 1f       	adc	r19, r19
     b8c:	22 0f       	add	r18, r18
     b8e:	33 1f       	adc	r19, r19
     b90:	e8 81       	ld	r30, Y
     b92:	f9 81       	ldd	r31, Y+1	; 0x01
     b94:	e2 0f       	add	r30, r18
     b96:	f3 1f       	adc	r31, r19
     b98:	ed 01       	movw	r28, r26
     b9a:	cc 0f       	add	r28, r28
     b9c:	dd 1f       	adc	r29, r29
     b9e:	cc 0f       	add	r28, r28
     ba0:	dd 1f       	adc	r29, r29
     ba2:	c6 0f       	add	r28, r22
     ba4:	d7 1f       	adc	r29, r23
     ba6:	08 81       	ld	r16, Y
     ba8:	19 81       	ldd	r17, Y+1	; 0x01
     baa:	2a 81       	ldd	r18, Y+2	; 0x02
     bac:	3b 81       	ldd	r19, Y+3	; 0x03
     bae:	00 83       	st	Z, r16
     bb0:	11 83       	std	Z+1, r17	; 0x01
     bb2:	22 83       	std	Z+2, r18	; 0x02
     bb4:	33 83       	std	Z+3, r19	; 0x03
// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
void Vector<T>::assign(const T (&values)[NumValues], const size_t offset) 
{
    for (size_t i{}; i < NumValues && offset + i < mySize; ++i) 
     bb6:	11 96       	adiw	r26, 0x01	; 1
     bb8:	db cf       	rjmp	.-74     	; 0xb70 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0xc>
    {
        myData[offset + i] = values[i];
    }
}
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	1f 91       	pop	r17
     bc0:	0f 91       	pop	r16
     bc2:	08 95       	ret

00000bc4 <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>:
}

// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
bool Vector<T>::addValues(const T (&values)[NumValues]) 
     bc4:	cf 92       	push	r12
     bc6:	df 92       	push	r13
     bc8:	ef 92       	push	r14
     bca:	ff 92       	push	r15
     bcc:	1f 93       	push	r17
     bce:	cf 93       	push	r28
     bd0:	df 93       	push	r29
     bd2:	ec 01       	movw	r28, r24
     bd4:	6b 01       	movw	r12, r22
{
    const auto offset{mySize};
     bd6:	ea 80       	ldd	r14, Y+2	; 0x02
     bd8:	fb 80       	ldd	r15, Y+3	; 0x03
    if (!resize(mySize + NumValues)) { return false; }
     bda:	b7 01       	movw	r22, r14
     bdc:	65 5f       	subi	r22, 0xF5	; 245
     bde:	7f 4f       	sbci	r23, 0xFF	; 255
     be0:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <_ZN9container6VectorIdE6resizeEj>
     be4:	18 2f       	mov	r17, r24
     be6:	88 23       	and	r24, r24
     be8:	29 f0       	breq	.+10     	; 0xbf4 <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd+0x30>
    assign(values, offset);
     bea:	a7 01       	movw	r20, r14
     bec:	b6 01       	movw	r22, r12
     bee:	ce 01       	movw	r24, r28
     bf0:	0e 94 b2 05 	call	0xb64	; 0xb64 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj>
    return true;
}
     bf4:	81 2f       	mov	r24, r17
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	1f 91       	pop	r17
     bfc:	ff 90       	pop	r15
     bfe:	ef 90       	pop	r14
     c00:	df 90       	pop	r13
     c02:	cf 90       	pop	r12
     c04:	08 95       	ret

00000c06 <_ZN9container6VectorIdEC1IIdddddddddddEEEDpOKT_>:
Vector<T>::Vector(const size_t size) { resize(size); }

// -----------------------------------------------------------------------------
template <typename T>
template <typename... Values>
Vector<T>::Vector(const Values&&... values) 
     c06:	4f 92       	push	r4
     c08:	5f 92       	push	r5
     c0a:	6f 92       	push	r6
     c0c:	7f 92       	push	r7
     c0e:	8f 92       	push	r8
     c10:	9f 92       	push	r9
     c12:	af 92       	push	r10
     c14:	bf 92       	push	r11
     c16:	cf 92       	push	r12
     c18:	df 92       	push	r13
     c1a:	ef 92       	push	r14
     c1c:	ff 92       	push	r15
     c1e:	0f 93       	push	r16
     c20:	1f 93       	push	r17
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	cd b7       	in	r28, 0x3d	; 61
     c28:	de b7       	in	r29, 0x3e	; 62
     c2a:	ac 97       	sbiw	r28, 0x2c	; 44
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de bf       	out	0x3e, r29	; 62
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	cd bf       	out	0x3d, r28	; 61
     c36:	fc 01       	movw	r30, r24
     c38:	11 82       	std	Z+1, r1	; 0x01
     c3a:	10 82       	st	Z, r1
     c3c:	13 82       	std	Z+3, r1	; 0x03
     c3e:	12 82       	std	Z+2, r1	; 0x02
{
    const T array[sizeof...(values)]{(values)...};
     c40:	fb 01       	movw	r30, r22
     c42:	40 80       	ld	r4, Z
     c44:	51 80       	ldd	r5, Z+1	; 0x01
     c46:	62 80       	ldd	r6, Z+2	; 0x02
     c48:	73 80       	ldd	r7, Z+3	; 0x03
     c4a:	49 82       	std	Y+1, r4	; 0x01
     c4c:	5a 82       	std	Y+2, r5	; 0x02
     c4e:	6b 82       	std	Y+3, r6	; 0x03
     c50:	7c 82       	std	Y+4, r7	; 0x04
     c52:	fa 01       	movw	r30, r20
     c54:	40 81       	ld	r20, Z
     c56:	51 81       	ldd	r21, Z+1	; 0x01
     c58:	62 81       	ldd	r22, Z+2	; 0x02
     c5a:	73 81       	ldd	r23, Z+3	; 0x03
     c5c:	4d 83       	std	Y+5, r20	; 0x05
     c5e:	5e 83       	std	Y+6, r21	; 0x06
     c60:	6f 83       	std	Y+7, r22	; 0x07
     c62:	78 87       	std	Y+8, r23	; 0x08
     c64:	f9 01       	movw	r30, r18
     c66:	40 81       	ld	r20, Z
     c68:	51 81       	ldd	r21, Z+1	; 0x01
     c6a:	62 81       	ldd	r22, Z+2	; 0x02
     c6c:	73 81       	ldd	r23, Z+3	; 0x03
     c6e:	49 87       	std	Y+9, r20	; 0x09
     c70:	5a 87       	std	Y+10, r21	; 0x0a
     c72:	6b 87       	std	Y+11, r22	; 0x0b
     c74:	7c 87       	std	Y+12, r23	; 0x0c
     c76:	f8 01       	movw	r30, r16
     c78:	40 81       	ld	r20, Z
     c7a:	51 81       	ldd	r21, Z+1	; 0x01
     c7c:	62 81       	ldd	r22, Z+2	; 0x02
     c7e:	73 81       	ldd	r23, Z+3	; 0x03
     c80:	4d 87       	std	Y+13, r20	; 0x0d
     c82:	5e 87       	std	Y+14, r21	; 0x0e
     c84:	6f 87       	std	Y+15, r22	; 0x0f
     c86:	78 8b       	std	Y+16, r23	; 0x10
     c88:	f7 01       	movw	r30, r14
     c8a:	40 81       	ld	r20, Z
     c8c:	51 81       	ldd	r21, Z+1	; 0x01
     c8e:	62 81       	ldd	r22, Z+2	; 0x02
     c90:	73 81       	ldd	r23, Z+3	; 0x03
     c92:	49 8b       	std	Y+17, r20	; 0x11
     c94:	5a 8b       	std	Y+18, r21	; 0x12
     c96:	6b 8b       	std	Y+19, r22	; 0x13
     c98:	7c 8b       	std	Y+20, r23	; 0x14
     c9a:	f6 01       	movw	r30, r12
     c9c:	40 81       	ld	r20, Z
     c9e:	51 81       	ldd	r21, Z+1	; 0x01
     ca0:	62 81       	ldd	r22, Z+2	; 0x02
     ca2:	73 81       	ldd	r23, Z+3	; 0x03
     ca4:	4d 8b       	std	Y+21, r20	; 0x15
     ca6:	5e 8b       	std	Y+22, r21	; 0x16
     ca8:	6f 8b       	std	Y+23, r22	; 0x17
     caa:	78 8f       	std	Y+24, r23	; 0x18
     cac:	f5 01       	movw	r30, r10
     cae:	40 81       	ld	r20, Z
     cb0:	51 81       	ldd	r21, Z+1	; 0x01
     cb2:	62 81       	ldd	r22, Z+2	; 0x02
     cb4:	73 81       	ldd	r23, Z+3	; 0x03
     cb6:	49 8f       	std	Y+25, r20	; 0x19
     cb8:	5a 8f       	std	Y+26, r21	; 0x1a
     cba:	6b 8f       	std	Y+27, r22	; 0x1b
     cbc:	7c 8f       	std	Y+28, r23	; 0x1c
     cbe:	f4 01       	movw	r30, r8
     cc0:	40 81       	ld	r20, Z
     cc2:	51 81       	ldd	r21, Z+1	; 0x01
     cc4:	62 81       	ldd	r22, Z+2	; 0x02
     cc6:	73 81       	ldd	r23, Z+3	; 0x03
     cc8:	4d 8f       	std	Y+29, r20	; 0x1d
     cca:	5e 8f       	std	Y+30, r21	; 0x1e
     ccc:	6f 8f       	std	Y+31, r22	; 0x1f
     cce:	78 a3       	std	Y+32, r23	; 0x20
     cd0:	21 96       	adiw	r28, 0x01	; 1
     cd2:	ee ad       	ldd	r30, Y+62	; 0x3e
     cd4:	ff ad       	ldd	r31, Y+63	; 0x3f
     cd6:	21 97       	sbiw	r28, 0x01	; 1
     cd8:	40 81       	ld	r20, Z
     cda:	51 81       	ldd	r21, Z+1	; 0x01
     cdc:	62 81       	ldd	r22, Z+2	; 0x02
     cde:	73 81       	ldd	r23, Z+3	; 0x03
     ce0:	49 a3       	std	Y+33, r20	; 0x21
     ce2:	5a a3       	std	Y+34, r21	; 0x22
     ce4:	6b a3       	std	Y+35, r22	; 0x23
     ce6:	7c a3       	std	Y+36, r23	; 0x24
     ce8:	23 96       	adiw	r28, 0x03	; 3
     cea:	ee ad       	ldd	r30, Y+62	; 0x3e
     cec:	ff ad       	ldd	r31, Y+63	; 0x3f
     cee:	23 97       	sbiw	r28, 0x03	; 3
     cf0:	40 81       	ld	r20, Z
     cf2:	51 81       	ldd	r21, Z+1	; 0x01
     cf4:	62 81       	ldd	r22, Z+2	; 0x02
     cf6:	73 81       	ldd	r23, Z+3	; 0x03
     cf8:	4d a3       	std	Y+37, r20	; 0x25
     cfa:	5e a3       	std	Y+38, r21	; 0x26
     cfc:	6f a3       	std	Y+39, r22	; 0x27
     cfe:	78 a7       	std	Y+40, r23	; 0x28
     d00:	25 96       	adiw	r28, 0x05	; 5
     d02:	ee ad       	ldd	r30, Y+62	; 0x3e
     d04:	ff ad       	ldd	r31, Y+63	; 0x3f
     d06:	25 97       	sbiw	r28, 0x05	; 5
     d08:	40 81       	ld	r20, Z
     d0a:	51 81       	ldd	r21, Z+1	; 0x01
     d0c:	62 81       	ldd	r22, Z+2	; 0x02
     d0e:	73 81       	ldd	r23, Z+3	; 0x03
     d10:	49 a7       	std	Y+41, r20	; 0x29
     d12:	5a a7       	std	Y+42, r21	; 0x2a
     d14:	6b a7       	std	Y+43, r22	; 0x2b
     d16:	7c a7       	std	Y+44, r23	; 0x2c
    addValues(array);
     d18:	be 01       	movw	r22, r28
     d1a:	6f 5f       	subi	r22, 0xFF	; 255
     d1c:	7f 4f       	sbci	r23, 0xFF	; 255
     d1e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>
}
     d22:	ac 96       	adiw	r28, 0x2c	; 44
     d24:	0f b6       	in	r0, 0x3f	; 63
     d26:	f8 94       	cli
     d28:	de bf       	out	0x3e, r29	; 62
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	cd bf       	out	0x3d, r28	; 61
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	1f 91       	pop	r17
     d34:	0f 91       	pop	r16
     d36:	ff 90       	pop	r15
     d38:	ef 90       	pop	r14
     d3a:	df 90       	pop	r13
     d3c:	cf 90       	pop	r12
     d3e:	bf 90       	pop	r11
     d40:	af 90       	pop	r10
     d42:	9f 90       	pop	r9
     d44:	8f 90       	pop	r8
     d46:	7f 90       	pop	r7
     d48:	6f 90       	pop	r6
     d4a:	5f 90       	pop	r5
     d4c:	4f 90       	pop	r4
     d4e:	08 95       	ret

00000d50 <_ZN9container6VectorIdEC1IIiiiiiiiiiiiEEEDpOKT_>:
Vector<T>::Vector(const size_t size) { resize(size); }

// -----------------------------------------------------------------------------
template <typename T>
template <typename... Values>
Vector<T>::Vector(const Values&&... values) 
     d50:	2f 92       	push	r2
     d52:	3f 92       	push	r3
     d54:	4f 92       	push	r4
     d56:	5f 92       	push	r5
     d58:	6f 92       	push	r6
     d5a:	7f 92       	push	r7
     d5c:	8f 92       	push	r8
     d5e:	9f 92       	push	r9
     d60:	af 92       	push	r10
     d62:	bf 92       	push	r11
     d64:	cf 92       	push	r12
     d66:	df 92       	push	r13
     d68:	ef 92       	push	r14
     d6a:	ff 92       	push	r15
     d6c:	0f 93       	push	r16
     d6e:	1f 93       	push	r17
     d70:	cf 93       	push	r28
     d72:	df 93       	push	r29
     d74:	cd b7       	in	r28, 0x3d	; 61
     d76:	de b7       	in	r29, 0x3e	; 62
     d78:	ac 97       	sbiw	r28, 0x2c	; 44
     d7a:	0f b6       	in	r0, 0x3f	; 63
     d7c:	f8 94       	cli
     d7e:	de bf       	out	0x3e, r29	; 62
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	cd bf       	out	0x3d, r28	; 61
     d84:	3c 01       	movw	r6, r24
     d86:	2a 01       	movw	r4, r20
     d88:	19 01       	movw	r2, r18
     d8a:	fc 01       	movw	r30, r24
     d8c:	11 82       	std	Z+1, r1	; 0x01
     d8e:	10 82       	st	Z, r1
     d90:	13 82       	std	Z+3, r1	; 0x03
     d92:	12 82       	std	Z+2, r1	; 0x02
{
    const T array[sizeof...(values)]{(values)...};
     d94:	fb 01       	movw	r30, r22
     d96:	60 81       	ld	r22, Z
     d98:	71 81       	ldd	r23, Z+1	; 0x01
     d9a:	07 2e       	mov	r0, r23
     d9c:	00 0c       	add	r0, r0
     d9e:	88 0b       	sbc	r24, r24
     da0:	99 0b       	sbc	r25, r25
     da2:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     da6:	69 83       	std	Y+1, r22	; 0x01
     da8:	7a 83       	std	Y+2, r23	; 0x02
     daa:	8b 83       	std	Y+3, r24	; 0x03
     dac:	9c 83       	std	Y+4, r25	; 0x04
     dae:	f2 01       	movw	r30, r4
     db0:	60 81       	ld	r22, Z
     db2:	71 81       	ldd	r23, Z+1	; 0x01
     db4:	07 2e       	mov	r0, r23
     db6:	00 0c       	add	r0, r0
     db8:	88 0b       	sbc	r24, r24
     dba:	99 0b       	sbc	r25, r25
     dbc:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     dc0:	6d 83       	std	Y+5, r22	; 0x05
     dc2:	7e 83       	std	Y+6, r23	; 0x06
     dc4:	8f 83       	std	Y+7, r24	; 0x07
     dc6:	98 87       	std	Y+8, r25	; 0x08
     dc8:	f1 01       	movw	r30, r2
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	07 2e       	mov	r0, r23
     dd0:	00 0c       	add	r0, r0
     dd2:	88 0b       	sbc	r24, r24
     dd4:	99 0b       	sbc	r25, r25
     dd6:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     dda:	69 87       	std	Y+9, r22	; 0x09
     ddc:	7a 87       	std	Y+10, r23	; 0x0a
     dde:	8b 87       	std	Y+11, r24	; 0x0b
     de0:	9c 87       	std	Y+12, r25	; 0x0c
     de2:	f8 01       	movw	r30, r16
     de4:	60 81       	ld	r22, Z
     de6:	71 81       	ldd	r23, Z+1	; 0x01
     de8:	07 2e       	mov	r0, r23
     dea:	00 0c       	add	r0, r0
     dec:	88 0b       	sbc	r24, r24
     dee:	99 0b       	sbc	r25, r25
     df0:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     df4:	6d 87       	std	Y+13, r22	; 0x0d
     df6:	7e 87       	std	Y+14, r23	; 0x0e
     df8:	8f 87       	std	Y+15, r24	; 0x0f
     dfa:	98 8b       	std	Y+16, r25	; 0x10
     dfc:	f7 01       	movw	r30, r14
     dfe:	60 81       	ld	r22, Z
     e00:	71 81       	ldd	r23, Z+1	; 0x01
     e02:	07 2e       	mov	r0, r23
     e04:	00 0c       	add	r0, r0
     e06:	88 0b       	sbc	r24, r24
     e08:	99 0b       	sbc	r25, r25
     e0a:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e0e:	69 8b       	std	Y+17, r22	; 0x11
     e10:	7a 8b       	std	Y+18, r23	; 0x12
     e12:	8b 8b       	std	Y+19, r24	; 0x13
     e14:	9c 8b       	std	Y+20, r25	; 0x14
     e16:	f6 01       	movw	r30, r12
     e18:	60 81       	ld	r22, Z
     e1a:	71 81       	ldd	r23, Z+1	; 0x01
     e1c:	07 2e       	mov	r0, r23
     e1e:	00 0c       	add	r0, r0
     e20:	88 0b       	sbc	r24, r24
     e22:	99 0b       	sbc	r25, r25
     e24:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e28:	6d 8b       	std	Y+21, r22	; 0x15
     e2a:	7e 8b       	std	Y+22, r23	; 0x16
     e2c:	8f 8b       	std	Y+23, r24	; 0x17
     e2e:	98 8f       	std	Y+24, r25	; 0x18
     e30:	f5 01       	movw	r30, r10
     e32:	60 81       	ld	r22, Z
     e34:	71 81       	ldd	r23, Z+1	; 0x01
     e36:	07 2e       	mov	r0, r23
     e38:	00 0c       	add	r0, r0
     e3a:	88 0b       	sbc	r24, r24
     e3c:	99 0b       	sbc	r25, r25
     e3e:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e42:	69 8f       	std	Y+25, r22	; 0x19
     e44:	7a 8f       	std	Y+26, r23	; 0x1a
     e46:	8b 8f       	std	Y+27, r24	; 0x1b
     e48:	9c 8f       	std	Y+28, r25	; 0x1c
     e4a:	f4 01       	movw	r30, r8
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	07 2e       	mov	r0, r23
     e52:	00 0c       	add	r0, r0
     e54:	88 0b       	sbc	r24, r24
     e56:	99 0b       	sbc	r25, r25
     e58:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e5c:	6d 8f       	std	Y+29, r22	; 0x1d
     e5e:	7e 8f       	std	Y+30, r23	; 0x1e
     e60:	8f 8f       	std	Y+31, r24	; 0x1f
     e62:	98 a3       	std	Y+32, r25	; 0x20
     e64:	23 96       	adiw	r28, 0x03	; 3
     e66:	ee ad       	ldd	r30, Y+62	; 0x3e
     e68:	ff ad       	ldd	r31, Y+63	; 0x3f
     e6a:	23 97       	sbiw	r28, 0x03	; 3
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	07 2e       	mov	r0, r23
     e72:	00 0c       	add	r0, r0
     e74:	88 0b       	sbc	r24, r24
     e76:	99 0b       	sbc	r25, r25
     e78:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e7c:	69 a3       	std	Y+33, r22	; 0x21
     e7e:	7a a3       	std	Y+34, r23	; 0x22
     e80:	8b a3       	std	Y+35, r24	; 0x23
     e82:	9c a3       	std	Y+36, r25	; 0x24
     e84:	25 96       	adiw	r28, 0x05	; 5
     e86:	ee ad       	ldd	r30, Y+62	; 0x3e
     e88:	ff ad       	ldd	r31, Y+63	; 0x3f
     e8a:	25 97       	sbiw	r28, 0x05	; 5
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	07 2e       	mov	r0, r23
     e92:	00 0c       	add	r0, r0
     e94:	88 0b       	sbc	r24, r24
     e96:	99 0b       	sbc	r25, r25
     e98:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     e9c:	6d a3       	std	Y+37, r22	; 0x25
     e9e:	7e a3       	std	Y+38, r23	; 0x26
     ea0:	8f a3       	std	Y+39, r24	; 0x27
     ea2:	98 a7       	std	Y+40, r25	; 0x28
     ea4:	27 96       	adiw	r28, 0x07	; 7
     ea6:	ee ad       	ldd	r30, Y+62	; 0x3e
     ea8:	ff ad       	ldd	r31, Y+63	; 0x3f
     eaa:	27 97       	sbiw	r28, 0x07	; 7
     eac:	60 81       	ld	r22, Z
     eae:	71 81       	ldd	r23, Z+1	; 0x01
     eb0:	07 2e       	mov	r0, r23
     eb2:	00 0c       	add	r0, r0
     eb4:	88 0b       	sbc	r24, r24
     eb6:	99 0b       	sbc	r25, r25
     eb8:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__floatsisf>
     ebc:	69 a7       	std	Y+41, r22	; 0x29
     ebe:	7a a7       	std	Y+42, r23	; 0x2a
     ec0:	8b a7       	std	Y+43, r24	; 0x2b
     ec2:	9c a7       	std	Y+44, r25	; 0x2c
    addValues(array);
     ec4:	be 01       	movw	r22, r28
     ec6:	6f 5f       	subi	r22, 0xFF	; 255
     ec8:	7f 4f       	sbci	r23, 0xFF	; 255
     eca:	c3 01       	movw	r24, r6
     ecc:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>
}
     ed0:	ac 96       	adiw	r28, 0x2c	; 44
     ed2:	0f b6       	in	r0, 0x3f	; 63
     ed4:	f8 94       	cli
     ed6:	de bf       	out	0x3e, r29	; 62
     ed8:	0f be       	out	0x3f, r0	; 63
     eda:	cd bf       	out	0x3d, r28	; 61
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	cf 90       	pop	r12
     eec:	bf 90       	pop	r11
     eee:	af 90       	pop	r10
     ef0:	9f 90       	pop	r9
     ef2:	8f 90       	pop	r8
     ef4:	7f 90       	pop	r7
     ef6:	6f 90       	pop	r6
     ef8:	5f 90       	pop	r5
     efa:	4f 90       	pop	r4
     efc:	3f 90       	pop	r3
     efe:	2f 90       	pop	r2
     f00:	08 95       	ret

00000f02 <_ZN9container6VectorIdE5clearEv>:
template <typename T>
const T* Vector<T>::last() const { return mySize > 0 ? end() - 1 : nullptr; }

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::clear() 
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	ec 01       	movw	r28, r24

// -----------------------------------------------------------------------------
template <typename T>
inline void deleteMemory(T* &block) 
{
    free(block);
     f08:	88 81       	ld	r24, Y
     f0a:	99 81       	ldd	r25, Y+1	; 0x01
     f0c:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <free>
    block = nullptr;
     f10:	19 82       	std	Y+1, r1	; 0x01
     f12:	18 82       	st	Y, r1
{
    utils::deleteMemory<T>(myData);
    myData = nullptr;
    mySize = 0;
     f14:	1b 82       	std	Y+3, r1	; 0x03
     f16:	1a 82       	std	Y+2, r1	; 0x02
}
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	08 95       	ret

00000f1e <_ZN9container6VectorIdED1Ev>:
    source.mySize = 0;
}

// -----------------------------------------------------------------------------
template <typename T>
Vector<T>::~Vector() { clear(); }
     f1e:	0e 94 81 07 	call	0xf02	; 0xf02 <_ZN9container6VectorIdE5clearEv>
     f22:	08 95       	ret

00000f24 <_Z41__static_initialization_and_destruction_0ii>:
    }
    return 0;
}
     f24:	4f 92       	push	r4
     f26:	5f 92       	push	r5
     f28:	6f 92       	push	r6
     f2a:	7f 92       	push	r7
     f2c:	8f 92       	push	r8
     f2e:	9f 92       	push	r9
     f30:	af 92       	push	r10
     f32:	bf 92       	push	r11
     f34:	cf 92       	push	r12
     f36:	df 92       	push	r13
     f38:	ef 92       	push	r14
     f3a:	ff 92       	push	r15
     f3c:	0f 93       	push	r16
     f3e:	1f 93       	push	r17
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29
     f44:	cd b7       	in	r28, 0x3d	; 61
     f46:	de b7       	in	r29, 0x3e	; 62
     f48:	ce 54       	subi	r28, 0x4E	; 78
     f4a:	d1 09       	sbc	r29, r1
     f4c:	0f b6       	in	r0, 0x3f	; 63
     f4e:	f8 94       	cli
     f50:	de bf       	out	0x3e, r29	; 62
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	cd bf       	out	0x3d, r28	; 61
     f56:	3c 01       	movw	r6, r24
     f58:	2b 01       	movw	r4, r22
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	68 16       	cp	r6, r24
     f5e:	71 04       	cpc	r7, r1
     f60:	09 f0       	breq	.+2      	; 0xf64 <_Z41__static_initialization_and_destruction_0ii+0x40>
     f62:	15 c1       	rjmp	.+554    	; 0x118e <_Z41__static_initialization_and_destruction_0ii+0x26a>
     f64:	6f 3f       	cpi	r22, 0xFF	; 255
     f66:	7f 4f       	sbci	r23, 0xFF	; 255
     f68:	09 f0       	breq	.+2      	; 0xf6c <_Z41__static_initialization_and_destruction_0ii+0x48>
     f6a:	11 c1       	rjmp	.+546    	; 0x118e <_Z41__static_initialization_and_destruction_0ii+0x26a>
 * @param predictionButton Button connected to pin 13, used to toggle the LED.
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
     f6c:	42 e0       	ldi	r20, 0x02	; 2
     f6e:	50 e0       	ldi	r21, 0x00	; 0
     f70:	69 e0       	ldi	r22, 0x09	; 9
     f72:	84 e7       	ldi	r24, 0x74	; 116
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 bd 03 	call	0x77a	; 0x77a <_ZN6driver4GPIOC1EhNS0_9DirectionE>
GPIO predictionButton{13, GPIO::Direction::InputPullup};
     f7a:	41 e0       	ldi	r20, 0x01	; 1
     f7c:	50 e0       	ldi	r21, 0x00	; 0
     f7e:	6d e0       	ldi	r22, 0x0D	; 13
     f80:	81 e7       	ldi	r24, 0x71	; 113
     f82:	91 e0       	ldi	r25, 0x01	; 1
     f84:	0e 94 bd 03 	call	0x77a	; 0x77a <_ZN6driver4GPIOC1EhNS0_9DirectionE>
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	4c e2       	ldi	r20, 0x2C	; 44
     f8c:	51 e0       	ldi	r21, 0x01	; 1
     f8e:	60 e0       	ldi	r22, 0x00	; 0
     f90:	70 e0       	ldi	r23, 0x00	; 0
     f92:	88 e6       	ldi	r24, 0x68	; 104
     f94:	91 e0       	ldi	r25, 0x01	; 1
     f96:	0e 94 89 0a 	call	0x1512	; 0x1512 <_ZN6driver5TimerC1ENS0_7CircuitEjb>
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
     f9a:	20 e0       	ldi	r18, 0x00	; 0
     f9c:	40 e6       	ldi	r20, 0x60	; 96
     f9e:	5a ee       	ldi	r21, 0xEA	; 234
     fa0:	61 e0       	ldi	r22, 0x01	; 1
     fa2:	70 e0       	ldi	r23, 0x00	; 0
     fa4:	8f e5       	ldi	r24, 0x5F	; 95
     fa6:	91 e0       	ldi	r25, 0x01	; 1
     fa8:	0e 94 89 0a 	call	0x1512	; 0x1512 <_ZN6driver5TimerC1ENS0_7CircuitEjb>
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
     fac:	2f 96       	adiw	r28, 0x0f	; 15
     fae:	1c ae       	std	Y+60, r1	; 0x3c
     fb0:	1d ae       	std	Y+61, r1	; 0x3d
     fb2:	1e ae       	std	Y+62, r1	; 0x3e
     fb4:	1f ae       	std	Y+63, r1	; 0x3f
     fb6:	2f 97       	sbiw	r28, 0x0f	; 15
     fb8:	8d ec       	ldi	r24, 0xCD	; 205
     fba:	9c ec       	ldi	r25, 0xCC	; 204
     fbc:	ac ec       	ldi	r26, 0xCC	; 204
     fbe:	bd e3       	ldi	r27, 0x3D	; 61
     fc0:	2b 96       	adiw	r28, 0x0b	; 11
     fc2:	8c af       	std	Y+60, r24	; 0x3c
     fc4:	9d af       	std	Y+61, r25	; 0x3d
     fc6:	ae af       	std	Y+62, r26	; 0x3e
     fc8:	bf af       	std	Y+63, r27	; 0x3f
     fca:	2b 97       	sbiw	r28, 0x0b	; 11
     fcc:	8d ec       	ldi	r24, 0xCD	; 205
     fce:	9c ec       	ldi	r25, 0xCC	; 204
     fd0:	ac e4       	ldi	r26, 0x4C	; 76
     fd2:	be e3       	ldi	r27, 0x3E	; 62
     fd4:	27 96       	adiw	r28, 0x07	; 7
     fd6:	8c af       	std	Y+60, r24	; 0x3c
     fd8:	9d af       	std	Y+61, r25	; 0x3d
     fda:	ae af       	std	Y+62, r26	; 0x3e
     fdc:	bf af       	std	Y+63, r27	; 0x3f
     fde:	27 97       	sbiw	r28, 0x07	; 7
     fe0:	8a e9       	ldi	r24, 0x9A	; 154
     fe2:	99 e9       	ldi	r25, 0x99	; 153
     fe4:	a9 e9       	ldi	r26, 0x99	; 153
     fe6:	be e3       	ldi	r27, 0x3E	; 62
     fe8:	23 96       	adiw	r28, 0x03	; 3
     fea:	8c af       	std	Y+60, r24	; 0x3c
     fec:	9d af       	std	Y+61, r25	; 0x3d
     fee:	ae af       	std	Y+62, r26	; 0x3e
     ff0:	bf af       	std	Y+63, r27	; 0x3f
     ff2:	23 97       	sbiw	r28, 0x03	; 3
     ff4:	8d ec       	ldi	r24, 0xCD	; 205
     ff6:	9c ec       	ldi	r25, 0xCC	; 204
     ff8:	ac ec       	ldi	r26, 0xCC	; 204
     ffa:	be e3       	ldi	r27, 0x3E	; 62
     ffc:	8b af       	std	Y+59, r24	; 0x3b
     ffe:	9c af       	std	Y+60, r25	; 0x3c
    1000:	ad af       	std	Y+61, r26	; 0x3d
    1002:	be af       	std	Y+62, r27	; 0x3e
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	a0 e0       	ldi	r26, 0x00	; 0
    100a:	bf e3       	ldi	r27, 0x3F	; 63
    100c:	8f ab       	std	Y+55, r24	; 0x37
    100e:	98 af       	std	Y+56, r25	; 0x38
    1010:	a9 af       	std	Y+57, r26	; 0x39
    1012:	ba af       	std	Y+58, r27	; 0x3a
    1014:	8a e9       	ldi	r24, 0x9A	; 154
    1016:	99 e9       	ldi	r25, 0x99	; 153
    1018:	a9 e1       	ldi	r26, 0x19	; 25
    101a:	bf e3       	ldi	r27, 0x3F	; 63
    101c:	8b ab       	std	Y+51, r24	; 0x33
    101e:	9c ab       	std	Y+52, r25	; 0x34
    1020:	ad ab       	std	Y+53, r26	; 0x35
    1022:	be ab       	std	Y+54, r27	; 0x36
    1024:	83 e3       	ldi	r24, 0x33	; 51
    1026:	93 e3       	ldi	r25, 0x33	; 51
    1028:	a3 e3       	ldi	r26, 0x33	; 51
    102a:	bf e3       	ldi	r27, 0x3F	; 63
    102c:	8f a7       	std	Y+47, r24	; 0x2f
    102e:	98 ab       	std	Y+48, r25	; 0x30
    1030:	a9 ab       	std	Y+49, r26	; 0x31
    1032:	ba ab       	std	Y+50, r27	; 0x32
    1034:	8d ec       	ldi	r24, 0xCD	; 205
    1036:	9c ec       	ldi	r25, 0xCC	; 204
    1038:	ac e4       	ldi	r26, 0x4C	; 76
    103a:	bf e3       	ldi	r27, 0x3F	; 63
    103c:	8b a7       	std	Y+43, r24	; 0x2b
    103e:	9c a7       	std	Y+44, r25	; 0x2c
    1040:	ad a7       	std	Y+45, r26	; 0x2d
    1042:	be a7       	std	Y+46, r27	; 0x2e
    1044:	86 e6       	ldi	r24, 0x66	; 102
    1046:	96 e6       	ldi	r25, 0x66	; 102
    1048:	a6 e6       	ldi	r26, 0x66	; 102
    104a:	bf e3       	ldi	r27, 0x3F	; 63
    104c:	8f a3       	std	Y+39, r24	; 0x27
    104e:	98 a7       	std	Y+40, r25	; 0x28
    1050:	a9 a7       	std	Y+41, r26	; 0x29
    1052:	ba a7       	std	Y+42, r27	; 0x2a
    1054:	80 e0       	ldi	r24, 0x00	; 0
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	a0 e8       	ldi	r26, 0x80	; 128
    105a:	bf e3       	ldi	r27, 0x3F	; 63
    105c:	8b a3       	std	Y+35, r24	; 0x23
    105e:	9c a3       	std	Y+36, r25	; 0x24
    1060:	ad a3       	std	Y+37, r26	; 0x25
    1062:	be a3       	std	Y+38, r27	; 0x26
    1064:	ce 01       	movw	r24, r28
    1066:	83 96       	adiw	r24, 0x23	; 35
    1068:	9f 93       	push	r25
    106a:	8f 93       	push	r24
    106c:	04 96       	adiw	r24, 0x04	; 4
    106e:	9f 93       	push	r25
    1070:	8f 93       	push	r24
    1072:	04 96       	adiw	r24, 0x04	; 4
    1074:	9f 93       	push	r25
    1076:	8f 93       	push	r24
    1078:	de 01       	movw	r26, r28
    107a:	9f 96       	adiw	r26, 0x2f	; 47
    107c:	4d 01       	movw	r8, r26
    107e:	08 96       	adiw	r24, 0x08	; 8
    1080:	5c 01       	movw	r10, r24
    1082:	18 96       	adiw	r26, 0x08	; 8
    1084:	6d 01       	movw	r12, r26
    1086:	08 96       	adiw	r24, 0x08	; 8
    1088:	7c 01       	movw	r14, r24
    108a:	8e 01       	movw	r16, r28
    108c:	01 5c       	subi	r16, 0xC1	; 193
    108e:	1f 4f       	sbci	r17, 0xFF	; 255
    1090:	9e 01       	movw	r18, r28
    1092:	2d 5b       	subi	r18, 0xBD	; 189
    1094:	3f 4f       	sbci	r19, 0xFF	; 255
    1096:	ae 01       	movw	r20, r28
    1098:	49 5b       	subi	r20, 0xB9	; 185
    109a:	5f 4f       	sbci	r21, 0xFF	; 255
    109c:	be 01       	movw	r22, r28
    109e:	65 5b       	subi	r22, 0xB5	; 181
    10a0:	7f 4f       	sbci	r23, 0xFF	; 255
    10a2:	8b e5       	ldi	r24, 0x5B	; 91
    10a4:	91 e0       	ldi	r25, 0x01	; 1
    10a6:	0e 94 03 06 	call	0xc06	; 0xc06 <_ZN9container6VectorIdEC1IIdddddddddddEEEDpOKT_>
const container::Vector<double> trainingOutput{-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50}; 
    10aa:	8e ec       	ldi	r24, 0xCE	; 206
    10ac:	9f ef       	ldi	r25, 0xFF	; 255
    10ae:	9a a3       	std	Y+34, r25	; 0x22
    10b0:	89 a3       	std	Y+33, r24	; 0x21
    10b2:	88 ed       	ldi	r24, 0xD8	; 216
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	98 a3       	std	Y+32, r25	; 0x20
    10b8:	8f 8f       	std	Y+31, r24	; 0x1f
    10ba:	82 ee       	ldi	r24, 0xE2	; 226
    10bc:	9f ef       	ldi	r25, 0xFF	; 255
    10be:	9e 8f       	std	Y+30, r25	; 0x1e
    10c0:	8d 8f       	std	Y+29, r24	; 0x1d
    10c2:	8c ee       	ldi	r24, 0xEC	; 236
    10c4:	9f ef       	ldi	r25, 0xFF	; 255
    10c6:	9c 8f       	std	Y+28, r25	; 0x1c
    10c8:	8b 8f       	std	Y+27, r24	; 0x1b
    10ca:	86 ef       	ldi	r24, 0xF6	; 246
    10cc:	9f ef       	ldi	r25, 0xFF	; 255
    10ce:	9a 8f       	std	Y+26, r25	; 0x1a
    10d0:	89 8f       	std	Y+25, r24	; 0x19
    10d2:	18 8e       	std	Y+24, r1	; 0x18
    10d4:	1f 8a       	std	Y+23, r1	; 0x17
    10d6:	8a e0       	ldi	r24, 0x0A	; 10
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	9e 8b       	std	Y+22, r25	; 0x16
    10dc:	8d 8b       	std	Y+21, r24	; 0x15
    10de:	84 e1       	ldi	r24, 0x14	; 20
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	9c 8b       	std	Y+20, r25	; 0x14
    10e4:	8b 8b       	std	Y+19, r24	; 0x13
    10e6:	8e e1       	ldi	r24, 0x1E	; 30
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	9a 8b       	std	Y+18, r25	; 0x12
    10ec:	89 8b       	std	Y+17, r24	; 0x11
    10ee:	88 e2       	ldi	r24, 0x28	; 40
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	98 8b       	std	Y+16, r25	; 0x10
    10f4:	8f 87       	std	Y+15, r24	; 0x0f
    10f6:	82 e3       	ldi	r24, 0x32	; 50
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	9e 87       	std	Y+14, r25	; 0x0e
    10fc:	8d 87       	std	Y+13, r24	; 0x0d
    10fe:	ce 01       	movw	r24, r28
    1100:	0d 96       	adiw	r24, 0x0d	; 13
    1102:	9f 93       	push	r25
    1104:	8f 93       	push	r24
    1106:	02 96       	adiw	r24, 0x02	; 2
    1108:	9f 93       	push	r25
    110a:	8f 93       	push	r24
    110c:	02 96       	adiw	r24, 0x02	; 2
    110e:	9f 93       	push	r25
    1110:	8f 93       	push	r24
    1112:	de 01       	movw	r26, r28
    1114:	53 96       	adiw	r26, 0x13	; 19
    1116:	4d 01       	movw	r8, r26
    1118:	04 96       	adiw	r24, 0x04	; 4
    111a:	5c 01       	movw	r10, r24
    111c:	14 96       	adiw	r26, 0x04	; 4
    111e:	6d 01       	movw	r12, r26
    1120:	04 96       	adiw	r24, 0x04	; 4
    1122:	7c 01       	movw	r14, r24
    1124:	04 52       	subi	r16, 0x24	; 36
    1126:	11 09       	sbc	r17, r1
    1128:	9e 01       	movw	r18, r28
    112a:	23 5e       	subi	r18, 0xE3	; 227
    112c:	3f 4f       	sbci	r19, 0xFF	; 255
    112e:	ae 01       	movw	r20, r28
    1130:	41 5e       	subi	r20, 0xE1	; 225
    1132:	5f 4f       	sbci	r21, 0xFF	; 255
    1134:	be 01       	movw	r22, r28
    1136:	6f 5d       	subi	r22, 0xDF	; 223
    1138:	7f 4f       	sbci	r23, 0xFF	; 255
    113a:	87 e5       	ldi	r24, 0x57	; 87
    113c:	91 e0       	ldi	r25, 0x01	; 1
    113e:	0e 94 a8 06 	call	0xd50	; 0xd50 <_ZN9container6VectorIdEC1IIiiiiiiiiiiiEEEDpOKT_>
ml::LinReg linReg{0.0, 0.0, trainingInput, trainingOutput, 0.1};
    1142:	19 86       	std	Y+9, r1	; 0x09
    1144:	1a 86       	std	Y+10, r1	; 0x0a
    1146:	1b 86       	std	Y+11, r1	; 0x0b
    1148:	1c 86       	std	Y+12, r1	; 0x0c
    114a:	1d 82       	std	Y+5, r1	; 0x05
    114c:	1e 82       	std	Y+6, r1	; 0x06
    114e:	1f 82       	std	Y+7, r1	; 0x07
    1150:	18 86       	std	Y+8, r1	; 0x08
    1152:	8d ec       	ldi	r24, 0xCD	; 205
    1154:	9c ec       	ldi	r25, 0xCC	; 204
    1156:	ac ec       	ldi	r26, 0xCC	; 204
    1158:	bd e3       	ldi	r27, 0x3D	; 61
    115a:	89 83       	std	Y+1, r24	; 0x01
    115c:	9a 83       	std	Y+2, r25	; 0x02
    115e:	ab 83       	std	Y+3, r26	; 0x03
    1160:	bc 83       	std	Y+4, r27	; 0x04
    1162:	de 01       	movw	r26, r28
    1164:	11 96       	adiw	r26, 0x01	; 1
    1166:	7d 01       	movw	r14, r26
    1168:	07 e5       	ldi	r16, 0x57	; 87
    116a:	11 e0       	ldi	r17, 0x01	; 1
    116c:	2b e5       	ldi	r18, 0x5B	; 91
    116e:	31 e0       	ldi	r19, 0x01	; 1
    1170:	ae 01       	movw	r20, r28
    1172:	4b 5f       	subi	r20, 0xFB	; 251
    1174:	5f 4f       	sbci	r21, 0xFF	; 255
    1176:	be 01       	movw	r22, r28
    1178:	67 5f       	subi	r22, 0xF7	; 247
    117a:	7f 4f       	sbci	r23, 0xFF	; 255
    117c:	83 e4       	ldi	r24, 0x43	; 67
    117e:	91 e0       	ldi	r25, 0x01	; 1
    1180:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN2ml6LinRegC1ERKdS2_RKN9container6VectorIdEES7_S2_>
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	f8 94       	cli
    1188:	de bf       	out	0x3e, r29	; 62
    118a:	0f be       	out	0x3f, r0	; 63
    118c:	cd bf       	out	0x3d, r28	; 61
    118e:	67 28       	or	r6, r7
    1190:	19 f5       	brne	.+70     	; 0x11d8 <_Z41__static_initialization_and_destruction_0ii+0x2b4>
    1192:	45 20       	and	r4, r5
    1194:	40 94       	com	r4
    1196:	01 f5       	brne	.+64     	; 0x11d8 <_Z41__static_initialization_and_destruction_0ii+0x2b4>
namespace ml { /** @note Put the bracket on a new line. */

/********************************************************************************
 * @brief Class for Linear Regression model
 ********************************************************************************/
class LinReg { /** @note Put the bracket on a new line. */
    1198:	83 e5       	ldi	r24, 0x53	; 83
    119a:	91 e0       	ldi	r25, 0x01	; 1
    119c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN9container6VectorIdED1Ev>
    11a0:	8f e4       	ldi	r24, 0x4F	; 79
    11a2:	91 e0       	ldi	r25, 0x01	; 1
    11a4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN9container6VectorIdED1Ev>
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
const container::Vector<double> trainingOutput{-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50}; 
    11a8:	87 e5       	ldi	r24, 0x57	; 87
    11aa:	91 e0       	ldi	r25, 0x01	; 1
    11ac:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN9container6VectorIdED1Ev>
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
    11b0:	8b e5       	ldi	r24, 0x5B	; 91
    11b2:	91 e0       	ldi	r25, 0x01	; 1
    11b4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN9container6VectorIdED1Ev>
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
    11b8:	8f e5       	ldi	r24, 0x5F	; 95
    11ba:	91 e0       	ldi	r25, 0x01	; 1
    11bc:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <_ZN6driver5TimerD1Ev>
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
    11c0:	88 e6       	ldi	r24, 0x68	; 104
    11c2:	91 e0       	ldi	r25, 0x01	; 1
    11c4:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <_ZN6driver5TimerD1Ev>
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
    11c8:	81 e7       	ldi	r24, 0x71	; 113
    11ca:	91 e0       	ldi	r25, 0x01	; 1
    11cc:	0e 94 5d 02 	call	0x4ba	; 0x4ba <_ZN6driver4GPIOD1Ev>
 * @param predictionButton Button connected to pin 13, used to toggle the LED.
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
    11d0:	84 e7       	ldi	r24, 0x74	; 116
    11d2:	91 e0       	ldi	r25, 0x01	; 1
    11d4:	0e 94 5d 02 	call	0x4ba	; 0x4ba <_ZN6driver4GPIOD1Ev>
    while (1) 
    {   
        watchdog::reset();
    }
    return 0;
}
    11d8:	c2 5b       	subi	r28, 0xB2	; 178
    11da:	df 4f       	sbci	r29, 0xFF	; 255
    11dc:	0f b6       	in	r0, 0x3f	; 63
    11de:	f8 94       	cli
    11e0:	de bf       	out	0x3e, r29	; 62
    11e2:	0f be       	out	0x3f, r0	; 63
    11e4:	cd bf       	out	0x3d, r28	; 61
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	1f 91       	pop	r17
    11ec:	0f 91       	pop	r16
    11ee:	ff 90       	pop	r15
    11f0:	ef 90       	pop	r14
    11f2:	df 90       	pop	r13
    11f4:	cf 90       	pop	r12
    11f6:	bf 90       	pop	r11
    11f8:	af 90       	pop	r10
    11fa:	9f 90       	pop	r9
    11fc:	8f 90       	pop	r8
    11fe:	7f 90       	pop	r7
    1200:	6f 90       	pop	r6
    1202:	5f 90       	pop	r5
    1204:	4f 90       	pop	r4
    1206:	08 95       	ret

00001208 <_GLOBAL__sub_I_main>:
    1208:	6f ef       	ldi	r22, 0xFF	; 255
    120a:	7f ef       	ldi	r23, 0xFF	; 255
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	0e 94 92 07 	call	0xf24	; 0xf24 <_Z41__static_initialization_and_destruction_0ii>
    1214:	08 95       	ret

00001216 <_GLOBAL__sub_D_main>:
    1216:	6f ef       	ldi	r22, 0xFF	; 255
    1218:	7f ef       	ldi	r23, 0xFF	; 255
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 92 07 	call	0xf24	; 0xf24 <_Z41__static_initialization_and_destruction_0ii>
    1222:	08 95       	ret

00001224 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>:
 * @tparam Size The array size.
 * 
 * @note The array size must exceed 0, else a compilation error will be generated.
 ********************************************************************************/
template <typename T, size_t Size>
class Array 
    1224:	43 30       	cpi	r20, 0x03	; 3
    1226:	51 05       	cpc	r21, r1
    1228:	60 f4       	brcc	.+24     	; 0x1242 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x1e>
    122a:	61 15       	cp	r22, r1
    122c:	71 05       	cpc	r23, r1
    122e:	59 f0       	breq	.+22     	; 0x1246 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x22>
    1230:	44 0f       	add	r20, r20
    1232:	55 1f       	adc	r21, r21
    1234:	fc 01       	movw	r30, r24
    1236:	e4 0f       	add	r30, r20
    1238:	f5 1f       	adc	r31, r21
    123a:	71 83       	std	Z+1, r23	; 0x01
    123c:	60 83       	st	Z, r22
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	08 95       	ret
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	08 95       	ret
    1246:	80 e0       	ldi	r24, 0x00	; 0
    1248:	08 95       	ret

0000124a <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>:
    124a:	66 0f       	add	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	86 0f       	add	r24, r22
    1250:	97 1f       	adc	r25, r23
    1252:	fc 01       	movw	r30, r24
    1254:	20 81       	ld	r18, Z
    1256:	31 81       	ldd	r19, Z+1	; 0x01
    1258:	81 e0       	ldi	r24, 0x01	; 1
    125a:	23 2b       	or	r18, r19
    125c:	09 f4       	brne	.+2      	; 0x1260 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj+0x16>
    125e:	80 e0       	ldi	r24, 0x00	; 0
    1260:	08 95       	ret

00001262 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>:
    1262:	ef 92       	push	r14
    1264:	ff 92       	push	r15
    1266:	1f 93       	push	r17
    1268:	cf 93       	push	r28
    126a:	df 93       	push	r29
    126c:	7c 01       	movw	r14, r24
    126e:	eb 01       	movw	r28, r22
    1270:	63 30       	cpi	r22, 0x03	; 3
    1272:	71 05       	cpc	r23, r1
    1274:	20 f4       	brcc	.+8      	; 0x127e <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1c>
    1276:	0e 94 25 09 	call	0x124a	; 0x124a <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>
    127a:	18 2f       	mov	r17, r24
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1e>
    127e:	10 e0       	ldi	r17, 0x00	; 0
    1280:	11 23       	and	r17, r17
    1282:	39 f0       	breq	.+14     	; 0x1292 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x30>
    1284:	cc 0f       	add	r28, r28
    1286:	dd 1f       	adc	r29, r29
    1288:	ce 0d       	add	r28, r14
    128a:	df 1d       	adc	r29, r15
    128c:	e8 81       	ld	r30, Y
    128e:	f9 81       	ldd	r31, Y+1	; 0x01
    1290:	09 95       	icall
    1292:	81 2f       	mov	r24, r17
    1294:	df 91       	pop	r29
    1296:	cf 91       	pop	r28
    1298:	1f 91       	pop	r17
    129a:	ff 90       	pop	r15
    129c:	ef 90       	pop	r14
    129e:	08 95       	ret

000012a0 <_ZN6driver5Timer5startEv>:
    12a0:	0f 93       	push	r16
    12a2:	cf 93       	push	r28
    12a4:	fc 01       	movw	r30, r24
    12a6:	78 94       	sei
    12a8:	84 81       	ldd	r24, Z+4	; 0x04
    12aa:	95 81       	ldd	r25, Z+5	; 0x05
    12ac:	a6 81       	ldd	r26, Z+6	; 0x06
    12ae:	b7 81       	ldd	r27, Z+7	; 0x07
    12b0:	89 2b       	or	r24, r25
    12b2:	8a 2b       	or	r24, r26
    12b4:	8b 2b       	or	r24, r27
    12b6:	c1 f0       	breq	.+48     	; 0x12e8 <_ZN6driver5Timer5startEv+0x48>
    12b8:	a0 81       	ld	r26, Z
    12ba:	b1 81       	ldd	r27, Z+1	; 0x01
    12bc:	16 96       	adiw	r26, 0x06	; 6
    12be:	0c 91       	ld	r16, X
    12c0:	16 97       	sbiw	r26, 0x06	; 6
    12c2:	14 96       	adiw	r26, 0x04	; 4
    12c4:	0d 90       	ld	r0, X+
    12c6:	bc 91       	ld	r27, X
    12c8:	a0 2d       	mov	r26, r0
    12ca:	cc 91       	ld	r28, X
    12cc:	21 e0       	ldi	r18, 0x01	; 1
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	40 e0       	ldi	r20, 0x00	; 0
    12d2:	50 e0       	ldi	r21, 0x00	; 0
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	70 e0       	ldi	r23, 0x00	; 0
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
    12e0:	2c 2b       	or	r18, r28
    12e2:	2c 93       	st	X, r18
    12e4:	81 e0       	ldi	r24, 0x01	; 1
    12e6:	80 87       	std	Z+8, r24	; 0x08
    12e8:	cf 91       	pop	r28
    12ea:	0f 91       	pop	r16
    12ec:	08 95       	ret

000012ee <_ZN6driver5Timer4stopEv>:
    12ee:	0f 93       	push	r16
    12f0:	cf 93       	push	r28
    12f2:	df 93       	push	r29
    12f4:	dc 01       	movw	r26, r24
    12f6:	ed 91       	ld	r30, X+
    12f8:	fc 91       	ld	r31, X
    12fa:	11 97       	sbiw	r26, 0x01	; 1
    12fc:	06 81       	ldd	r16, Z+6	; 0x06
    12fe:	c4 81       	ldd	r28, Z+4	; 0x04
    1300:	d5 81       	ldd	r29, Z+5	; 0x05
    1302:	e8 81       	ld	r30, Y
    1304:	21 e0       	ldi	r18, 0x01	; 1
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	40 e0       	ldi	r20, 0x00	; 0
    130a:	50 e0       	ldi	r21, 0x00	; 0
    130c:	60 e0       	ldi	r22, 0x00	; 0
    130e:	70 e0       	ldi	r23, 0x00	; 0
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__ashldi3>
    1318:	20 95       	com	r18
    131a:	e2 23       	and	r30, r18
    131c:	e8 83       	st	Y, r30
    131e:	18 96       	adiw	r26, 0x08	; 8
    1320:	1c 92       	st	X, r1
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	0f 91       	pop	r16
    1328:	08 95       	ret

0000132a <_ZN6driver5Timer7restartEv>:
    132a:	dc 01       	movw	r26, r24
    132c:	ed 91       	ld	r30, X+
    132e:	fc 91       	ld	r31, X
    1330:	10 82       	st	Z, r1
    1332:	11 82       	std	Z+1, r1	; 0x01
    1334:	12 82       	std	Z+2, r1	; 0x02
    1336:	13 82       	std	Z+3, r1	; 0x03
    1338:	0e 94 50 09 	call	0x12a0	; 0x12a0 <_ZN6driver5Timer5startEv>
    133c:	08 95       	ret

0000133e <_ZNK6driver5Timer11addCallbackEPFvvE>:
    133e:	61 15       	cp	r22, r1
    1340:	71 05       	cpc	r23, r1
    1342:	59 f0       	breq	.+22     	; 0x135a <_ZNK6driver5Timer11addCallbackEPFvvE+0x1c>
    1344:	fc 01       	movw	r30, r24
    1346:	01 90       	ld	r0, Z+
    1348:	f0 81       	ld	r31, Z
    134a:	e0 2d       	mov	r30, r0
    134c:	47 81       	ldd	r20, Z+7	; 0x07
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	8d e7       	ldi	r24, 0x7D	; 125
    1352:	91 e0       	ldi	r25, 0x01	; 1
    1354:	0e 94 12 09 	call	0x1224	; 0x1224 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
    1358:	08 95       	ret
    135a:	80 e0       	ldi	r24, 0x00	; 0
    135c:	08 95       	ret

0000135e <_ZN6driver5Timer9incrementEv>:
    135e:	cf 93       	push	r28
    1360:	df 93       	push	r29
    1362:	fc 01       	movw	r30, r24
    1364:	80 85       	ldd	r24, Z+8	; 0x08
    1366:	88 23       	and	r24, r24
    1368:	69 f0       	breq	.+26     	; 0x1384 <_ZN6driver5Timer9incrementEv+0x26>
    136a:	c0 81       	ld	r28, Z
    136c:	d1 81       	ldd	r29, Z+1	; 0x01
    136e:	88 81       	ld	r24, Y
    1370:	99 81       	ldd	r25, Y+1	; 0x01
    1372:	aa 81       	ldd	r26, Y+2	; 0x02
    1374:	bb 81       	ldd	r27, Y+3	; 0x03
    1376:	01 96       	adiw	r24, 0x01	; 1
    1378:	a1 1d       	adc	r26, r1
    137a:	b1 1d       	adc	r27, r1
    137c:	88 83       	st	Y, r24
    137e:	99 83       	std	Y+1, r25	; 0x01
    1380:	aa 83       	std	Y+2, r26	; 0x02
    1382:	bb 83       	std	Y+3, r27	; 0x03
    1384:	80 85       	ldd	r24, Z+8	; 0x08
    1386:	df 91       	pop	r29
    1388:	cf 91       	pop	r28
    138a:	08 95       	ret

0000138c <_ZN6driver5Timer10hasElapsedEv>:
    138c:	0f 93       	push	r16
    138e:	1f 93       	push	r17
    1390:	fc 01       	movw	r30, r24
    1392:	90 85       	ldd	r25, Z+8	; 0x08
    1394:	99 23       	and	r25, r25
    1396:	81 f0       	breq	.+32     	; 0x13b8 <_ZN6driver5Timer10hasElapsedEv+0x2c>
    1398:	a0 81       	ld	r26, Z
    139a:	b1 81       	ldd	r27, Z+1	; 0x01
    139c:	0d 91       	ld	r16, X+
    139e:	1d 91       	ld	r17, X+
    13a0:	2d 91       	ld	r18, X+
    13a2:	3c 91       	ld	r19, X
    13a4:	44 81       	ldd	r20, Z+4	; 0x04
    13a6:	55 81       	ldd	r21, Z+5	; 0x05
    13a8:	66 81       	ldd	r22, Z+6	; 0x06
    13aa:	77 81       	ldd	r23, Z+7	; 0x07
    13ac:	04 17       	cp	r16, r20
    13ae:	15 07       	cpc	r17, r21
    13b0:	26 07       	cpc	r18, r22
    13b2:	37 07       	cpc	r19, r23
    13b4:	18 f4       	brcc	.+6      	; 0x13bc <_ZN6driver5Timer10hasElapsedEv+0x30>
    13b6:	03 c0       	rjmp	.+6      	; 0x13be <_ZN6driver5Timer10hasElapsedEv+0x32>
    13b8:	91 e0       	ldi	r25, 0x01	; 1
    13ba:	01 c0       	rjmp	.+2      	; 0x13be <_ZN6driver5Timer10hasElapsedEv+0x32>
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	91 11       	cpse	r25, r1
    13c0:	09 c0       	rjmp	.+18     	; 0x13d4 <_ZN6driver5Timer10hasElapsedEv+0x48>
    13c2:	01 90       	ld	r0, Z+
    13c4:	f0 81       	ld	r31, Z
    13c6:	e0 2d       	mov	r30, r0
    13c8:	10 82       	st	Z, r1
    13ca:	11 82       	std	Z+1, r1	; 0x01
    13cc:	12 82       	std	Z+2, r1	; 0x02
    13ce:	13 82       	std	Z+3, r1	; 0x03
    13d0:	81 e0       	ldi	r24, 0x01	; 1
    13d2:	01 c0       	rjmp	.+2      	; 0x13d6 <_ZN6driver5Timer10hasElapsedEv+0x4a>
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	1f 91       	pop	r17
    13d8:	0f 91       	pop	r16
    13da:	08 95       	ret

000013dc <_ZN6driver5Timer11getMaxCountEj>:
    13dc:	00 97       	sbiw	r24, 0x00	; 0
    13de:	a1 f0       	breq	.+40     	; 0x1408 <_ZN6driver5Timer11getMaxCountEj+0x2c>
    13e0:	bc 01       	movw	r22, r24
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <__floatunsisf>
    13ea:	2f e6       	ldi	r18, 0x6F	; 111
    13ec:	32 e1       	ldi	r19, 0x12	; 18
    13ee:	43 e0       	ldi	r20, 0x03	; 3
    13f0:	5e e3       	ldi	r21, 0x3E	; 62
    13f2:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__divsf3>
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	5f e3       	ldi	r21, 0x3F	; 63
    13fe:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__addsf3>
    1402:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <__fixunssfsi>
    1406:	08 95       	ret
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	cb 01       	movw	r24, r22
    140e:	08 95       	ret

00001410 <_ZN6driver5Timer15setElapseTimeMsEj>:
    1410:	0f 93       	push	r16
    1412:	1f 93       	push	r17
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	8c 01       	movw	r16, r24
    141a:	eb 01       	movw	r28, r22
    141c:	20 97       	sbiw	r28, 0x00	; 0
    141e:	11 f4       	brne	.+4      	; 0x1424 <_ZN6driver5Timer15setElapseTimeMsEj+0x14>
    1420:	0e 94 77 09 	call	0x12ee	; 0x12ee <_ZN6driver5Timer4stopEv>
    1424:	ce 01       	movw	r24, r28
    1426:	0e 94 ee 09 	call	0x13dc	; 0x13dc <_ZN6driver5Timer11getMaxCountEj>
    142a:	f8 01       	movw	r30, r16
    142c:	64 83       	std	Z+4, r22	; 0x04
    142e:	75 83       	std	Z+5, r23	; 0x05
    1430:	86 83       	std	Z+6, r24	; 0x06
    1432:	97 83       	std	Z+7, r25	; 0x07
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	08 95       	ret

0000143e <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev>:
    143e:	26 e0       	ldi	r18, 0x06	; 6
    1440:	fc 01       	movw	r30, r24
    1442:	11 92       	st	Z+, r1
    1444:	2a 95       	dec	r18
    1446:	e9 f7       	brne	.-6      	; 0x1442 <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev+0x4>
    1448:	08 95       	ret

0000144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>:
    144a:	66 0f       	add	r22, r22
    144c:	77 1f       	adc	r23, r23
    144e:	86 0f       	add	r24, r22
    1450:	97 1f       	adc	r25, r23
    1452:	08 95       	ret

00001454 <_ZN6driver5Timer12initHardwareEv>:
    1454:	cf 93       	push	r28
    1456:	df 93       	push	r29
    1458:	ec 01       	movw	r28, r24
    145a:	8a 81       	ldd	r24, Y+2	; 0x02
    145c:	9b 81       	ldd	r25, Y+3	; 0x03
    145e:	00 97       	sbiw	r24, 0x00	; 0
    1460:	99 f4       	brne	.+38     	; 0x1488 <_ZN6driver5Timer12initHardwareEv+0x34>
    1462:	60 e0       	ldi	r22, 0x00	; 0
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	87 e7       	ldi	r24, 0x77	; 119
    1468:	91 e0       	ldi	r25, 0x01	; 1
    146a:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    146e:	fc 01       	movw	r30, r24
    1470:	80 81       	ld	r24, Z
    1472:	91 81       	ldd	r25, Z+1	; 0x01
    1474:	89 2b       	or	r24, r25
    1476:	09 f0       	breq	.+2      	; 0x147a <_ZN6driver5Timer12initHardwareEv+0x26>
    1478:	44 c0       	rjmp	.+136    	; 0x1502 <_ZN6driver5Timer12initHardwareEv+0xae>
    147a:	82 e0       	ldi	r24, 0x02	; 2
    147c:	85 bd       	out	0x25, r24	; 37
    147e:	8c e2       	ldi	r24, 0x2C	; 44
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	99 83       	std	Y+1, r25	; 0x01
    1484:	88 83       	st	Y, r24
    1486:	30 c0       	rjmp	.+96     	; 0x14e8 <_ZN6driver5Timer12initHardwareEv+0x94>
    1488:	81 30       	cpi	r24, 0x01	; 1
    148a:	91 05       	cpc	r25, r1
    148c:	c9 f4       	brne	.+50     	; 0x14c0 <_ZN6driver5Timer12initHardwareEv+0x6c>
    148e:	61 e0       	ldi	r22, 0x01	; 1
    1490:	70 e0       	ldi	r23, 0x00	; 0
    1492:	87 e7       	ldi	r24, 0x77	; 119
    1494:	91 e0       	ldi	r25, 0x01	; 1
    1496:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    149a:	fc 01       	movw	r30, r24
    149c:	80 81       	ld	r24, Z
    149e:	91 81       	ldd	r25, Z+1	; 0x01
    14a0:	89 2b       	or	r24, r25
    14a2:	89 f5       	brne	.+98     	; 0x1506 <_ZN6driver5Timer12initHardwareEv+0xb2>
    14a4:	8a e0       	ldi	r24, 0x0A	; 10
    14a6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    14aa:	80 e0       	ldi	r24, 0x00	; 0
    14ac:	91 e0       	ldi	r25, 0x01	; 1
    14ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    14b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    14b6:	84 e2       	ldi	r24, 0x24	; 36
    14b8:	91 e0       	ldi	r25, 0x01	; 1
    14ba:	99 83       	std	Y+1, r25	; 0x01
    14bc:	88 83       	st	Y, r24
    14be:	14 c0       	rjmp	.+40     	; 0x14e8 <_ZN6driver5Timer12initHardwareEv+0x94>
    14c0:	02 97       	sbiw	r24, 0x02	; 2
    14c2:	91 f4       	brne	.+36     	; 0x14e8 <_ZN6driver5Timer12initHardwareEv+0x94>
    14c4:	62 e0       	ldi	r22, 0x02	; 2
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	87 e7       	ldi	r24, 0x77	; 119
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    14d0:	fc 01       	movw	r30, r24
    14d2:	80 81       	ld	r24, Z
    14d4:	91 81       	ldd	r25, Z+1	; 0x01
    14d6:	89 2b       	or	r24, r25
    14d8:	c1 f4       	brne	.+48     	; 0x150a <_ZN6driver5Timer12initHardwareEv+0xb6>
    14da:	82 e0       	ldi	r24, 0x02	; 2
    14dc:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    14e0:	8c e1       	ldi	r24, 0x1C	; 28
    14e2:	91 e0       	ldi	r25, 0x01	; 1
    14e4:	99 83       	std	Y+1, r25	; 0x01
    14e6:	88 83       	st	Y, r24
    14e8:	e8 81       	ld	r30, Y
    14ea:	f9 81       	ldd	r31, Y+1	; 0x01
    14ec:	67 81       	ldd	r22, Z+7	; 0x07
    14ee:	70 e0       	ldi	r23, 0x00	; 0
    14f0:	87 e7       	ldi	r24, 0x77	; 119
    14f2:	91 e0       	ldi	r25, 0x01	; 1
    14f4:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    14f8:	fc 01       	movw	r30, r24
    14fa:	d1 83       	std	Z+1, r29	; 0x01
    14fc:	c0 83       	st	Z, r28
    14fe:	81 e0       	ldi	r24, 0x01	; 1
    1500:	05 c0       	rjmp	.+10     	; 0x150c <_ZN6driver5Timer12initHardwareEv+0xb8>
    1502:	80 e0       	ldi	r24, 0x00	; 0
    1504:	03 c0       	rjmp	.+6      	; 0x150c <_ZN6driver5Timer12initHardwareEv+0xb8>
    1506:	80 e0       	ldi	r24, 0x00	; 0
    1508:	01 c0       	rjmp	.+2      	; 0x150c <_ZN6driver5Timer12initHardwareEv+0xb8>
    150a:	80 e0       	ldi	r24, 0x00	; 0
    150c:	df 91       	pop	r29
    150e:	cf 91       	pop	r28
    1510:	08 95       	ret

00001512 <_ZN6driver5TimerC1ENS0_7CircuitEjb>:
    1512:	ef 92       	push	r14
    1514:	ff 92       	push	r15
    1516:	1f 93       	push	r17
    1518:	cf 93       	push	r28
    151a:	df 93       	push	r29
    151c:	ec 01       	movw	r28, r24
    151e:	7a 01       	movw	r14, r20
    1520:	12 2f       	mov	r17, r18
    1522:	19 82       	std	Y+1, r1	; 0x01
    1524:	18 82       	st	Y, r1
    1526:	7b 83       	std	Y+3, r23	; 0x03
    1528:	6a 83       	std	Y+2, r22	; 0x02
    152a:	1c 82       	std	Y+4, r1	; 0x04
    152c:	1d 82       	std	Y+5, r1	; 0x05
    152e:	1e 82       	std	Y+6, r1	; 0x06
    1530:	1f 82       	std	Y+7, r1	; 0x07
    1532:	18 86       	std	Y+8, r1	; 0x08
    1534:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN6driver5Timer12initHardwareEv>
    1538:	88 23       	and	r24, r24
    153a:	49 f0       	breq	.+18     	; 0x154e <_ZN6driver5TimerC1ENS0_7CircuitEjb+0x3c>
    153c:	b7 01       	movw	r22, r14
    153e:	ce 01       	movw	r24, r28
    1540:	0e 94 08 0a 	call	0x1410	; 0x1410 <_ZN6driver5Timer15setElapseTimeMsEj>
    1544:	11 23       	and	r17, r17
    1546:	19 f0       	breq	.+6      	; 0x154e <_ZN6driver5TimerC1ENS0_7CircuitEjb+0x3c>
    1548:	ce 01       	movw	r24, r28
    154a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <_ZN6driver5Timer5startEv>
    154e:	df 91       	pop	r29
    1550:	cf 91       	pop	r28
    1552:	1f 91       	pop	r17
    1554:	ff 90       	pop	r15
    1556:	ef 90       	pop	r14
    1558:	08 95       	ret

0000155a <_ZN6driver5Timer15disableHardwareEv>:
    155a:	cf 93       	push	r28
    155c:	df 93       	push	r29
    155e:	ec 01       	movw	r28, r24
    1560:	8a 81       	ldd	r24, Y+2	; 0x02
    1562:	9b 81       	ldd	r25, Y+3	; 0x03
    1564:	00 97       	sbiw	r24, 0x00	; 0
    1566:	11 f4       	brne	.+4      	; 0x156c <_ZN6driver5Timer15disableHardwareEv+0x12>
    1568:	15 bc       	out	0x25, r1	; 37
    156a:	0e c0       	rjmp	.+28     	; 0x1588 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    156c:	81 30       	cpi	r24, 0x01	; 1
    156e:	91 05       	cpc	r25, r1
    1570:	39 f4       	brne	.+14     	; 0x1580 <_ZN6driver5Timer15disableHardwareEv+0x26>
    1572:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1576:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    157a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    157e:	04 c0       	rjmp	.+8      	; 0x1588 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    1580:	02 97       	sbiw	r24, 0x02	; 2
    1582:	11 f4       	brne	.+4      	; 0x1588 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    1584:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1588:	e8 81       	ld	r30, Y
    158a:	f9 81       	ldd	r31, Y+1	; 0x01
    158c:	04 80       	ldd	r0, Z+4	; 0x04
    158e:	f5 81       	ldd	r31, Z+5	; 0x05
    1590:	e0 2d       	mov	r30, r0
    1592:	10 82       	st	Z, r1
    1594:	e8 81       	ld	r30, Y
    1596:	f9 81       	ldd	r31, Y+1	; 0x01
    1598:	67 81       	ldd	r22, Z+7	; 0x07
    159a:	70 e0       	ldi	r23, 0x00	; 0
    159c:	87 e7       	ldi	r24, 0x77	; 119
    159e:	91 e0       	ldi	r25, 0x01	; 1
    15a0:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    15a4:	fc 01       	movw	r30, r24
    15a6:	11 82       	std	Z+1, r1	; 0x01
    15a8:	10 82       	st	Z, r1
    15aa:	19 82       	std	Y+1, r1	; 0x01
    15ac:	18 82       	st	Y, r1
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	08 95       	ret

000015b4 <_ZN6driver5TimerD1Ev>:
    15b4:	0e 94 ad 0a 	call	0x155a	; 0x155a <_ZN6driver5Timer15disableHardwareEv>
    15b8:	08 95       	ret

000015ba <_ZN6driver12_GLOBAL__N_116generateCallbackEh>:
    15ba:	0f 93       	push	r16
    15bc:	1f 93       	push	r17
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	c8 2f       	mov	r28, r24
    15c4:	d0 e0       	ldi	r29, 0x00	; 0
    15c6:	be 01       	movw	r22, r28
    15c8:	87 e7       	ldi	r24, 0x77	; 119
    15ca:	91 e0       	ldi	r25, 0x01	; 1
    15cc:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    15d0:	fc 01       	movw	r30, r24
    15d2:	00 81       	ld	r16, Z
    15d4:	11 81       	ldd	r17, Z+1	; 0x01
    15d6:	01 15       	cp	r16, r1
    15d8:	11 05       	cpc	r17, r1
    15da:	69 f0       	breq	.+26     	; 0x15f6 <_ZN6driver12_GLOBAL__N_116generateCallbackEh+0x3c>
    15dc:	c8 01       	movw	r24, r16
    15de:	0e 94 af 09 	call	0x135e	; 0x135e <_ZN6driver5Timer9incrementEv>
    15e2:	c8 01       	movw	r24, r16
    15e4:	0e 94 c6 09 	call	0x138c	; 0x138c <_ZN6driver5Timer10hasElapsedEv>
    15e8:	88 23       	and	r24, r24
    15ea:	29 f0       	breq	.+10     	; 0x15f6 <_ZN6driver12_GLOBAL__N_116generateCallbackEh+0x3c>
    15ec:	be 01       	movw	r22, r28
    15ee:	8d e7       	ldi	r24, 0x7D	; 125
    15f0:	91 e0       	ldi	r25, 0x01	; 1
    15f2:	0e 94 31 09 	call	0x1262	; 0x1262 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
    15f6:	df 91       	pop	r29
    15f8:	cf 91       	pop	r28
    15fa:	1f 91       	pop	r17
    15fc:	0f 91       	pop	r16
    15fe:	08 95       	ret

00001600 <__vector_16>:
    1600:	1f 92       	push	r1
    1602:	0f 92       	push	r0
    1604:	0f b6       	in	r0, 0x3f	; 63
    1606:	0f 92       	push	r0
    1608:	11 24       	eor	r1, r1
    160a:	2f 93       	push	r18
    160c:	3f 93       	push	r19
    160e:	4f 93       	push	r20
    1610:	5f 93       	push	r21
    1612:	6f 93       	push	r22
    1614:	7f 93       	push	r23
    1616:	8f 93       	push	r24
    1618:	9f 93       	push	r25
    161a:	af 93       	push	r26
    161c:	bf 93       	push	r27
    161e:	ef 93       	push	r30
    1620:	ff 93       	push	r31
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    1628:	ff 91       	pop	r31
    162a:	ef 91       	pop	r30
    162c:	bf 91       	pop	r27
    162e:	af 91       	pop	r26
    1630:	9f 91       	pop	r25
    1632:	8f 91       	pop	r24
    1634:	7f 91       	pop	r23
    1636:	6f 91       	pop	r22
    1638:	5f 91       	pop	r21
    163a:	4f 91       	pop	r20
    163c:	3f 91       	pop	r19
    163e:	2f 91       	pop	r18
    1640:	0f 90       	pop	r0
    1642:	0f be       	out	0x3f, r0	; 63
    1644:	0f 90       	pop	r0
    1646:	1f 90       	pop	r1
    1648:	18 95       	reti

0000164a <__vector_11>:
    164a:	1f 92       	push	r1
    164c:	0f 92       	push	r0
    164e:	0f b6       	in	r0, 0x3f	; 63
    1650:	0f 92       	push	r0
    1652:	11 24       	eor	r1, r1
    1654:	2f 93       	push	r18
    1656:	3f 93       	push	r19
    1658:	4f 93       	push	r20
    165a:	5f 93       	push	r21
    165c:	6f 93       	push	r22
    165e:	7f 93       	push	r23
    1660:	8f 93       	push	r24
    1662:	9f 93       	push	r25
    1664:	af 93       	push	r26
    1666:	bf 93       	push	r27
    1668:	ef 93       	push	r30
    166a:	ff 93       	push	r31
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    1672:	ff 91       	pop	r31
    1674:	ef 91       	pop	r30
    1676:	bf 91       	pop	r27
    1678:	af 91       	pop	r26
    167a:	9f 91       	pop	r25
    167c:	8f 91       	pop	r24
    167e:	7f 91       	pop	r23
    1680:	6f 91       	pop	r22
    1682:	5f 91       	pop	r21
    1684:	4f 91       	pop	r20
    1686:	3f 91       	pop	r19
    1688:	2f 91       	pop	r18
    168a:	0f 90       	pop	r0
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	0f 90       	pop	r0
    1690:	1f 90       	pop	r1
    1692:	18 95       	reti

00001694 <__vector_9>:
    1694:	1f 92       	push	r1
    1696:	0f 92       	push	r0
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	0f 92       	push	r0
    169c:	11 24       	eor	r1, r1
    169e:	2f 93       	push	r18
    16a0:	3f 93       	push	r19
    16a2:	4f 93       	push	r20
    16a4:	5f 93       	push	r21
    16a6:	6f 93       	push	r22
    16a8:	7f 93       	push	r23
    16aa:	8f 93       	push	r24
    16ac:	9f 93       	push	r25
    16ae:	af 93       	push	r26
    16b0:	bf 93       	push	r27
    16b2:	ef 93       	push	r30
    16b4:	ff 93       	push	r31
    16b6:	82 e0       	ldi	r24, 0x02	; 2
    16b8:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    16bc:	ff 91       	pop	r31
    16be:	ef 91       	pop	r30
    16c0:	bf 91       	pop	r27
    16c2:	af 91       	pop	r26
    16c4:	9f 91       	pop	r25
    16c6:	8f 91       	pop	r24
    16c8:	7f 91       	pop	r23
    16ca:	6f 91       	pop	r22
    16cc:	5f 91       	pop	r21
    16ce:	4f 91       	pop	r20
    16d0:	3f 91       	pop	r19
    16d2:	2f 91       	pop	r18
    16d4:	0f 90       	pop	r0
    16d6:	0f be       	out	0x3f, r0	; 63
    16d8:	0f 90       	pop	r0
    16da:	1f 90       	pop	r1
    16dc:	18 95       	reti

000016de <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>:
    16de:	0e 94 3c 04 	call	0x878	; 0x878 <_ZN9container5ArrayIPFvvELj3EEC1Ev>
    16e2:	08 95       	ret

000016e4 <_Z41__static_initialization_and_destruction_0ii>:
ISR (TIMER2_OVF_vect) 
{
	generateCallback(TimerIndex::Timer2);
}

} // namespace driver
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	59 f4       	brne	.+22     	; 0x16fe <_Z41__static_initialization_and_destruction_0ii+0x1a>
    16e8:	6f 3f       	cpi	r22, 0xFF	; 255
    16ea:	7f 4f       	sbci	r23, 0xFF	; 255
    16ec:	41 f4       	brne	.+16     	; 0x16fe <_Z41__static_initialization_and_destruction_0ii+0x1a>
};

namespace
{    
constexpr uint8_t kNumCircuits{3U};
container::CallbackArray<kNumCircuits> callbacks{};
    16ee:	8d e7       	ldi	r24, 0x7D	; 125
    16f0:	91 e0       	ldi	r25, 0x01	; 1
    16f2:	0e 94 6f 0b 	call	0x16de	; 0x16de <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>
container::Array<Timer*, kNumCircuits> timers{};
    16f6:	87 e7       	ldi	r24, 0x77	; 119
    16f8:	91 e0       	ldi	r25, 0x01	; 1
    16fa:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev>
    16fe:	08 95       	ret

00001700 <_GLOBAL__sub_I__ZN6driver5Timer17myHwdebounceTimerE>:
ISR (TIMER2_OVF_vect) 
{
	generateCallback(TimerIndex::Timer2);
}

} // namespace driver
    1700:	6f ef       	ldi	r22, 0xFF	; 255
    1702:	7f ef       	ldi	r23, 0xFF	; 255
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <_Z41__static_initialization_and_destruction_0ii>
    170c:	08 95       	ret

0000170e <_GLOBAL__sub_D__ZN6driver5Timer17myHwdebounceTimerE>:
    170e:	6f ef       	ldi	r22, 0xFF	; 255
    1710:	7f ef       	ldi	r23, 0xFF	; 255
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <_Z41__static_initialization_and_destruction_0ii>
    171a:	08 95       	ret

0000171c <_ZN6driver8watchdog4initENS0_7TimeoutE>:
{
    return static_cast<T&&>(value);
}

// -----------------------------------------------------------------------------
inline void globalInterruptEnable(void) { asm("SEI"); }
    171c:	f8 94       	cli
    171e:	e0 e6       	ldi	r30, 0x60	; 96
    1720:	f0 e0       	ldi	r31, 0x00	; 0
    1722:	90 81       	ld	r25, Z
    1724:	90 61       	ori	r25, 0x10	; 16
    1726:	90 83       	st	Z, r25
    1728:	90 81       	ld	r25, Z
    172a:	98 60       	ori	r25, 0x08	; 8
    172c:	90 83       	st	Z, r25
    172e:	80 83       	st	Z, r24
    1730:	78 94       	sei
    1732:	08 95       	ret

00001734 <_ZN6driver8watchdog5resetEv>:
    1734:	f8 94       	cli
    1736:	a8 95       	wdr
    1738:	84 b7       	in	r24, 0x34	; 52
    173a:	87 7f       	andi	r24, 0xF7	; 247
    173c:	84 bf       	out	0x34, r24	; 52
    173e:	78 94       	sei
    1740:	08 95       	ret

00001742 <_ZN6driver8watchdog17enableSystemResetEv>:
    1742:	0e 94 9a 0b 	call	0x1734	; 0x1734 <_ZN6driver8watchdog5resetEv>
    1746:	f8 94       	cli
    1748:	e0 e6       	ldi	r30, 0x60	; 96
    174a:	f0 e0       	ldi	r31, 0x00	; 0
    174c:	80 81       	ld	r24, Z
    174e:	80 61       	ori	r24, 0x10	; 16
    1750:	80 83       	st	Z, r24
    1752:	80 81       	ld	r24, Z
    1754:	88 60       	ori	r24, 0x08	; 8
    1756:	80 83       	st	Z, r24
    1758:	80 81       	ld	r24, Z
    175a:	88 60       	ori	r24, 0x08	; 8
    175c:	80 83       	st	Z, r24
    175e:	78 94       	sei
    1760:	08 95       	ret

00001762 <_ZN6driver8watchdog15enableInterruptEPFvvE>:
    1762:	00 97       	sbiw	r24, 0x00	; 0
    1764:	a9 f0       	breq	.+42     	; 0x1790 <_ZN6driver8watchdog15enableInterruptEPFvvE+0x2e>
    1766:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    176a:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    176e:	0e 94 9a 0b 	call	0x1734	; 0x1734 <_ZN6driver8watchdog5resetEv>
    1772:	f8 94       	cli
    1774:	e0 e6       	ldi	r30, 0x60	; 96
    1776:	f0 e0       	ldi	r31, 0x00	; 0
    1778:	80 81       	ld	r24, Z
    177a:	80 61       	ori	r24, 0x10	; 16
    177c:	80 83       	st	Z, r24
    177e:	80 81       	ld	r24, Z
    1780:	88 60       	ori	r24, 0x08	; 8
    1782:	80 83       	st	Z, r24
    1784:	80 81       	ld	r24, Z
    1786:	80 64       	ori	r24, 0x40	; 64
    1788:	80 83       	st	Z, r24
    178a:	78 94       	sei
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	08 95       	ret
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	08 95       	ret

00001794 <__vector_6>:
   utils::globalInterruptEnable();
}

// -----------------------------------------------------------------------------
ISR (WDT_vect) 
{
    1794:	1f 92       	push	r1
    1796:	0f 92       	push	r0
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	0f 92       	push	r0
    179c:	11 24       	eor	r1, r1
    179e:	2f 93       	push	r18
    17a0:	3f 93       	push	r19
    17a2:	4f 93       	push	r20
    17a4:	5f 93       	push	r21
    17a6:	6f 93       	push	r22
    17a8:	7f 93       	push	r23
    17aa:	8f 93       	push	r24
    17ac:	9f 93       	push	r25
    17ae:	af 93       	push	r26
    17b0:	bf 93       	push	r27
    17b2:	ef 93       	push	r30
    17b4:	ff 93       	push	r31
    enableInterrupt(watchdogCallback);
    17b6:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    17ba:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    17be:	0e 94 b1 0b 	call	0x1762	; 0x1762 <_ZN6driver8watchdog15enableInterruptEPFvvE>
    if (watchdogCallback != nullptr) { watchdogCallback(); }
    17c2:	e0 91 83 01 	lds	r30, 0x0183	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    17c6:	f0 91 84 01 	lds	r31, 0x0184	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    17ca:	30 97       	sbiw	r30, 0x00	; 0
    17cc:	09 f0       	breq	.+2      	; 0x17d0 <__vector_6+0x3c>
    17ce:	09 95       	icall
}
    17d0:	ff 91       	pop	r31
    17d2:	ef 91       	pop	r30
    17d4:	bf 91       	pop	r27
    17d6:	af 91       	pop	r26
    17d8:	9f 91       	pop	r25
    17da:	8f 91       	pop	r24
    17dc:	7f 91       	pop	r23
    17de:	6f 91       	pop	r22
    17e0:	5f 91       	pop	r21
    17e2:	4f 91       	pop	r20
    17e4:	3f 91       	pop	r19
    17e6:	2f 91       	pop	r18
    17e8:	0f 90       	pop	r0
    17ea:	0f be       	out	0x3f, r0	; 63
    17ec:	0f 90       	pop	r0
    17ee:	1f 90       	pop	r1
    17f0:	18 95       	reti

000017f2 <__subsf3>:
    17f2:	50 58       	subi	r21, 0x80	; 128

000017f4 <__addsf3>:
    17f4:	bb 27       	eor	r27, r27
    17f6:	aa 27       	eor	r26, r26
    17f8:	0e 94 11 0c 	call	0x1822	; 0x1822 <__addsf3x>
    17fc:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__fp_round>
    1800:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__fp_pscA>
    1804:	38 f0       	brcs	.+14     	; 0x1814 <__addsf3+0x20>
    1806:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__fp_pscB>
    180a:	20 f0       	brcs	.+8      	; 0x1814 <__addsf3+0x20>
    180c:	39 f4       	brne	.+14     	; 0x181c <__addsf3+0x28>
    180e:	9f 3f       	cpi	r25, 0xFF	; 255
    1810:	19 f4       	brne	.+6      	; 0x1818 <__addsf3+0x24>
    1812:	26 f4       	brtc	.+8      	; 0x181c <__addsf3+0x28>
    1814:	0c 94 6e 0d 	jmp	0x1adc	; 0x1adc <__fp_nan>
    1818:	0e f4       	brtc	.+2      	; 0x181c <__addsf3+0x28>
    181a:	e0 95       	com	r30
    181c:	e7 fb       	bst	r30, 7
    181e:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__fp_inf>

00001822 <__addsf3x>:
    1822:	e9 2f       	mov	r30, r25
    1824:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__fp_split3>
    1828:	58 f3       	brcs	.-42     	; 0x1800 <__addsf3+0xc>
    182a:	ba 17       	cp	r27, r26
    182c:	62 07       	cpc	r22, r18
    182e:	73 07       	cpc	r23, r19
    1830:	84 07       	cpc	r24, r20
    1832:	95 07       	cpc	r25, r21
    1834:	20 f0       	brcs	.+8      	; 0x183e <__addsf3x+0x1c>
    1836:	79 f4       	brne	.+30     	; 0x1856 <__addsf3x+0x34>
    1838:	a6 f5       	brtc	.+104    	; 0x18a2 <__addsf3x+0x80>
    183a:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <__fp_zero>
    183e:	0e f4       	brtc	.+2      	; 0x1842 <__addsf3x+0x20>
    1840:	e0 95       	com	r30
    1842:	0b 2e       	mov	r0, r27
    1844:	ba 2f       	mov	r27, r26
    1846:	a0 2d       	mov	r26, r0
    1848:	0b 01       	movw	r0, r22
    184a:	b9 01       	movw	r22, r18
    184c:	90 01       	movw	r18, r0
    184e:	0c 01       	movw	r0, r24
    1850:	ca 01       	movw	r24, r20
    1852:	a0 01       	movw	r20, r0
    1854:	11 24       	eor	r1, r1
    1856:	ff 27       	eor	r31, r31
    1858:	59 1b       	sub	r21, r25
    185a:	99 f0       	breq	.+38     	; 0x1882 <__addsf3x+0x60>
    185c:	59 3f       	cpi	r21, 0xF9	; 249
    185e:	50 f4       	brcc	.+20     	; 0x1874 <__addsf3x+0x52>
    1860:	50 3e       	cpi	r21, 0xE0	; 224
    1862:	68 f1       	brcs	.+90     	; 0x18be <__addsf3x+0x9c>
    1864:	1a 16       	cp	r1, r26
    1866:	f0 40       	sbci	r31, 0x00	; 0
    1868:	a2 2f       	mov	r26, r18
    186a:	23 2f       	mov	r18, r19
    186c:	34 2f       	mov	r19, r20
    186e:	44 27       	eor	r20, r20
    1870:	58 5f       	subi	r21, 0xF8	; 248
    1872:	f3 cf       	rjmp	.-26     	; 0x185a <__addsf3x+0x38>
    1874:	46 95       	lsr	r20
    1876:	37 95       	ror	r19
    1878:	27 95       	ror	r18
    187a:	a7 95       	ror	r26
    187c:	f0 40       	sbci	r31, 0x00	; 0
    187e:	53 95       	inc	r21
    1880:	c9 f7       	brne	.-14     	; 0x1874 <__addsf3x+0x52>
    1882:	7e f4       	brtc	.+30     	; 0x18a2 <__addsf3x+0x80>
    1884:	1f 16       	cp	r1, r31
    1886:	ba 0b       	sbc	r27, r26
    1888:	62 0b       	sbc	r22, r18
    188a:	73 0b       	sbc	r23, r19
    188c:	84 0b       	sbc	r24, r20
    188e:	ba f0       	brmi	.+46     	; 0x18be <__addsf3x+0x9c>
    1890:	91 50       	subi	r25, 0x01	; 1
    1892:	a1 f0       	breq	.+40     	; 0x18bc <__addsf3x+0x9a>
    1894:	ff 0f       	add	r31, r31
    1896:	bb 1f       	adc	r27, r27
    1898:	66 1f       	adc	r22, r22
    189a:	77 1f       	adc	r23, r23
    189c:	88 1f       	adc	r24, r24
    189e:	c2 f7       	brpl	.-16     	; 0x1890 <__addsf3x+0x6e>
    18a0:	0e c0       	rjmp	.+28     	; 0x18be <__addsf3x+0x9c>
    18a2:	ba 0f       	add	r27, r26
    18a4:	62 1f       	adc	r22, r18
    18a6:	73 1f       	adc	r23, r19
    18a8:	84 1f       	adc	r24, r20
    18aa:	48 f4       	brcc	.+18     	; 0x18be <__addsf3x+0x9c>
    18ac:	87 95       	ror	r24
    18ae:	77 95       	ror	r23
    18b0:	67 95       	ror	r22
    18b2:	b7 95       	ror	r27
    18b4:	f7 95       	ror	r31
    18b6:	9e 3f       	cpi	r25, 0xFE	; 254
    18b8:	08 f0       	brcs	.+2      	; 0x18bc <__addsf3x+0x9a>
    18ba:	b0 cf       	rjmp	.-160    	; 0x181c <__addsf3+0x28>
    18bc:	93 95       	inc	r25
    18be:	88 0f       	add	r24, r24
    18c0:	08 f0       	brcs	.+2      	; 0x18c4 <__addsf3x+0xa2>
    18c2:	99 27       	eor	r25, r25
    18c4:	ee 0f       	add	r30, r30
    18c6:	97 95       	ror	r25
    18c8:	87 95       	ror	r24
    18ca:	08 95       	ret

000018cc <__divsf3>:
    18cc:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__divsf3x>
    18d0:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__fp_round>
    18d4:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__fp_pscB>
    18d8:	58 f0       	brcs	.+22     	; 0x18f0 <__divsf3+0x24>
    18da:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__fp_pscA>
    18de:	40 f0       	brcs	.+16     	; 0x18f0 <__divsf3+0x24>
    18e0:	29 f4       	brne	.+10     	; 0x18ec <__divsf3+0x20>
    18e2:	5f 3f       	cpi	r21, 0xFF	; 255
    18e4:	29 f0       	breq	.+10     	; 0x18f0 <__divsf3+0x24>
    18e6:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__fp_inf>
    18ea:	51 11       	cpse	r21, r1
    18ec:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <__fp_szero>
    18f0:	0c 94 6e 0d 	jmp	0x1adc	; 0x1adc <__fp_nan>

000018f4 <__divsf3x>:
    18f4:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__fp_split3>
    18f8:	68 f3       	brcs	.-38     	; 0x18d4 <__divsf3+0x8>

000018fa <__divsf3_pse>:
    18fa:	99 23       	and	r25, r25
    18fc:	b1 f3       	breq	.-20     	; 0x18ea <__divsf3+0x1e>
    18fe:	55 23       	and	r21, r21
    1900:	91 f3       	breq	.-28     	; 0x18e6 <__divsf3+0x1a>
    1902:	95 1b       	sub	r25, r21
    1904:	55 0b       	sbc	r21, r21
    1906:	bb 27       	eor	r27, r27
    1908:	aa 27       	eor	r26, r26
    190a:	62 17       	cp	r22, r18
    190c:	73 07       	cpc	r23, r19
    190e:	84 07       	cpc	r24, r20
    1910:	38 f0       	brcs	.+14     	; 0x1920 <__divsf3_pse+0x26>
    1912:	9f 5f       	subi	r25, 0xFF	; 255
    1914:	5f 4f       	sbci	r21, 0xFF	; 255
    1916:	22 0f       	add	r18, r18
    1918:	33 1f       	adc	r19, r19
    191a:	44 1f       	adc	r20, r20
    191c:	aa 1f       	adc	r26, r26
    191e:	a9 f3       	breq	.-22     	; 0x190a <__divsf3_pse+0x10>
    1920:	35 d0       	rcall	.+106    	; 0x198c <__divsf3_pse+0x92>
    1922:	0e 2e       	mov	r0, r30
    1924:	3a f0       	brmi	.+14     	; 0x1934 <__divsf3_pse+0x3a>
    1926:	e0 e8       	ldi	r30, 0x80	; 128
    1928:	32 d0       	rcall	.+100    	; 0x198e <__divsf3_pse+0x94>
    192a:	91 50       	subi	r25, 0x01	; 1
    192c:	50 40       	sbci	r21, 0x00	; 0
    192e:	e6 95       	lsr	r30
    1930:	00 1c       	adc	r0, r0
    1932:	ca f7       	brpl	.-14     	; 0x1926 <__divsf3_pse+0x2c>
    1934:	2b d0       	rcall	.+86     	; 0x198c <__divsf3_pse+0x92>
    1936:	fe 2f       	mov	r31, r30
    1938:	29 d0       	rcall	.+82     	; 0x198c <__divsf3_pse+0x92>
    193a:	66 0f       	add	r22, r22
    193c:	77 1f       	adc	r23, r23
    193e:	88 1f       	adc	r24, r24
    1940:	bb 1f       	adc	r27, r27
    1942:	26 17       	cp	r18, r22
    1944:	37 07       	cpc	r19, r23
    1946:	48 07       	cpc	r20, r24
    1948:	ab 07       	cpc	r26, r27
    194a:	b0 e8       	ldi	r27, 0x80	; 128
    194c:	09 f0       	breq	.+2      	; 0x1950 <__divsf3_pse+0x56>
    194e:	bb 0b       	sbc	r27, r27
    1950:	80 2d       	mov	r24, r0
    1952:	bf 01       	movw	r22, r30
    1954:	ff 27       	eor	r31, r31
    1956:	93 58       	subi	r25, 0x83	; 131
    1958:	5f 4f       	sbci	r21, 0xFF	; 255
    195a:	3a f0       	brmi	.+14     	; 0x196a <__divsf3_pse+0x70>
    195c:	9e 3f       	cpi	r25, 0xFE	; 254
    195e:	51 05       	cpc	r21, r1
    1960:	78 f0       	brcs	.+30     	; 0x1980 <__divsf3_pse+0x86>
    1962:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__fp_inf>
    1966:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <__fp_szero>
    196a:	5f 3f       	cpi	r21, 0xFF	; 255
    196c:	e4 f3       	brlt	.-8      	; 0x1966 <__divsf3_pse+0x6c>
    196e:	98 3e       	cpi	r25, 0xE8	; 232
    1970:	d4 f3       	brlt	.-12     	; 0x1966 <__divsf3_pse+0x6c>
    1972:	86 95       	lsr	r24
    1974:	77 95       	ror	r23
    1976:	67 95       	ror	r22
    1978:	b7 95       	ror	r27
    197a:	f7 95       	ror	r31
    197c:	9f 5f       	subi	r25, 0xFF	; 255
    197e:	c9 f7       	brne	.-14     	; 0x1972 <__divsf3_pse+0x78>
    1980:	88 0f       	add	r24, r24
    1982:	91 1d       	adc	r25, r1
    1984:	96 95       	lsr	r25
    1986:	87 95       	ror	r24
    1988:	97 f9       	bld	r25, 7
    198a:	08 95       	ret
    198c:	e1 e0       	ldi	r30, 0x01	; 1
    198e:	66 0f       	add	r22, r22
    1990:	77 1f       	adc	r23, r23
    1992:	88 1f       	adc	r24, r24
    1994:	bb 1f       	adc	r27, r27
    1996:	62 17       	cp	r22, r18
    1998:	73 07       	cpc	r23, r19
    199a:	84 07       	cpc	r24, r20
    199c:	ba 07       	cpc	r27, r26
    199e:	20 f0       	brcs	.+8      	; 0x19a8 <__divsf3_pse+0xae>
    19a0:	62 1b       	sub	r22, r18
    19a2:	73 0b       	sbc	r23, r19
    19a4:	84 0b       	sbc	r24, r20
    19a6:	ba 0b       	sbc	r27, r26
    19a8:	ee 1f       	adc	r30, r30
    19aa:	88 f7       	brcc	.-30     	; 0x198e <__divsf3_pse+0x94>
    19ac:	e0 95       	com	r30
    19ae:	08 95       	ret

000019b0 <__fixunssfsi>:
    19b0:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fp_splitA>
    19b4:	88 f0       	brcs	.+34     	; 0x19d8 <__fixunssfsi+0x28>
    19b6:	9f 57       	subi	r25, 0x7F	; 127
    19b8:	98 f0       	brcs	.+38     	; 0x19e0 <__fixunssfsi+0x30>
    19ba:	b9 2f       	mov	r27, r25
    19bc:	99 27       	eor	r25, r25
    19be:	b7 51       	subi	r27, 0x17	; 23
    19c0:	b0 f0       	brcs	.+44     	; 0x19ee <__fixunssfsi+0x3e>
    19c2:	e1 f0       	breq	.+56     	; 0x19fc <__fixunssfsi+0x4c>
    19c4:	66 0f       	add	r22, r22
    19c6:	77 1f       	adc	r23, r23
    19c8:	88 1f       	adc	r24, r24
    19ca:	99 1f       	adc	r25, r25
    19cc:	1a f0       	brmi	.+6      	; 0x19d4 <__fixunssfsi+0x24>
    19ce:	ba 95       	dec	r27
    19d0:	c9 f7       	brne	.-14     	; 0x19c4 <__fixunssfsi+0x14>
    19d2:	14 c0       	rjmp	.+40     	; 0x19fc <__fixunssfsi+0x4c>
    19d4:	b1 30       	cpi	r27, 0x01	; 1
    19d6:	91 f0       	breq	.+36     	; 0x19fc <__fixunssfsi+0x4c>
    19d8:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__fp_zero>
    19dc:	b1 e0       	ldi	r27, 0x01	; 1
    19de:	08 95       	ret
    19e0:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <__fp_zero>
    19e4:	67 2f       	mov	r22, r23
    19e6:	78 2f       	mov	r23, r24
    19e8:	88 27       	eor	r24, r24
    19ea:	b8 5f       	subi	r27, 0xF8	; 248
    19ec:	39 f0       	breq	.+14     	; 0x19fc <__fixunssfsi+0x4c>
    19ee:	b9 3f       	cpi	r27, 0xF9	; 249
    19f0:	cc f3       	brlt	.-14     	; 0x19e4 <__fixunssfsi+0x34>
    19f2:	86 95       	lsr	r24
    19f4:	77 95       	ror	r23
    19f6:	67 95       	ror	r22
    19f8:	b3 95       	inc	r27
    19fa:	d9 f7       	brne	.-10     	; 0x19f2 <__fixunssfsi+0x42>
    19fc:	3e f4       	brtc	.+14     	; 0x1a0c <__fixunssfsi+0x5c>
    19fe:	90 95       	com	r25
    1a00:	80 95       	com	r24
    1a02:	70 95       	com	r23
    1a04:	61 95       	neg	r22
    1a06:	7f 4f       	sbci	r23, 0xFF	; 255
    1a08:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0c:	08 95       	ret

00001a0e <__floatunsisf>:
    1a0e:	e8 94       	clt
    1a10:	09 c0       	rjmp	.+18     	; 0x1a24 <__floatsisf+0x12>

00001a12 <__floatsisf>:
    1a12:	97 fb       	bst	r25, 7
    1a14:	3e f4       	brtc	.+14     	; 0x1a24 <__floatsisf+0x12>
    1a16:	90 95       	com	r25
    1a18:	80 95       	com	r24
    1a1a:	70 95       	com	r23
    1a1c:	61 95       	neg	r22
    1a1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a20:	8f 4f       	sbci	r24, 0xFF	; 255
    1a22:	9f 4f       	sbci	r25, 0xFF	; 255
    1a24:	99 23       	and	r25, r25
    1a26:	a9 f0       	breq	.+42     	; 0x1a52 <__floatsisf+0x40>
    1a28:	f9 2f       	mov	r31, r25
    1a2a:	96 e9       	ldi	r25, 0x96	; 150
    1a2c:	bb 27       	eor	r27, r27
    1a2e:	93 95       	inc	r25
    1a30:	f6 95       	lsr	r31
    1a32:	87 95       	ror	r24
    1a34:	77 95       	ror	r23
    1a36:	67 95       	ror	r22
    1a38:	b7 95       	ror	r27
    1a3a:	f1 11       	cpse	r31, r1
    1a3c:	f8 cf       	rjmp	.-16     	; 0x1a2e <__floatsisf+0x1c>
    1a3e:	fa f4       	brpl	.+62     	; 0x1a7e <__floatsisf+0x6c>
    1a40:	bb 0f       	add	r27, r27
    1a42:	11 f4       	brne	.+4      	; 0x1a48 <__floatsisf+0x36>
    1a44:	60 ff       	sbrs	r22, 0
    1a46:	1b c0       	rjmp	.+54     	; 0x1a7e <__floatsisf+0x6c>
    1a48:	6f 5f       	subi	r22, 0xFF	; 255
    1a4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a50:	16 c0       	rjmp	.+44     	; 0x1a7e <__floatsisf+0x6c>
    1a52:	88 23       	and	r24, r24
    1a54:	11 f0       	breq	.+4      	; 0x1a5a <__floatsisf+0x48>
    1a56:	96 e9       	ldi	r25, 0x96	; 150
    1a58:	11 c0       	rjmp	.+34     	; 0x1a7c <__floatsisf+0x6a>
    1a5a:	77 23       	and	r23, r23
    1a5c:	21 f0       	breq	.+8      	; 0x1a66 <__floatsisf+0x54>
    1a5e:	9e e8       	ldi	r25, 0x8E	; 142
    1a60:	87 2f       	mov	r24, r23
    1a62:	76 2f       	mov	r23, r22
    1a64:	05 c0       	rjmp	.+10     	; 0x1a70 <__floatsisf+0x5e>
    1a66:	66 23       	and	r22, r22
    1a68:	71 f0       	breq	.+28     	; 0x1a86 <__floatsisf+0x74>
    1a6a:	96 e8       	ldi	r25, 0x86	; 134
    1a6c:	86 2f       	mov	r24, r22
    1a6e:	70 e0       	ldi	r23, 0x00	; 0
    1a70:	60 e0       	ldi	r22, 0x00	; 0
    1a72:	2a f0       	brmi	.+10     	; 0x1a7e <__floatsisf+0x6c>
    1a74:	9a 95       	dec	r25
    1a76:	66 0f       	add	r22, r22
    1a78:	77 1f       	adc	r23, r23
    1a7a:	88 1f       	adc	r24, r24
    1a7c:	da f7       	brpl	.-10     	; 0x1a74 <__floatsisf+0x62>
    1a7e:	88 0f       	add	r24, r24
    1a80:	96 95       	lsr	r25
    1a82:	87 95       	ror	r24
    1a84:	97 f9       	bld	r25, 7
    1a86:	08 95       	ret

00001a88 <__fp_cmp>:
    1a88:	99 0f       	add	r25, r25
    1a8a:	00 08       	sbc	r0, r0
    1a8c:	55 0f       	add	r21, r21
    1a8e:	aa 0b       	sbc	r26, r26
    1a90:	e0 e8       	ldi	r30, 0x80	; 128
    1a92:	fe ef       	ldi	r31, 0xFE	; 254
    1a94:	16 16       	cp	r1, r22
    1a96:	17 06       	cpc	r1, r23
    1a98:	e8 07       	cpc	r30, r24
    1a9a:	f9 07       	cpc	r31, r25
    1a9c:	c0 f0       	brcs	.+48     	; 0x1ace <__fp_cmp+0x46>
    1a9e:	12 16       	cp	r1, r18
    1aa0:	13 06       	cpc	r1, r19
    1aa2:	e4 07       	cpc	r30, r20
    1aa4:	f5 07       	cpc	r31, r21
    1aa6:	98 f0       	brcs	.+38     	; 0x1ace <__fp_cmp+0x46>
    1aa8:	62 1b       	sub	r22, r18
    1aaa:	73 0b       	sbc	r23, r19
    1aac:	84 0b       	sbc	r24, r20
    1aae:	95 0b       	sbc	r25, r21
    1ab0:	39 f4       	brne	.+14     	; 0x1ac0 <__fp_cmp+0x38>
    1ab2:	0a 26       	eor	r0, r26
    1ab4:	61 f0       	breq	.+24     	; 0x1ace <__fp_cmp+0x46>
    1ab6:	23 2b       	or	r18, r19
    1ab8:	24 2b       	or	r18, r20
    1aba:	25 2b       	or	r18, r21
    1abc:	21 f4       	brne	.+8      	; 0x1ac6 <__fp_cmp+0x3e>
    1abe:	08 95       	ret
    1ac0:	0a 26       	eor	r0, r26
    1ac2:	09 f4       	brne	.+2      	; 0x1ac6 <__fp_cmp+0x3e>
    1ac4:	a1 40       	sbci	r26, 0x01	; 1
    1ac6:	a6 95       	lsr	r26
    1ac8:	8f ef       	ldi	r24, 0xFF	; 255
    1aca:	81 1d       	adc	r24, r1
    1acc:	81 1d       	adc	r24, r1
    1ace:	08 95       	ret

00001ad0 <__fp_inf>:
    1ad0:	97 f9       	bld	r25, 7
    1ad2:	9f 67       	ori	r25, 0x7F	; 127
    1ad4:	80 e8       	ldi	r24, 0x80	; 128
    1ad6:	70 e0       	ldi	r23, 0x00	; 0
    1ad8:	60 e0       	ldi	r22, 0x00	; 0
    1ada:	08 95       	ret

00001adc <__fp_nan>:
    1adc:	9f ef       	ldi	r25, 0xFF	; 255
    1ade:	80 ec       	ldi	r24, 0xC0	; 192
    1ae0:	08 95       	ret

00001ae2 <__fp_pscA>:
    1ae2:	00 24       	eor	r0, r0
    1ae4:	0a 94       	dec	r0
    1ae6:	16 16       	cp	r1, r22
    1ae8:	17 06       	cpc	r1, r23
    1aea:	18 06       	cpc	r1, r24
    1aec:	09 06       	cpc	r0, r25
    1aee:	08 95       	ret

00001af0 <__fp_pscB>:
    1af0:	00 24       	eor	r0, r0
    1af2:	0a 94       	dec	r0
    1af4:	12 16       	cp	r1, r18
    1af6:	13 06       	cpc	r1, r19
    1af8:	14 06       	cpc	r1, r20
    1afa:	05 06       	cpc	r0, r21
    1afc:	08 95       	ret

00001afe <__fp_round>:
    1afe:	09 2e       	mov	r0, r25
    1b00:	03 94       	inc	r0
    1b02:	00 0c       	add	r0, r0
    1b04:	11 f4       	brne	.+4      	; 0x1b0a <__fp_round+0xc>
    1b06:	88 23       	and	r24, r24
    1b08:	52 f0       	brmi	.+20     	; 0x1b1e <__fp_round+0x20>
    1b0a:	bb 0f       	add	r27, r27
    1b0c:	40 f4       	brcc	.+16     	; 0x1b1e <__fp_round+0x20>
    1b0e:	bf 2b       	or	r27, r31
    1b10:	11 f4       	brne	.+4      	; 0x1b16 <__fp_round+0x18>
    1b12:	60 ff       	sbrs	r22, 0
    1b14:	04 c0       	rjmp	.+8      	; 0x1b1e <__fp_round+0x20>
    1b16:	6f 5f       	subi	r22, 0xFF	; 255
    1b18:	7f 4f       	sbci	r23, 0xFF	; 255
    1b1a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b1e:	08 95       	ret

00001b20 <__fp_split3>:
    1b20:	57 fd       	sbrc	r21, 7
    1b22:	90 58       	subi	r25, 0x80	; 128
    1b24:	44 0f       	add	r20, r20
    1b26:	55 1f       	adc	r21, r21
    1b28:	59 f0       	breq	.+22     	; 0x1b40 <__fp_splitA+0x10>
    1b2a:	5f 3f       	cpi	r21, 0xFF	; 255
    1b2c:	71 f0       	breq	.+28     	; 0x1b4a <__fp_splitA+0x1a>
    1b2e:	47 95       	ror	r20

00001b30 <__fp_splitA>:
    1b30:	88 0f       	add	r24, r24
    1b32:	97 fb       	bst	r25, 7
    1b34:	99 1f       	adc	r25, r25
    1b36:	61 f0       	breq	.+24     	; 0x1b50 <__fp_splitA+0x20>
    1b38:	9f 3f       	cpi	r25, 0xFF	; 255
    1b3a:	79 f0       	breq	.+30     	; 0x1b5a <__fp_splitA+0x2a>
    1b3c:	87 95       	ror	r24
    1b3e:	08 95       	ret
    1b40:	12 16       	cp	r1, r18
    1b42:	13 06       	cpc	r1, r19
    1b44:	14 06       	cpc	r1, r20
    1b46:	55 1f       	adc	r21, r21
    1b48:	f2 cf       	rjmp	.-28     	; 0x1b2e <__fp_split3+0xe>
    1b4a:	46 95       	lsr	r20
    1b4c:	f1 df       	rcall	.-30     	; 0x1b30 <__fp_splitA>
    1b4e:	08 c0       	rjmp	.+16     	; 0x1b60 <__fp_splitA+0x30>
    1b50:	16 16       	cp	r1, r22
    1b52:	17 06       	cpc	r1, r23
    1b54:	18 06       	cpc	r1, r24
    1b56:	99 1f       	adc	r25, r25
    1b58:	f1 cf       	rjmp	.-30     	; 0x1b3c <__fp_splitA+0xc>
    1b5a:	86 95       	lsr	r24
    1b5c:	71 05       	cpc	r23, r1
    1b5e:	61 05       	cpc	r22, r1
    1b60:	08 94       	sec
    1b62:	08 95       	ret

00001b64 <__fp_zero>:
    1b64:	e8 94       	clt

00001b66 <__fp_szero>:
    1b66:	bb 27       	eor	r27, r27
    1b68:	66 27       	eor	r22, r22
    1b6a:	77 27       	eor	r23, r23
    1b6c:	cb 01       	movw	r24, r22
    1b6e:	97 f9       	bld	r25, 7
    1b70:	08 95       	ret

00001b72 <__gesf2>:
    1b72:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <__fp_cmp>
    1b76:	08 f4       	brcc	.+2      	; 0x1b7a <__gesf2+0x8>
    1b78:	8f ef       	ldi	r24, 0xFF	; 255
    1b7a:	08 95       	ret

00001b7c <__mulsf3>:
    1b7c:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__mulsf3x>
    1b80:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__fp_round>
    1b84:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__fp_pscA>
    1b88:	38 f0       	brcs	.+14     	; 0x1b98 <__mulsf3+0x1c>
    1b8a:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__fp_pscB>
    1b8e:	20 f0       	brcs	.+8      	; 0x1b98 <__mulsf3+0x1c>
    1b90:	95 23       	and	r25, r21
    1b92:	11 f0       	breq	.+4      	; 0x1b98 <__mulsf3+0x1c>
    1b94:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__fp_inf>
    1b98:	0c 94 6e 0d 	jmp	0x1adc	; 0x1adc <__fp_nan>
    1b9c:	11 24       	eor	r1, r1
    1b9e:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <__fp_szero>

00001ba2 <__mulsf3x>:
    1ba2:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__fp_split3>
    1ba6:	70 f3       	brcs	.-36     	; 0x1b84 <__mulsf3+0x8>

00001ba8 <__mulsf3_pse>:
    1ba8:	95 9f       	mul	r25, r21
    1baa:	c1 f3       	breq	.-16     	; 0x1b9c <__mulsf3+0x20>
    1bac:	95 0f       	add	r25, r21
    1bae:	50 e0       	ldi	r21, 0x00	; 0
    1bb0:	55 1f       	adc	r21, r21
    1bb2:	62 9f       	mul	r22, r18
    1bb4:	f0 01       	movw	r30, r0
    1bb6:	72 9f       	mul	r23, r18
    1bb8:	bb 27       	eor	r27, r27
    1bba:	f0 0d       	add	r31, r0
    1bbc:	b1 1d       	adc	r27, r1
    1bbe:	63 9f       	mul	r22, r19
    1bc0:	aa 27       	eor	r26, r26
    1bc2:	f0 0d       	add	r31, r0
    1bc4:	b1 1d       	adc	r27, r1
    1bc6:	aa 1f       	adc	r26, r26
    1bc8:	64 9f       	mul	r22, r20
    1bca:	66 27       	eor	r22, r22
    1bcc:	b0 0d       	add	r27, r0
    1bce:	a1 1d       	adc	r26, r1
    1bd0:	66 1f       	adc	r22, r22
    1bd2:	82 9f       	mul	r24, r18
    1bd4:	22 27       	eor	r18, r18
    1bd6:	b0 0d       	add	r27, r0
    1bd8:	a1 1d       	adc	r26, r1
    1bda:	62 1f       	adc	r22, r18
    1bdc:	73 9f       	mul	r23, r19
    1bde:	b0 0d       	add	r27, r0
    1be0:	a1 1d       	adc	r26, r1
    1be2:	62 1f       	adc	r22, r18
    1be4:	83 9f       	mul	r24, r19
    1be6:	a0 0d       	add	r26, r0
    1be8:	61 1d       	adc	r22, r1
    1bea:	22 1f       	adc	r18, r18
    1bec:	74 9f       	mul	r23, r20
    1bee:	33 27       	eor	r19, r19
    1bf0:	a0 0d       	add	r26, r0
    1bf2:	61 1d       	adc	r22, r1
    1bf4:	23 1f       	adc	r18, r19
    1bf6:	84 9f       	mul	r24, r20
    1bf8:	60 0d       	add	r22, r0
    1bfa:	21 1d       	adc	r18, r1
    1bfc:	82 2f       	mov	r24, r18
    1bfe:	76 2f       	mov	r23, r22
    1c00:	6a 2f       	mov	r22, r26
    1c02:	11 24       	eor	r1, r1
    1c04:	9f 57       	subi	r25, 0x7F	; 127
    1c06:	50 40       	sbci	r21, 0x00	; 0
    1c08:	9a f0       	brmi	.+38     	; 0x1c30 <__mulsf3_pse+0x88>
    1c0a:	f1 f0       	breq	.+60     	; 0x1c48 <__mulsf3_pse+0xa0>
    1c0c:	88 23       	and	r24, r24
    1c0e:	4a f0       	brmi	.+18     	; 0x1c22 <__mulsf3_pse+0x7a>
    1c10:	ee 0f       	add	r30, r30
    1c12:	ff 1f       	adc	r31, r31
    1c14:	bb 1f       	adc	r27, r27
    1c16:	66 1f       	adc	r22, r22
    1c18:	77 1f       	adc	r23, r23
    1c1a:	88 1f       	adc	r24, r24
    1c1c:	91 50       	subi	r25, 0x01	; 1
    1c1e:	50 40       	sbci	r21, 0x00	; 0
    1c20:	a9 f7       	brne	.-22     	; 0x1c0c <__mulsf3_pse+0x64>
    1c22:	9e 3f       	cpi	r25, 0xFE	; 254
    1c24:	51 05       	cpc	r21, r1
    1c26:	80 f0       	brcs	.+32     	; 0x1c48 <__mulsf3_pse+0xa0>
    1c28:	0c 94 68 0d 	jmp	0x1ad0	; 0x1ad0 <__fp_inf>
    1c2c:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <__fp_szero>
    1c30:	5f 3f       	cpi	r21, 0xFF	; 255
    1c32:	e4 f3       	brlt	.-8      	; 0x1c2c <__mulsf3_pse+0x84>
    1c34:	98 3e       	cpi	r25, 0xE8	; 232
    1c36:	d4 f3       	brlt	.-12     	; 0x1c2c <__mulsf3_pse+0x84>
    1c38:	86 95       	lsr	r24
    1c3a:	77 95       	ror	r23
    1c3c:	67 95       	ror	r22
    1c3e:	b7 95       	ror	r27
    1c40:	f7 95       	ror	r31
    1c42:	e7 95       	ror	r30
    1c44:	9f 5f       	subi	r25, 0xFF	; 255
    1c46:	c1 f7       	brne	.-16     	; 0x1c38 <__mulsf3_pse+0x90>
    1c48:	fe 2b       	or	r31, r30
    1c4a:	88 0f       	add	r24, r24
    1c4c:	91 1d       	adc	r25, r1
    1c4e:	96 95       	lsr	r25
    1c50:	87 95       	ror	r24
    1c52:	97 f9       	bld	r25, 7
    1c54:	08 95       	ret

00001c56 <__ashldi3>:
    1c56:	0f 93       	push	r16
    1c58:	08 30       	cpi	r16, 0x08	; 8
    1c5a:	90 f0       	brcs	.+36     	; 0x1c80 <__ashldi3+0x2a>
    1c5c:	98 2f       	mov	r25, r24
    1c5e:	87 2f       	mov	r24, r23
    1c60:	76 2f       	mov	r23, r22
    1c62:	65 2f       	mov	r22, r21
    1c64:	54 2f       	mov	r21, r20
    1c66:	43 2f       	mov	r20, r19
    1c68:	32 2f       	mov	r19, r18
    1c6a:	22 27       	eor	r18, r18
    1c6c:	08 50       	subi	r16, 0x08	; 8
    1c6e:	f4 cf       	rjmp	.-24     	; 0x1c58 <__ashldi3+0x2>
    1c70:	22 0f       	add	r18, r18
    1c72:	33 1f       	adc	r19, r19
    1c74:	44 1f       	adc	r20, r20
    1c76:	55 1f       	adc	r21, r21
    1c78:	66 1f       	adc	r22, r22
    1c7a:	77 1f       	adc	r23, r23
    1c7c:	88 1f       	adc	r24, r24
    1c7e:	99 1f       	adc	r25, r25
    1c80:	0a 95       	dec	r16
    1c82:	b2 f7       	brpl	.-20     	; 0x1c70 <__ashldi3+0x1a>
    1c84:	0f 91       	pop	r16
    1c86:	08 95       	ret

00001c88 <__ashrdi3>:
    1c88:	97 fb       	bst	r25, 7
    1c8a:	10 f8       	bld	r1, 0

00001c8c <__lshrdi3>:
    1c8c:	16 94       	lsr	r1
    1c8e:	00 08       	sbc	r0, r0
    1c90:	0f 93       	push	r16
    1c92:	08 30       	cpi	r16, 0x08	; 8
    1c94:	98 f0       	brcs	.+38     	; 0x1cbc <__lshrdi3+0x30>
    1c96:	08 50       	subi	r16, 0x08	; 8
    1c98:	23 2f       	mov	r18, r19
    1c9a:	34 2f       	mov	r19, r20
    1c9c:	45 2f       	mov	r20, r21
    1c9e:	56 2f       	mov	r21, r22
    1ca0:	67 2f       	mov	r22, r23
    1ca2:	78 2f       	mov	r23, r24
    1ca4:	89 2f       	mov	r24, r25
    1ca6:	90 2d       	mov	r25, r0
    1ca8:	f4 cf       	rjmp	.-24     	; 0x1c92 <__lshrdi3+0x6>
    1caa:	05 94       	asr	r0
    1cac:	97 95       	ror	r25
    1cae:	87 95       	ror	r24
    1cb0:	77 95       	ror	r23
    1cb2:	67 95       	ror	r22
    1cb4:	57 95       	ror	r21
    1cb6:	47 95       	ror	r20
    1cb8:	37 95       	ror	r19
    1cba:	27 95       	ror	r18
    1cbc:	0a 95       	dec	r16
    1cbe:	aa f7       	brpl	.-22     	; 0x1caa <__lshrdi3+0x1e>
    1cc0:	0f 91       	pop	r16
    1cc2:	08 95       	ret

00001cc4 <__cmpdi2_s8>:
    1cc4:	00 24       	eor	r0, r0
    1cc6:	a7 fd       	sbrc	r26, 7
    1cc8:	00 94       	com	r0
    1cca:	2a 17       	cp	r18, r26
    1ccc:	30 05       	cpc	r19, r0
    1cce:	40 05       	cpc	r20, r0
    1cd0:	50 05       	cpc	r21, r0
    1cd2:	60 05       	cpc	r22, r0
    1cd4:	70 05       	cpc	r23, r0
    1cd6:	80 05       	cpc	r24, r0
    1cd8:	90 05       	cpc	r25, r0
    1cda:	08 95       	ret

00001cdc <__tablejump2__>:
    1cdc:	ee 0f       	add	r30, r30
    1cde:	ff 1f       	adc	r31, r31
    1ce0:	05 90       	lpm	r0, Z+
    1ce2:	f4 91       	lpm	r31, Z
    1ce4:	e0 2d       	mov	r30, r0
    1ce6:	09 94       	ijmp

00001ce8 <malloc>:
    1ce8:	0f 93       	push	r16
    1cea:	1f 93       	push	r17
    1cec:	cf 93       	push	r28
    1cee:	df 93       	push	r29
    1cf0:	82 30       	cpi	r24, 0x02	; 2
    1cf2:	91 05       	cpc	r25, r1
    1cf4:	10 f4       	brcc	.+4      	; 0x1cfa <malloc+0x12>
    1cf6:	82 e0       	ldi	r24, 0x02	; 2
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	e0 91 87 01 	lds	r30, 0x0187	; 0x800187 <__flp>
    1cfe:	f0 91 88 01 	lds	r31, 0x0188	; 0x800188 <__flp+0x1>
    1d02:	20 e0       	ldi	r18, 0x00	; 0
    1d04:	30 e0       	ldi	r19, 0x00	; 0
    1d06:	a0 e0       	ldi	r26, 0x00	; 0
    1d08:	b0 e0       	ldi	r27, 0x00	; 0
    1d0a:	30 97       	sbiw	r30, 0x00	; 0
    1d0c:	19 f1       	breq	.+70     	; 0x1d54 <malloc+0x6c>
    1d0e:	40 81       	ld	r20, Z
    1d10:	51 81       	ldd	r21, Z+1	; 0x01
    1d12:	02 81       	ldd	r16, Z+2	; 0x02
    1d14:	13 81       	ldd	r17, Z+3	; 0x03
    1d16:	48 17       	cp	r20, r24
    1d18:	59 07       	cpc	r21, r25
    1d1a:	c8 f0       	brcs	.+50     	; 0x1d4e <malloc+0x66>
    1d1c:	84 17       	cp	r24, r20
    1d1e:	95 07       	cpc	r25, r21
    1d20:	69 f4       	brne	.+26     	; 0x1d3c <malloc+0x54>
    1d22:	10 97       	sbiw	r26, 0x00	; 0
    1d24:	31 f0       	breq	.+12     	; 0x1d32 <malloc+0x4a>
    1d26:	12 96       	adiw	r26, 0x02	; 2
    1d28:	0c 93       	st	X, r16
    1d2a:	12 97       	sbiw	r26, 0x02	; 2
    1d2c:	13 96       	adiw	r26, 0x03	; 3
    1d2e:	1c 93       	st	X, r17
    1d30:	27 c0       	rjmp	.+78     	; 0x1d80 <malloc+0x98>
    1d32:	00 93 87 01 	sts	0x0187, r16	; 0x800187 <__flp>
    1d36:	10 93 88 01 	sts	0x0188, r17	; 0x800188 <__flp+0x1>
    1d3a:	22 c0       	rjmp	.+68     	; 0x1d80 <malloc+0x98>
    1d3c:	21 15       	cp	r18, r1
    1d3e:	31 05       	cpc	r19, r1
    1d40:	19 f0       	breq	.+6      	; 0x1d48 <malloc+0x60>
    1d42:	42 17       	cp	r20, r18
    1d44:	53 07       	cpc	r21, r19
    1d46:	18 f4       	brcc	.+6      	; 0x1d4e <malloc+0x66>
    1d48:	9a 01       	movw	r18, r20
    1d4a:	bd 01       	movw	r22, r26
    1d4c:	ef 01       	movw	r28, r30
    1d4e:	df 01       	movw	r26, r30
    1d50:	f8 01       	movw	r30, r16
    1d52:	db cf       	rjmp	.-74     	; 0x1d0a <malloc+0x22>
    1d54:	21 15       	cp	r18, r1
    1d56:	31 05       	cpc	r19, r1
    1d58:	f9 f0       	breq	.+62     	; 0x1d98 <malloc+0xb0>
    1d5a:	28 1b       	sub	r18, r24
    1d5c:	39 0b       	sbc	r19, r25
    1d5e:	24 30       	cpi	r18, 0x04	; 4
    1d60:	31 05       	cpc	r19, r1
    1d62:	80 f4       	brcc	.+32     	; 0x1d84 <malloc+0x9c>
    1d64:	8a 81       	ldd	r24, Y+2	; 0x02
    1d66:	9b 81       	ldd	r25, Y+3	; 0x03
    1d68:	61 15       	cp	r22, r1
    1d6a:	71 05       	cpc	r23, r1
    1d6c:	21 f0       	breq	.+8      	; 0x1d76 <malloc+0x8e>
    1d6e:	fb 01       	movw	r30, r22
    1d70:	93 83       	std	Z+3, r25	; 0x03
    1d72:	82 83       	std	Z+2, r24	; 0x02
    1d74:	04 c0       	rjmp	.+8      	; 0x1d7e <malloc+0x96>
    1d76:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <__flp+0x1>
    1d7a:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <__flp>
    1d7e:	fe 01       	movw	r30, r28
    1d80:	32 96       	adiw	r30, 0x02	; 2
    1d82:	44 c0       	rjmp	.+136    	; 0x1e0c <malloc+0x124>
    1d84:	fe 01       	movw	r30, r28
    1d86:	e2 0f       	add	r30, r18
    1d88:	f3 1f       	adc	r31, r19
    1d8a:	81 93       	st	Z+, r24
    1d8c:	91 93       	st	Z+, r25
    1d8e:	22 50       	subi	r18, 0x02	; 2
    1d90:	31 09       	sbc	r19, r1
    1d92:	39 83       	std	Y+1, r19	; 0x01
    1d94:	28 83       	st	Y, r18
    1d96:	3a c0       	rjmp	.+116    	; 0x1e0c <malloc+0x124>
    1d98:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    1d9c:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    1da0:	23 2b       	or	r18, r19
    1da2:	41 f4       	brne	.+16     	; 0x1db4 <malloc+0xcc>
    1da4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1da8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1dac:	30 93 86 01 	sts	0x0186, r19	; 0x800186 <__brkval+0x1>
    1db0:	20 93 85 01 	sts	0x0185, r18	; 0x800185 <__brkval>
    1db4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1db8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dbc:	21 15       	cp	r18, r1
    1dbe:	31 05       	cpc	r19, r1
    1dc0:	41 f4       	brne	.+16     	; 0x1dd2 <malloc+0xea>
    1dc2:	2d b7       	in	r18, 0x3d	; 61
    1dc4:	3e b7       	in	r19, 0x3e	; 62
    1dc6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1dca:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1dce:	24 1b       	sub	r18, r20
    1dd0:	35 0b       	sbc	r19, r21
    1dd2:	e0 91 85 01 	lds	r30, 0x0185	; 0x800185 <__brkval>
    1dd6:	f0 91 86 01 	lds	r31, 0x0186	; 0x800186 <__brkval+0x1>
    1dda:	e2 17       	cp	r30, r18
    1ddc:	f3 07       	cpc	r31, r19
    1dde:	a0 f4       	brcc	.+40     	; 0x1e08 <malloc+0x120>
    1de0:	2e 1b       	sub	r18, r30
    1de2:	3f 0b       	sbc	r19, r31
    1de4:	28 17       	cp	r18, r24
    1de6:	39 07       	cpc	r19, r25
    1de8:	78 f0       	brcs	.+30     	; 0x1e08 <malloc+0x120>
    1dea:	ac 01       	movw	r20, r24
    1dec:	4e 5f       	subi	r20, 0xFE	; 254
    1dee:	5f 4f       	sbci	r21, 0xFF	; 255
    1df0:	24 17       	cp	r18, r20
    1df2:	35 07       	cpc	r19, r21
    1df4:	48 f0       	brcs	.+18     	; 0x1e08 <malloc+0x120>
    1df6:	4e 0f       	add	r20, r30
    1df8:	5f 1f       	adc	r21, r31
    1dfa:	50 93 86 01 	sts	0x0186, r21	; 0x800186 <__brkval+0x1>
    1dfe:	40 93 85 01 	sts	0x0185, r20	; 0x800185 <__brkval>
    1e02:	81 93       	st	Z+, r24
    1e04:	91 93       	st	Z+, r25
    1e06:	02 c0       	rjmp	.+4      	; 0x1e0c <malloc+0x124>
    1e08:	e0 e0       	ldi	r30, 0x00	; 0
    1e0a:	f0 e0       	ldi	r31, 0x00	; 0
    1e0c:	cf 01       	movw	r24, r30
    1e0e:	df 91       	pop	r29
    1e10:	cf 91       	pop	r28
    1e12:	1f 91       	pop	r17
    1e14:	0f 91       	pop	r16
    1e16:	08 95       	ret

00001e18 <free>:
    1e18:	cf 93       	push	r28
    1e1a:	df 93       	push	r29
    1e1c:	00 97       	sbiw	r24, 0x00	; 0
    1e1e:	09 f4       	brne	.+2      	; 0x1e22 <free+0xa>
    1e20:	81 c0       	rjmp	.+258    	; 0x1f24 <free+0x10c>
    1e22:	fc 01       	movw	r30, r24
    1e24:	32 97       	sbiw	r30, 0x02	; 2
    1e26:	13 82       	std	Z+3, r1	; 0x03
    1e28:	12 82       	std	Z+2, r1	; 0x02
    1e2a:	a0 91 87 01 	lds	r26, 0x0187	; 0x800187 <__flp>
    1e2e:	b0 91 88 01 	lds	r27, 0x0188	; 0x800188 <__flp+0x1>
    1e32:	10 97       	sbiw	r26, 0x00	; 0
    1e34:	81 f4       	brne	.+32     	; 0x1e56 <free+0x3e>
    1e36:	20 81       	ld	r18, Z
    1e38:	31 81       	ldd	r19, Z+1	; 0x01
    1e3a:	82 0f       	add	r24, r18
    1e3c:	93 1f       	adc	r25, r19
    1e3e:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    1e42:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    1e46:	28 17       	cp	r18, r24
    1e48:	39 07       	cpc	r19, r25
    1e4a:	51 f5       	brne	.+84     	; 0x1ea0 <free+0x88>
    1e4c:	f0 93 86 01 	sts	0x0186, r31	; 0x800186 <__brkval+0x1>
    1e50:	e0 93 85 01 	sts	0x0185, r30	; 0x800185 <__brkval>
    1e54:	67 c0       	rjmp	.+206    	; 0x1f24 <free+0x10c>
    1e56:	ed 01       	movw	r28, r26
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	30 e0       	ldi	r19, 0x00	; 0
    1e5c:	ce 17       	cp	r28, r30
    1e5e:	df 07       	cpc	r29, r31
    1e60:	40 f4       	brcc	.+16     	; 0x1e72 <free+0x5a>
    1e62:	4a 81       	ldd	r20, Y+2	; 0x02
    1e64:	5b 81       	ldd	r21, Y+3	; 0x03
    1e66:	9e 01       	movw	r18, r28
    1e68:	41 15       	cp	r20, r1
    1e6a:	51 05       	cpc	r21, r1
    1e6c:	f1 f0       	breq	.+60     	; 0x1eaa <free+0x92>
    1e6e:	ea 01       	movw	r28, r20
    1e70:	f5 cf       	rjmp	.-22     	; 0x1e5c <free+0x44>
    1e72:	d3 83       	std	Z+3, r29	; 0x03
    1e74:	c2 83       	std	Z+2, r28	; 0x02
    1e76:	40 81       	ld	r20, Z
    1e78:	51 81       	ldd	r21, Z+1	; 0x01
    1e7a:	84 0f       	add	r24, r20
    1e7c:	95 1f       	adc	r25, r21
    1e7e:	c8 17       	cp	r28, r24
    1e80:	d9 07       	cpc	r29, r25
    1e82:	59 f4       	brne	.+22     	; 0x1e9a <free+0x82>
    1e84:	88 81       	ld	r24, Y
    1e86:	99 81       	ldd	r25, Y+1	; 0x01
    1e88:	84 0f       	add	r24, r20
    1e8a:	95 1f       	adc	r25, r21
    1e8c:	02 96       	adiw	r24, 0x02	; 2
    1e8e:	91 83       	std	Z+1, r25	; 0x01
    1e90:	80 83       	st	Z, r24
    1e92:	8a 81       	ldd	r24, Y+2	; 0x02
    1e94:	9b 81       	ldd	r25, Y+3	; 0x03
    1e96:	93 83       	std	Z+3, r25	; 0x03
    1e98:	82 83       	std	Z+2, r24	; 0x02
    1e9a:	21 15       	cp	r18, r1
    1e9c:	31 05       	cpc	r19, r1
    1e9e:	29 f4       	brne	.+10     	; 0x1eaa <free+0x92>
    1ea0:	f0 93 88 01 	sts	0x0188, r31	; 0x800188 <__flp+0x1>
    1ea4:	e0 93 87 01 	sts	0x0187, r30	; 0x800187 <__flp>
    1ea8:	3d c0       	rjmp	.+122    	; 0x1f24 <free+0x10c>
    1eaa:	e9 01       	movw	r28, r18
    1eac:	fb 83       	std	Y+3, r31	; 0x03
    1eae:	ea 83       	std	Y+2, r30	; 0x02
    1eb0:	49 91       	ld	r20, Y+
    1eb2:	59 91       	ld	r21, Y+
    1eb4:	c4 0f       	add	r28, r20
    1eb6:	d5 1f       	adc	r29, r21
    1eb8:	ec 17       	cp	r30, r28
    1eba:	fd 07       	cpc	r31, r29
    1ebc:	61 f4       	brne	.+24     	; 0x1ed6 <free+0xbe>
    1ebe:	80 81       	ld	r24, Z
    1ec0:	91 81       	ldd	r25, Z+1	; 0x01
    1ec2:	84 0f       	add	r24, r20
    1ec4:	95 1f       	adc	r25, r21
    1ec6:	02 96       	adiw	r24, 0x02	; 2
    1ec8:	e9 01       	movw	r28, r18
    1eca:	99 83       	std	Y+1, r25	; 0x01
    1ecc:	88 83       	st	Y, r24
    1ece:	82 81       	ldd	r24, Z+2	; 0x02
    1ed0:	93 81       	ldd	r25, Z+3	; 0x03
    1ed2:	9b 83       	std	Y+3, r25	; 0x03
    1ed4:	8a 83       	std	Y+2, r24	; 0x02
    1ed6:	e0 e0       	ldi	r30, 0x00	; 0
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	12 96       	adiw	r26, 0x02	; 2
    1edc:	8d 91       	ld	r24, X+
    1ede:	9c 91       	ld	r25, X
    1ee0:	13 97       	sbiw	r26, 0x03	; 3
    1ee2:	00 97       	sbiw	r24, 0x00	; 0
    1ee4:	19 f0       	breq	.+6      	; 0x1eec <free+0xd4>
    1ee6:	fd 01       	movw	r30, r26
    1ee8:	dc 01       	movw	r26, r24
    1eea:	f7 cf       	rjmp	.-18     	; 0x1eda <free+0xc2>
    1eec:	8d 91       	ld	r24, X+
    1eee:	9c 91       	ld	r25, X
    1ef0:	11 97       	sbiw	r26, 0x01	; 1
    1ef2:	9d 01       	movw	r18, r26
    1ef4:	2e 5f       	subi	r18, 0xFE	; 254
    1ef6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ef8:	82 0f       	add	r24, r18
    1efa:	93 1f       	adc	r25, r19
    1efc:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    1f00:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    1f04:	28 17       	cp	r18, r24
    1f06:	39 07       	cpc	r19, r25
    1f08:	69 f4       	brne	.+26     	; 0x1f24 <free+0x10c>
    1f0a:	30 97       	sbiw	r30, 0x00	; 0
    1f0c:	29 f4       	brne	.+10     	; 0x1f18 <free+0x100>
    1f0e:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <__flp+0x1>
    1f12:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <__flp>
    1f16:	02 c0       	rjmp	.+4      	; 0x1f1c <free+0x104>
    1f18:	13 82       	std	Z+3, r1	; 0x03
    1f1a:	12 82       	std	Z+2, r1	; 0x02
    1f1c:	b0 93 86 01 	sts	0x0186, r27	; 0x800186 <__brkval+0x1>
    1f20:	a0 93 85 01 	sts	0x0185, r26	; 0x800185 <__brkval>
    1f24:	df 91       	pop	r29
    1f26:	cf 91       	pop	r28
    1f28:	08 95       	ret

00001f2a <realloc>:
    1f2a:	a0 e0       	ldi	r26, 0x00	; 0
    1f2c:	b0 e0       	ldi	r27, 0x00	; 0
    1f2e:	eb e9       	ldi	r30, 0x9B	; 155
    1f30:	ff e0       	ldi	r31, 0x0F	; 15
    1f32:	0c 94 4b 13 	jmp	0x2696	; 0x2696 <__prologue_saves__+0x8>
    1f36:	ec 01       	movw	r28, r24
    1f38:	00 97       	sbiw	r24, 0x00	; 0
    1f3a:	21 f4       	brne	.+8      	; 0x1f44 <realloc+0x1a>
    1f3c:	cb 01       	movw	r24, r22
    1f3e:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <malloc>
    1f42:	b4 c0       	rjmp	.+360    	; 0x20ac <realloc+0x182>
    1f44:	fc 01       	movw	r30, r24
    1f46:	e6 0f       	add	r30, r22
    1f48:	f7 1f       	adc	r31, r23
    1f4a:	9c 01       	movw	r18, r24
    1f4c:	22 50       	subi	r18, 0x02	; 2
    1f4e:	31 09       	sbc	r19, r1
    1f50:	e2 17       	cp	r30, r18
    1f52:	f3 07       	cpc	r31, r19
    1f54:	08 f4       	brcc	.+2      	; 0x1f58 <realloc+0x2e>
    1f56:	a8 c0       	rjmp	.+336    	; 0x20a8 <realloc+0x17e>
    1f58:	d9 01       	movw	r26, r18
    1f5a:	0d 91       	ld	r16, X+
    1f5c:	1c 91       	ld	r17, X
    1f5e:	11 97       	sbiw	r26, 0x01	; 1
    1f60:	06 17       	cp	r16, r22
    1f62:	17 07       	cpc	r17, r23
    1f64:	b0 f0       	brcs	.+44     	; 0x1f92 <realloc+0x68>
    1f66:	05 30       	cpi	r16, 0x05	; 5
    1f68:	11 05       	cpc	r17, r1
    1f6a:	08 f4       	brcc	.+2      	; 0x1f6e <realloc+0x44>
    1f6c:	9b c0       	rjmp	.+310    	; 0x20a4 <realloc+0x17a>
    1f6e:	c8 01       	movw	r24, r16
    1f70:	04 97       	sbiw	r24, 0x04	; 4
    1f72:	86 17       	cp	r24, r22
    1f74:	97 07       	cpc	r25, r23
    1f76:	08 f4       	brcc	.+2      	; 0x1f7a <realloc+0x50>
    1f78:	95 c0       	rjmp	.+298    	; 0x20a4 <realloc+0x17a>
    1f7a:	02 50       	subi	r16, 0x02	; 2
    1f7c:	11 09       	sbc	r17, r1
    1f7e:	06 1b       	sub	r16, r22
    1f80:	17 0b       	sbc	r17, r23
    1f82:	01 93       	st	Z+, r16
    1f84:	11 93       	st	Z+, r17
    1f86:	6d 93       	st	X+, r22
    1f88:	7c 93       	st	X, r23
    1f8a:	cf 01       	movw	r24, r30
    1f8c:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <free>
    1f90:	89 c0       	rjmp	.+274    	; 0x20a4 <realloc+0x17a>
    1f92:	5b 01       	movw	r10, r22
    1f94:	a0 1a       	sub	r10, r16
    1f96:	b1 0a       	sbc	r11, r17
    1f98:	4c 01       	movw	r8, r24
    1f9a:	80 0e       	add	r8, r16
    1f9c:	91 1e       	adc	r9, r17
    1f9e:	a0 91 87 01 	lds	r26, 0x0187	; 0x800187 <__flp>
    1fa2:	b0 91 88 01 	lds	r27, 0x0188	; 0x800188 <__flp+0x1>
    1fa6:	61 2c       	mov	r6, r1
    1fa8:	71 2c       	mov	r7, r1
    1faa:	e1 2c       	mov	r14, r1
    1fac:	f1 2c       	mov	r15, r1
    1fae:	10 97       	sbiw	r26, 0x00	; 0
    1fb0:	09 f4       	brne	.+2      	; 0x1fb4 <realloc+0x8a>
    1fb2:	46 c0       	rjmp	.+140    	; 0x2040 <realloc+0x116>
    1fb4:	8d 91       	ld	r24, X+
    1fb6:	9c 91       	ld	r25, X
    1fb8:	11 97       	sbiw	r26, 0x01	; 1
    1fba:	a8 15       	cp	r26, r8
    1fbc:	b9 05       	cpc	r27, r9
    1fbe:	b1 f5       	brne	.+108    	; 0x202c <realloc+0x102>
    1fc0:	6c 01       	movw	r12, r24
    1fc2:	42 e0       	ldi	r20, 0x02	; 2
    1fc4:	c4 0e       	add	r12, r20
    1fc6:	d1 1c       	adc	r13, r1
    1fc8:	ca 14       	cp	r12, r10
    1fca:	db 04       	cpc	r13, r11
    1fcc:	78 f1       	brcs	.+94     	; 0x202c <realloc+0x102>
    1fce:	4c 01       	movw	r8, r24
    1fd0:	8a 18       	sub	r8, r10
    1fd2:	9b 08       	sbc	r9, r11
    1fd4:	64 01       	movw	r12, r8
    1fd6:	42 e0       	ldi	r20, 0x02	; 2
    1fd8:	c4 0e       	add	r12, r20
    1fda:	d1 1c       	adc	r13, r1
    1fdc:	12 96       	adiw	r26, 0x02	; 2
    1fde:	bc 90       	ld	r11, X
    1fe0:	12 97       	sbiw	r26, 0x02	; 2
    1fe2:	13 96       	adiw	r26, 0x03	; 3
    1fe4:	ac 91       	ld	r26, X
    1fe6:	b5 e0       	ldi	r27, 0x05	; 5
    1fe8:	cb 16       	cp	r12, r27
    1fea:	d1 04       	cpc	r13, r1
    1fec:	40 f0       	brcs	.+16     	; 0x1ffe <realloc+0xd4>
    1fee:	b2 82       	std	Z+2, r11	; 0x02
    1ff0:	a3 83       	std	Z+3, r26	; 0x03
    1ff2:	91 82       	std	Z+1, r9	; 0x01
    1ff4:	80 82       	st	Z, r8
    1ff6:	d9 01       	movw	r26, r18
    1ff8:	6d 93       	st	X+, r22
    1ffa:	7c 93       	st	X, r23
    1ffc:	09 c0       	rjmp	.+18     	; 0x2010 <realloc+0xe6>
    1ffe:	0e 5f       	subi	r16, 0xFE	; 254
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	80 0f       	add	r24, r16
    2004:	91 1f       	adc	r25, r17
    2006:	f9 01       	movw	r30, r18
    2008:	91 83       	std	Z+1, r25	; 0x01
    200a:	80 83       	st	Z, r24
    200c:	eb 2d       	mov	r30, r11
    200e:	fa 2f       	mov	r31, r26
    2010:	e1 14       	cp	r14, r1
    2012:	f1 04       	cpc	r15, r1
    2014:	31 f0       	breq	.+12     	; 0x2022 <realloc+0xf8>
    2016:	d7 01       	movw	r26, r14
    2018:	13 96       	adiw	r26, 0x03	; 3
    201a:	fc 93       	st	X, r31
    201c:	ee 93       	st	-X, r30
    201e:	12 97       	sbiw	r26, 0x02	; 2
    2020:	41 c0       	rjmp	.+130    	; 0x20a4 <realloc+0x17a>
    2022:	f0 93 88 01 	sts	0x0188, r31	; 0x800188 <__flp+0x1>
    2026:	e0 93 87 01 	sts	0x0187, r30	; 0x800187 <__flp>
    202a:	3c c0       	rjmp	.+120    	; 0x20a4 <realloc+0x17a>
    202c:	68 16       	cp	r6, r24
    202e:	79 06       	cpc	r7, r25
    2030:	08 f4       	brcc	.+2      	; 0x2034 <realloc+0x10a>
    2032:	3c 01       	movw	r6, r24
    2034:	7d 01       	movw	r14, r26
    2036:	12 96       	adiw	r26, 0x02	; 2
    2038:	0d 90       	ld	r0, X+
    203a:	bc 91       	ld	r27, X
    203c:	a0 2d       	mov	r26, r0
    203e:	b7 cf       	rjmp	.-146    	; 0x1fae <realloc+0x84>
    2040:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <__brkval>
    2044:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <__brkval+0x1>
    2048:	88 16       	cp	r8, r24
    204a:	99 06       	cpc	r9, r25
    204c:	e1 f4       	brne	.+56     	; 0x2086 <realloc+0x15c>
    204e:	66 16       	cp	r6, r22
    2050:	77 06       	cpc	r7, r23
    2052:	c8 f4       	brcc	.+50     	; 0x2086 <realloc+0x15c>
    2054:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2058:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    205c:	00 97       	sbiw	r24, 0x00	; 0
    205e:	41 f4       	brne	.+16     	; 0x2070 <realloc+0x146>
    2060:	8d b7       	in	r24, 0x3d	; 61
    2062:	9e b7       	in	r25, 0x3e	; 62
    2064:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2068:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    206c:	84 1b       	sub	r24, r20
    206e:	95 0b       	sbc	r25, r21
    2070:	e8 17       	cp	r30, r24
    2072:	f9 07       	cpc	r31, r25
    2074:	c8 f4       	brcc	.+50     	; 0x20a8 <realloc+0x17e>
    2076:	f0 93 86 01 	sts	0x0186, r31	; 0x800186 <__brkval+0x1>
    207a:	e0 93 85 01 	sts	0x0185, r30	; 0x800185 <__brkval>
    207e:	f9 01       	movw	r30, r18
    2080:	71 83       	std	Z+1, r23	; 0x01
    2082:	60 83       	st	Z, r22
    2084:	0f c0       	rjmp	.+30     	; 0x20a4 <realloc+0x17a>
    2086:	cb 01       	movw	r24, r22
    2088:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <malloc>
    208c:	7c 01       	movw	r14, r24
    208e:	00 97       	sbiw	r24, 0x00	; 0
    2090:	59 f0       	breq	.+22     	; 0x20a8 <realloc+0x17e>
    2092:	a8 01       	movw	r20, r16
    2094:	be 01       	movw	r22, r28
    2096:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <memcpy>
    209a:	ce 01       	movw	r24, r28
    209c:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <free>
    20a0:	c7 01       	movw	r24, r14
    20a2:	04 c0       	rjmp	.+8      	; 0x20ac <realloc+0x182>
    20a4:	ce 01       	movw	r24, r28
    20a6:	02 c0       	rjmp	.+4      	; 0x20ac <realloc+0x182>
    20a8:	80 e0       	ldi	r24, 0x00	; 0
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	cd b7       	in	r28, 0x3d	; 61
    20ae:	de b7       	in	r29, 0x3e	; 62
    20b0:	ee e0       	ldi	r30, 0x0E	; 14
    20b2:	0c 94 67 13 	jmp	0x26ce	; 0x26ce <__epilogue_restores__+0x8>

000020b6 <memcpy>:
    20b6:	fb 01       	movw	r30, r22
    20b8:	dc 01       	movw	r26, r24
    20ba:	02 c0       	rjmp	.+4      	; 0x20c0 <memcpy+0xa>
    20bc:	01 90       	ld	r0, Z+
    20be:	0d 92       	st	X+, r0
    20c0:	41 50       	subi	r20, 0x01	; 1
    20c2:	50 40       	sbci	r21, 0x00	; 0
    20c4:	d8 f7       	brcc	.-10     	; 0x20bc <memcpy+0x6>
    20c6:	08 95       	ret

000020c8 <snprintf>:
    20c8:	ae e0       	ldi	r26, 0x0E	; 14
    20ca:	b0 e0       	ldi	r27, 0x00	; 0
    20cc:	ea e6       	ldi	r30, 0x6A	; 106
    20ce:	f0 e1       	ldi	r31, 0x10	; 16
    20d0:	0c 94 55 13 	jmp	0x26aa	; 0x26aa <__prologue_saves__+0x1c>
    20d4:	0d 89       	ldd	r16, Y+21	; 0x15
    20d6:	1e 89       	ldd	r17, Y+22	; 0x16
    20d8:	8f 89       	ldd	r24, Y+23	; 0x17
    20da:	98 8d       	ldd	r25, Y+24	; 0x18
    20dc:	26 e0       	ldi	r18, 0x06	; 6
    20de:	2c 83       	std	Y+4, r18	; 0x04
    20e0:	1a 83       	std	Y+2, r17	; 0x02
    20e2:	09 83       	std	Y+1, r16	; 0x01
    20e4:	97 ff       	sbrs	r25, 7
    20e6:	02 c0       	rjmp	.+4      	; 0x20ec <snprintf+0x24>
    20e8:	80 e0       	ldi	r24, 0x00	; 0
    20ea:	90 e8       	ldi	r25, 0x80	; 128
    20ec:	01 97       	sbiw	r24, 0x01	; 1
    20ee:	9e 83       	std	Y+6, r25	; 0x06
    20f0:	8d 83       	std	Y+5, r24	; 0x05
    20f2:	ae 01       	movw	r20, r28
    20f4:	45 5e       	subi	r20, 0xE5	; 229
    20f6:	5f 4f       	sbci	r21, 0xFF	; 255
    20f8:	69 8d       	ldd	r22, Y+25	; 0x19
    20fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20fc:	ce 01       	movw	r24, r28
    20fe:	01 96       	adiw	r24, 0x01	; 1
    2100:	0e 94 b6 10 	call	0x216c	; 0x216c <vfprintf>
    2104:	4d 81       	ldd	r20, Y+5	; 0x05
    2106:	5e 81       	ldd	r21, Y+6	; 0x06
    2108:	57 fd       	sbrc	r21, 7
    210a:	0a c0       	rjmp	.+20     	; 0x2120 <snprintf+0x58>
    210c:	2f 81       	ldd	r18, Y+7	; 0x07
    210e:	38 85       	ldd	r19, Y+8	; 0x08
    2110:	42 17       	cp	r20, r18
    2112:	53 07       	cpc	r21, r19
    2114:	0c f4       	brge	.+2      	; 0x2118 <snprintf+0x50>
    2116:	9a 01       	movw	r18, r20
    2118:	f8 01       	movw	r30, r16
    211a:	e2 0f       	add	r30, r18
    211c:	f3 1f       	adc	r31, r19
    211e:	10 82       	st	Z, r1
    2120:	2e 96       	adiw	r28, 0x0e	; 14
    2122:	e4 e0       	ldi	r30, 0x04	; 4
    2124:	0c 94 71 13 	jmp	0x26e2	; 0x26e2 <__epilogue_restores__+0x1c>

00002128 <sprintf>:
    2128:	ae e0       	ldi	r26, 0x0E	; 14
    212a:	b0 e0       	ldi	r27, 0x00	; 0
    212c:	ea e9       	ldi	r30, 0x9A	; 154
    212e:	f0 e1       	ldi	r31, 0x10	; 16
    2130:	0c 94 55 13 	jmp	0x26aa	; 0x26aa <__prologue_saves__+0x1c>
    2134:	0d 89       	ldd	r16, Y+21	; 0x15
    2136:	1e 89       	ldd	r17, Y+22	; 0x16
    2138:	86 e0       	ldi	r24, 0x06	; 6
    213a:	8c 83       	std	Y+4, r24	; 0x04
    213c:	1a 83       	std	Y+2, r17	; 0x02
    213e:	09 83       	std	Y+1, r16	; 0x01
    2140:	8f ef       	ldi	r24, 0xFF	; 255
    2142:	9f e7       	ldi	r25, 0x7F	; 127
    2144:	9e 83       	std	Y+6, r25	; 0x06
    2146:	8d 83       	std	Y+5, r24	; 0x05
    2148:	ae 01       	movw	r20, r28
    214a:	47 5e       	subi	r20, 0xE7	; 231
    214c:	5f 4f       	sbci	r21, 0xFF	; 255
    214e:	6f 89       	ldd	r22, Y+23	; 0x17
    2150:	78 8d       	ldd	r23, Y+24	; 0x18
    2152:	ce 01       	movw	r24, r28
    2154:	01 96       	adiw	r24, 0x01	; 1
    2156:	0e 94 b6 10 	call	0x216c	; 0x216c <vfprintf>
    215a:	ef 81       	ldd	r30, Y+7	; 0x07
    215c:	f8 85       	ldd	r31, Y+8	; 0x08
    215e:	e0 0f       	add	r30, r16
    2160:	f1 1f       	adc	r31, r17
    2162:	10 82       	st	Z, r1
    2164:	2e 96       	adiw	r28, 0x0e	; 14
    2166:	e4 e0       	ldi	r30, 0x04	; 4
    2168:	0c 94 71 13 	jmp	0x26e2	; 0x26e2 <__epilogue_restores__+0x1c>

0000216c <vfprintf>:
    216c:	ab e0       	ldi	r26, 0x0B	; 11
    216e:	b0 e0       	ldi	r27, 0x00	; 0
    2170:	ec eb       	ldi	r30, 0xBC	; 188
    2172:	f0 e1       	ldi	r31, 0x10	; 16
    2174:	0c 94 47 13 	jmp	0x268e	; 0x268e <__prologue_saves__>
    2178:	6c 01       	movw	r12, r24
    217a:	7b 01       	movw	r14, r22
    217c:	8a 01       	movw	r16, r20
    217e:	fc 01       	movw	r30, r24
    2180:	17 82       	std	Z+7, r1	; 0x07
    2182:	16 82       	std	Z+6, r1	; 0x06
    2184:	83 81       	ldd	r24, Z+3	; 0x03
    2186:	81 ff       	sbrs	r24, 1
    2188:	cc c1       	rjmp	.+920    	; 0x2522 <vfprintf+0x3b6>
    218a:	ce 01       	movw	r24, r28
    218c:	01 96       	adiw	r24, 0x01	; 1
    218e:	3c 01       	movw	r6, r24
    2190:	f6 01       	movw	r30, r12
    2192:	93 81       	ldd	r25, Z+3	; 0x03
    2194:	f7 01       	movw	r30, r14
    2196:	93 fd       	sbrc	r25, 3
    2198:	85 91       	lpm	r24, Z+
    219a:	93 ff       	sbrs	r25, 3
    219c:	81 91       	ld	r24, Z+
    219e:	7f 01       	movw	r14, r30
    21a0:	88 23       	and	r24, r24
    21a2:	09 f4       	brne	.+2      	; 0x21a6 <vfprintf+0x3a>
    21a4:	ba c1       	rjmp	.+884    	; 0x251a <vfprintf+0x3ae>
    21a6:	85 32       	cpi	r24, 0x25	; 37
    21a8:	39 f4       	brne	.+14     	; 0x21b8 <vfprintf+0x4c>
    21aa:	93 fd       	sbrc	r25, 3
    21ac:	85 91       	lpm	r24, Z+
    21ae:	93 ff       	sbrs	r25, 3
    21b0:	81 91       	ld	r24, Z+
    21b2:	7f 01       	movw	r14, r30
    21b4:	85 32       	cpi	r24, 0x25	; 37
    21b6:	29 f4       	brne	.+10     	; 0x21c2 <vfprintf+0x56>
    21b8:	b6 01       	movw	r22, r12
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    21c0:	e7 cf       	rjmp	.-50     	; 0x2190 <vfprintf+0x24>
    21c2:	91 2c       	mov	r9, r1
    21c4:	21 2c       	mov	r2, r1
    21c6:	31 2c       	mov	r3, r1
    21c8:	ff e1       	ldi	r31, 0x1F	; 31
    21ca:	f3 15       	cp	r31, r3
    21cc:	d8 f0       	brcs	.+54     	; 0x2204 <vfprintf+0x98>
    21ce:	8b 32       	cpi	r24, 0x2B	; 43
    21d0:	79 f0       	breq	.+30     	; 0x21f0 <vfprintf+0x84>
    21d2:	38 f4       	brcc	.+14     	; 0x21e2 <vfprintf+0x76>
    21d4:	80 32       	cpi	r24, 0x20	; 32
    21d6:	79 f0       	breq	.+30     	; 0x21f6 <vfprintf+0x8a>
    21d8:	83 32       	cpi	r24, 0x23	; 35
    21da:	a1 f4       	brne	.+40     	; 0x2204 <vfprintf+0x98>
    21dc:	23 2d       	mov	r18, r3
    21de:	20 61       	ori	r18, 0x10	; 16
    21e0:	1d c0       	rjmp	.+58     	; 0x221c <vfprintf+0xb0>
    21e2:	8d 32       	cpi	r24, 0x2D	; 45
    21e4:	61 f0       	breq	.+24     	; 0x21fe <vfprintf+0x92>
    21e6:	80 33       	cpi	r24, 0x30	; 48
    21e8:	69 f4       	brne	.+26     	; 0x2204 <vfprintf+0x98>
    21ea:	23 2d       	mov	r18, r3
    21ec:	21 60       	ori	r18, 0x01	; 1
    21ee:	16 c0       	rjmp	.+44     	; 0x221c <vfprintf+0xb0>
    21f0:	83 2d       	mov	r24, r3
    21f2:	82 60       	ori	r24, 0x02	; 2
    21f4:	38 2e       	mov	r3, r24
    21f6:	e3 2d       	mov	r30, r3
    21f8:	e4 60       	ori	r30, 0x04	; 4
    21fa:	3e 2e       	mov	r3, r30
    21fc:	2a c0       	rjmp	.+84     	; 0x2252 <vfprintf+0xe6>
    21fe:	f3 2d       	mov	r31, r3
    2200:	f8 60       	ori	r31, 0x08	; 8
    2202:	1d c0       	rjmp	.+58     	; 0x223e <vfprintf+0xd2>
    2204:	37 fc       	sbrc	r3, 7
    2206:	2d c0       	rjmp	.+90     	; 0x2262 <vfprintf+0xf6>
    2208:	20 ed       	ldi	r18, 0xD0	; 208
    220a:	28 0f       	add	r18, r24
    220c:	2a 30       	cpi	r18, 0x0A	; 10
    220e:	40 f0       	brcs	.+16     	; 0x2220 <vfprintf+0xb4>
    2210:	8e 32       	cpi	r24, 0x2E	; 46
    2212:	b9 f4       	brne	.+46     	; 0x2242 <vfprintf+0xd6>
    2214:	36 fc       	sbrc	r3, 6
    2216:	81 c1       	rjmp	.+770    	; 0x251a <vfprintf+0x3ae>
    2218:	23 2d       	mov	r18, r3
    221a:	20 64       	ori	r18, 0x40	; 64
    221c:	32 2e       	mov	r3, r18
    221e:	19 c0       	rjmp	.+50     	; 0x2252 <vfprintf+0xe6>
    2220:	36 fe       	sbrs	r3, 6
    2222:	06 c0       	rjmp	.+12     	; 0x2230 <vfprintf+0xc4>
    2224:	8a e0       	ldi	r24, 0x0A	; 10
    2226:	98 9e       	mul	r9, r24
    2228:	20 0d       	add	r18, r0
    222a:	11 24       	eor	r1, r1
    222c:	92 2e       	mov	r9, r18
    222e:	11 c0       	rjmp	.+34     	; 0x2252 <vfprintf+0xe6>
    2230:	ea e0       	ldi	r30, 0x0A	; 10
    2232:	2e 9e       	mul	r2, r30
    2234:	20 0d       	add	r18, r0
    2236:	11 24       	eor	r1, r1
    2238:	22 2e       	mov	r2, r18
    223a:	f3 2d       	mov	r31, r3
    223c:	f0 62       	ori	r31, 0x20	; 32
    223e:	3f 2e       	mov	r3, r31
    2240:	08 c0       	rjmp	.+16     	; 0x2252 <vfprintf+0xe6>
    2242:	8c 36       	cpi	r24, 0x6C	; 108
    2244:	21 f4       	brne	.+8      	; 0x224e <vfprintf+0xe2>
    2246:	83 2d       	mov	r24, r3
    2248:	80 68       	ori	r24, 0x80	; 128
    224a:	38 2e       	mov	r3, r24
    224c:	02 c0       	rjmp	.+4      	; 0x2252 <vfprintf+0xe6>
    224e:	88 36       	cpi	r24, 0x68	; 104
    2250:	41 f4       	brne	.+16     	; 0x2262 <vfprintf+0xf6>
    2252:	f7 01       	movw	r30, r14
    2254:	93 fd       	sbrc	r25, 3
    2256:	85 91       	lpm	r24, Z+
    2258:	93 ff       	sbrs	r25, 3
    225a:	81 91       	ld	r24, Z+
    225c:	7f 01       	movw	r14, r30
    225e:	81 11       	cpse	r24, r1
    2260:	b3 cf       	rjmp	.-154    	; 0x21c8 <vfprintf+0x5c>
    2262:	98 2f       	mov	r25, r24
    2264:	9f 7d       	andi	r25, 0xDF	; 223
    2266:	95 54       	subi	r25, 0x45	; 69
    2268:	93 30       	cpi	r25, 0x03	; 3
    226a:	28 f4       	brcc	.+10     	; 0x2276 <vfprintf+0x10a>
    226c:	0c 5f       	subi	r16, 0xFC	; 252
    226e:	1f 4f       	sbci	r17, 0xFF	; 255
    2270:	9f e3       	ldi	r25, 0x3F	; 63
    2272:	99 83       	std	Y+1, r25	; 0x01
    2274:	0d c0       	rjmp	.+26     	; 0x2290 <vfprintf+0x124>
    2276:	83 36       	cpi	r24, 0x63	; 99
    2278:	31 f0       	breq	.+12     	; 0x2286 <vfprintf+0x11a>
    227a:	83 37       	cpi	r24, 0x73	; 115
    227c:	71 f0       	breq	.+28     	; 0x229a <vfprintf+0x12e>
    227e:	83 35       	cpi	r24, 0x53	; 83
    2280:	09 f0       	breq	.+2      	; 0x2284 <vfprintf+0x118>
    2282:	59 c0       	rjmp	.+178    	; 0x2336 <vfprintf+0x1ca>
    2284:	21 c0       	rjmp	.+66     	; 0x22c8 <vfprintf+0x15c>
    2286:	f8 01       	movw	r30, r16
    2288:	80 81       	ld	r24, Z
    228a:	89 83       	std	Y+1, r24	; 0x01
    228c:	0e 5f       	subi	r16, 0xFE	; 254
    228e:	1f 4f       	sbci	r17, 0xFF	; 255
    2290:	88 24       	eor	r8, r8
    2292:	83 94       	inc	r8
    2294:	91 2c       	mov	r9, r1
    2296:	53 01       	movw	r10, r6
    2298:	13 c0       	rjmp	.+38     	; 0x22c0 <vfprintf+0x154>
    229a:	28 01       	movw	r4, r16
    229c:	f2 e0       	ldi	r31, 0x02	; 2
    229e:	4f 0e       	add	r4, r31
    22a0:	51 1c       	adc	r5, r1
    22a2:	f8 01       	movw	r30, r16
    22a4:	a0 80       	ld	r10, Z
    22a6:	b1 80       	ldd	r11, Z+1	; 0x01
    22a8:	36 fe       	sbrs	r3, 6
    22aa:	03 c0       	rjmp	.+6      	; 0x22b2 <vfprintf+0x146>
    22ac:	69 2d       	mov	r22, r9
    22ae:	70 e0       	ldi	r23, 0x00	; 0
    22b0:	02 c0       	rjmp	.+4      	; 0x22b6 <vfprintf+0x14a>
    22b2:	6f ef       	ldi	r22, 0xFF	; 255
    22b4:	7f ef       	ldi	r23, 0xFF	; 255
    22b6:	c5 01       	movw	r24, r10
    22b8:	0e 94 a2 12 	call	0x2544	; 0x2544 <strnlen>
    22bc:	4c 01       	movw	r8, r24
    22be:	82 01       	movw	r16, r4
    22c0:	f3 2d       	mov	r31, r3
    22c2:	ff 77       	andi	r31, 0x7F	; 127
    22c4:	3f 2e       	mov	r3, r31
    22c6:	16 c0       	rjmp	.+44     	; 0x22f4 <vfprintf+0x188>
    22c8:	28 01       	movw	r4, r16
    22ca:	22 e0       	ldi	r18, 0x02	; 2
    22cc:	42 0e       	add	r4, r18
    22ce:	51 1c       	adc	r5, r1
    22d0:	f8 01       	movw	r30, r16
    22d2:	a0 80       	ld	r10, Z
    22d4:	b1 80       	ldd	r11, Z+1	; 0x01
    22d6:	36 fe       	sbrs	r3, 6
    22d8:	03 c0       	rjmp	.+6      	; 0x22e0 <vfprintf+0x174>
    22da:	69 2d       	mov	r22, r9
    22dc:	70 e0       	ldi	r23, 0x00	; 0
    22de:	02 c0       	rjmp	.+4      	; 0x22e4 <vfprintf+0x178>
    22e0:	6f ef       	ldi	r22, 0xFF	; 255
    22e2:	7f ef       	ldi	r23, 0xFF	; 255
    22e4:	c5 01       	movw	r24, r10
    22e6:	0e 94 97 12 	call	0x252e	; 0x252e <strnlen_P>
    22ea:	4c 01       	movw	r8, r24
    22ec:	f3 2d       	mov	r31, r3
    22ee:	f0 68       	ori	r31, 0x80	; 128
    22f0:	3f 2e       	mov	r3, r31
    22f2:	82 01       	movw	r16, r4
    22f4:	33 fc       	sbrc	r3, 3
    22f6:	1b c0       	rjmp	.+54     	; 0x232e <vfprintf+0x1c2>
    22f8:	82 2d       	mov	r24, r2
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	88 16       	cp	r8, r24
    22fe:	99 06       	cpc	r9, r25
    2300:	b0 f4       	brcc	.+44     	; 0x232e <vfprintf+0x1c2>
    2302:	b6 01       	movw	r22, r12
    2304:	80 e2       	ldi	r24, 0x20	; 32
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    230c:	2a 94       	dec	r2
    230e:	f4 cf       	rjmp	.-24     	; 0x22f8 <vfprintf+0x18c>
    2310:	f5 01       	movw	r30, r10
    2312:	37 fc       	sbrc	r3, 7
    2314:	85 91       	lpm	r24, Z+
    2316:	37 fe       	sbrs	r3, 7
    2318:	81 91       	ld	r24, Z+
    231a:	5f 01       	movw	r10, r30
    231c:	b6 01       	movw	r22, r12
    231e:	90 e0       	ldi	r25, 0x00	; 0
    2320:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    2324:	21 10       	cpse	r2, r1
    2326:	2a 94       	dec	r2
    2328:	21 e0       	ldi	r18, 0x01	; 1
    232a:	82 1a       	sub	r8, r18
    232c:	91 08       	sbc	r9, r1
    232e:	81 14       	cp	r8, r1
    2330:	91 04       	cpc	r9, r1
    2332:	71 f7       	brne	.-36     	; 0x2310 <vfprintf+0x1a4>
    2334:	e8 c0       	rjmp	.+464    	; 0x2506 <vfprintf+0x39a>
    2336:	84 36       	cpi	r24, 0x64	; 100
    2338:	11 f0       	breq	.+4      	; 0x233e <vfprintf+0x1d2>
    233a:	89 36       	cpi	r24, 0x69	; 105
    233c:	41 f5       	brne	.+80     	; 0x238e <vfprintf+0x222>
    233e:	f8 01       	movw	r30, r16
    2340:	37 fe       	sbrs	r3, 7
    2342:	07 c0       	rjmp	.+14     	; 0x2352 <vfprintf+0x1e6>
    2344:	60 81       	ld	r22, Z
    2346:	71 81       	ldd	r23, Z+1	; 0x01
    2348:	82 81       	ldd	r24, Z+2	; 0x02
    234a:	93 81       	ldd	r25, Z+3	; 0x03
    234c:	0c 5f       	subi	r16, 0xFC	; 252
    234e:	1f 4f       	sbci	r17, 0xFF	; 255
    2350:	08 c0       	rjmp	.+16     	; 0x2362 <vfprintf+0x1f6>
    2352:	60 81       	ld	r22, Z
    2354:	71 81       	ldd	r23, Z+1	; 0x01
    2356:	07 2e       	mov	r0, r23
    2358:	00 0c       	add	r0, r0
    235a:	88 0b       	sbc	r24, r24
    235c:	99 0b       	sbc	r25, r25
    235e:	0e 5f       	subi	r16, 0xFE	; 254
    2360:	1f 4f       	sbci	r17, 0xFF	; 255
    2362:	f3 2d       	mov	r31, r3
    2364:	ff 76       	andi	r31, 0x6F	; 111
    2366:	3f 2e       	mov	r3, r31
    2368:	97 ff       	sbrs	r25, 7
    236a:	09 c0       	rjmp	.+18     	; 0x237e <vfprintf+0x212>
    236c:	90 95       	com	r25
    236e:	80 95       	com	r24
    2370:	70 95       	com	r23
    2372:	61 95       	neg	r22
    2374:	7f 4f       	sbci	r23, 0xFF	; 255
    2376:	8f 4f       	sbci	r24, 0xFF	; 255
    2378:	9f 4f       	sbci	r25, 0xFF	; 255
    237a:	f0 68       	ori	r31, 0x80	; 128
    237c:	3f 2e       	mov	r3, r31
    237e:	2a e0       	ldi	r18, 0x0A	; 10
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	a3 01       	movw	r20, r6
    2384:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__ultoa_invert>
    2388:	88 2e       	mov	r8, r24
    238a:	86 18       	sub	r8, r6
    238c:	45 c0       	rjmp	.+138    	; 0x2418 <vfprintf+0x2ac>
    238e:	85 37       	cpi	r24, 0x75	; 117
    2390:	31 f4       	brne	.+12     	; 0x239e <vfprintf+0x232>
    2392:	23 2d       	mov	r18, r3
    2394:	2f 7e       	andi	r18, 0xEF	; 239
    2396:	b2 2e       	mov	r11, r18
    2398:	2a e0       	ldi	r18, 0x0A	; 10
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	25 c0       	rjmp	.+74     	; 0x23e8 <vfprintf+0x27c>
    239e:	93 2d       	mov	r25, r3
    23a0:	99 7f       	andi	r25, 0xF9	; 249
    23a2:	b9 2e       	mov	r11, r25
    23a4:	8f 36       	cpi	r24, 0x6F	; 111
    23a6:	c1 f0       	breq	.+48     	; 0x23d8 <vfprintf+0x26c>
    23a8:	18 f4       	brcc	.+6      	; 0x23b0 <vfprintf+0x244>
    23aa:	88 35       	cpi	r24, 0x58	; 88
    23ac:	79 f0       	breq	.+30     	; 0x23cc <vfprintf+0x260>
    23ae:	b5 c0       	rjmp	.+362    	; 0x251a <vfprintf+0x3ae>
    23b0:	80 37       	cpi	r24, 0x70	; 112
    23b2:	19 f0       	breq	.+6      	; 0x23ba <vfprintf+0x24e>
    23b4:	88 37       	cpi	r24, 0x78	; 120
    23b6:	21 f0       	breq	.+8      	; 0x23c0 <vfprintf+0x254>
    23b8:	b0 c0       	rjmp	.+352    	; 0x251a <vfprintf+0x3ae>
    23ba:	e9 2f       	mov	r30, r25
    23bc:	e0 61       	ori	r30, 0x10	; 16
    23be:	be 2e       	mov	r11, r30
    23c0:	b4 fe       	sbrs	r11, 4
    23c2:	0d c0       	rjmp	.+26     	; 0x23de <vfprintf+0x272>
    23c4:	fb 2d       	mov	r31, r11
    23c6:	f4 60       	ori	r31, 0x04	; 4
    23c8:	bf 2e       	mov	r11, r31
    23ca:	09 c0       	rjmp	.+18     	; 0x23de <vfprintf+0x272>
    23cc:	34 fe       	sbrs	r3, 4
    23ce:	0a c0       	rjmp	.+20     	; 0x23e4 <vfprintf+0x278>
    23d0:	29 2f       	mov	r18, r25
    23d2:	26 60       	ori	r18, 0x06	; 6
    23d4:	b2 2e       	mov	r11, r18
    23d6:	06 c0       	rjmp	.+12     	; 0x23e4 <vfprintf+0x278>
    23d8:	28 e0       	ldi	r18, 0x08	; 8
    23da:	30 e0       	ldi	r19, 0x00	; 0
    23dc:	05 c0       	rjmp	.+10     	; 0x23e8 <vfprintf+0x27c>
    23de:	20 e1       	ldi	r18, 0x10	; 16
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	02 c0       	rjmp	.+4      	; 0x23e8 <vfprintf+0x27c>
    23e4:	20 e1       	ldi	r18, 0x10	; 16
    23e6:	32 e0       	ldi	r19, 0x02	; 2
    23e8:	f8 01       	movw	r30, r16
    23ea:	b7 fe       	sbrs	r11, 7
    23ec:	07 c0       	rjmp	.+14     	; 0x23fc <vfprintf+0x290>
    23ee:	60 81       	ld	r22, Z
    23f0:	71 81       	ldd	r23, Z+1	; 0x01
    23f2:	82 81       	ldd	r24, Z+2	; 0x02
    23f4:	93 81       	ldd	r25, Z+3	; 0x03
    23f6:	0c 5f       	subi	r16, 0xFC	; 252
    23f8:	1f 4f       	sbci	r17, 0xFF	; 255
    23fa:	06 c0       	rjmp	.+12     	; 0x2408 <vfprintf+0x29c>
    23fc:	60 81       	ld	r22, Z
    23fe:	71 81       	ldd	r23, Z+1	; 0x01
    2400:	80 e0       	ldi	r24, 0x00	; 0
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	0e 5f       	subi	r16, 0xFE	; 254
    2406:	1f 4f       	sbci	r17, 0xFF	; 255
    2408:	a3 01       	movw	r20, r6
    240a:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <__ultoa_invert>
    240e:	88 2e       	mov	r8, r24
    2410:	86 18       	sub	r8, r6
    2412:	fb 2d       	mov	r31, r11
    2414:	ff 77       	andi	r31, 0x7F	; 127
    2416:	3f 2e       	mov	r3, r31
    2418:	36 fe       	sbrs	r3, 6
    241a:	0d c0       	rjmp	.+26     	; 0x2436 <vfprintf+0x2ca>
    241c:	23 2d       	mov	r18, r3
    241e:	2e 7f       	andi	r18, 0xFE	; 254
    2420:	a2 2e       	mov	r10, r18
    2422:	89 14       	cp	r8, r9
    2424:	58 f4       	brcc	.+22     	; 0x243c <vfprintf+0x2d0>
    2426:	34 fe       	sbrs	r3, 4
    2428:	0b c0       	rjmp	.+22     	; 0x2440 <vfprintf+0x2d4>
    242a:	32 fc       	sbrc	r3, 2
    242c:	09 c0       	rjmp	.+18     	; 0x2440 <vfprintf+0x2d4>
    242e:	83 2d       	mov	r24, r3
    2430:	8e 7e       	andi	r24, 0xEE	; 238
    2432:	a8 2e       	mov	r10, r24
    2434:	05 c0       	rjmp	.+10     	; 0x2440 <vfprintf+0x2d4>
    2436:	b8 2c       	mov	r11, r8
    2438:	a3 2c       	mov	r10, r3
    243a:	03 c0       	rjmp	.+6      	; 0x2442 <vfprintf+0x2d6>
    243c:	b8 2c       	mov	r11, r8
    243e:	01 c0       	rjmp	.+2      	; 0x2442 <vfprintf+0x2d6>
    2440:	b9 2c       	mov	r11, r9
    2442:	a4 fe       	sbrs	r10, 4
    2444:	0f c0       	rjmp	.+30     	; 0x2464 <vfprintf+0x2f8>
    2446:	fe 01       	movw	r30, r28
    2448:	e8 0d       	add	r30, r8
    244a:	f1 1d       	adc	r31, r1
    244c:	80 81       	ld	r24, Z
    244e:	80 33       	cpi	r24, 0x30	; 48
    2450:	21 f4       	brne	.+8      	; 0x245a <vfprintf+0x2ee>
    2452:	9a 2d       	mov	r25, r10
    2454:	99 7e       	andi	r25, 0xE9	; 233
    2456:	a9 2e       	mov	r10, r25
    2458:	09 c0       	rjmp	.+18     	; 0x246c <vfprintf+0x300>
    245a:	a2 fe       	sbrs	r10, 2
    245c:	06 c0       	rjmp	.+12     	; 0x246a <vfprintf+0x2fe>
    245e:	b3 94       	inc	r11
    2460:	b3 94       	inc	r11
    2462:	04 c0       	rjmp	.+8      	; 0x246c <vfprintf+0x300>
    2464:	8a 2d       	mov	r24, r10
    2466:	86 78       	andi	r24, 0x86	; 134
    2468:	09 f0       	breq	.+2      	; 0x246c <vfprintf+0x300>
    246a:	b3 94       	inc	r11
    246c:	a3 fc       	sbrc	r10, 3
    246e:	11 c0       	rjmp	.+34     	; 0x2492 <vfprintf+0x326>
    2470:	a0 fe       	sbrs	r10, 0
    2472:	06 c0       	rjmp	.+12     	; 0x2480 <vfprintf+0x314>
    2474:	b2 14       	cp	r11, r2
    2476:	88 f4       	brcc	.+34     	; 0x249a <vfprintf+0x32e>
    2478:	28 0c       	add	r2, r8
    247a:	92 2c       	mov	r9, r2
    247c:	9b 18       	sub	r9, r11
    247e:	0e c0       	rjmp	.+28     	; 0x249c <vfprintf+0x330>
    2480:	b2 14       	cp	r11, r2
    2482:	60 f4       	brcc	.+24     	; 0x249c <vfprintf+0x330>
    2484:	b6 01       	movw	r22, r12
    2486:	80 e2       	ldi	r24, 0x20	; 32
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    248e:	b3 94       	inc	r11
    2490:	f7 cf       	rjmp	.-18     	; 0x2480 <vfprintf+0x314>
    2492:	b2 14       	cp	r11, r2
    2494:	18 f4       	brcc	.+6      	; 0x249c <vfprintf+0x330>
    2496:	2b 18       	sub	r2, r11
    2498:	02 c0       	rjmp	.+4      	; 0x249e <vfprintf+0x332>
    249a:	98 2c       	mov	r9, r8
    249c:	21 2c       	mov	r2, r1
    249e:	a4 fe       	sbrs	r10, 4
    24a0:	10 c0       	rjmp	.+32     	; 0x24c2 <vfprintf+0x356>
    24a2:	b6 01       	movw	r22, r12
    24a4:	80 e3       	ldi	r24, 0x30	; 48
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    24ac:	a2 fe       	sbrs	r10, 2
    24ae:	17 c0       	rjmp	.+46     	; 0x24de <vfprintf+0x372>
    24b0:	a1 fc       	sbrc	r10, 1
    24b2:	03 c0       	rjmp	.+6      	; 0x24ba <vfprintf+0x34e>
    24b4:	88 e7       	ldi	r24, 0x78	; 120
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	02 c0       	rjmp	.+4      	; 0x24be <vfprintf+0x352>
    24ba:	88 e5       	ldi	r24, 0x58	; 88
    24bc:	90 e0       	ldi	r25, 0x00	; 0
    24be:	b6 01       	movw	r22, r12
    24c0:	0c c0       	rjmp	.+24     	; 0x24da <vfprintf+0x36e>
    24c2:	8a 2d       	mov	r24, r10
    24c4:	86 78       	andi	r24, 0x86	; 134
    24c6:	59 f0       	breq	.+22     	; 0x24de <vfprintf+0x372>
    24c8:	a1 fe       	sbrs	r10, 1
    24ca:	02 c0       	rjmp	.+4      	; 0x24d0 <vfprintf+0x364>
    24cc:	8b e2       	ldi	r24, 0x2B	; 43
    24ce:	01 c0       	rjmp	.+2      	; 0x24d2 <vfprintf+0x366>
    24d0:	80 e2       	ldi	r24, 0x20	; 32
    24d2:	a7 fc       	sbrc	r10, 7
    24d4:	8d e2       	ldi	r24, 0x2D	; 45
    24d6:	b6 01       	movw	r22, r12
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    24de:	89 14       	cp	r8, r9
    24e0:	38 f4       	brcc	.+14     	; 0x24f0 <vfprintf+0x384>
    24e2:	b6 01       	movw	r22, r12
    24e4:	80 e3       	ldi	r24, 0x30	; 48
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    24ec:	9a 94       	dec	r9
    24ee:	f7 cf       	rjmp	.-18     	; 0x24de <vfprintf+0x372>
    24f0:	8a 94       	dec	r8
    24f2:	f3 01       	movw	r30, r6
    24f4:	e8 0d       	add	r30, r8
    24f6:	f1 1d       	adc	r31, r1
    24f8:	80 81       	ld	r24, Z
    24fa:	b6 01       	movw	r22, r12
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    2502:	81 10       	cpse	r8, r1
    2504:	f5 cf       	rjmp	.-22     	; 0x24f0 <vfprintf+0x384>
    2506:	22 20       	and	r2, r2
    2508:	09 f4       	brne	.+2      	; 0x250c <vfprintf+0x3a0>
    250a:	42 ce       	rjmp	.-892    	; 0x2190 <vfprintf+0x24>
    250c:	b6 01       	movw	r22, r12
    250e:	80 e2       	ldi	r24, 0x20	; 32
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	0e 94 ad 12 	call	0x255a	; 0x255a <fputc>
    2516:	2a 94       	dec	r2
    2518:	f6 cf       	rjmp	.-20     	; 0x2506 <vfprintf+0x39a>
    251a:	f6 01       	movw	r30, r12
    251c:	86 81       	ldd	r24, Z+6	; 0x06
    251e:	97 81       	ldd	r25, Z+7	; 0x07
    2520:	02 c0       	rjmp	.+4      	; 0x2526 <vfprintf+0x3ba>
    2522:	8f ef       	ldi	r24, 0xFF	; 255
    2524:	9f ef       	ldi	r25, 0xFF	; 255
    2526:	2b 96       	adiw	r28, 0x0b	; 11
    2528:	e2 e1       	ldi	r30, 0x12	; 18
    252a:	0c 94 63 13 	jmp	0x26c6	; 0x26c6 <__epilogue_restores__>

0000252e <strnlen_P>:
    252e:	fc 01       	movw	r30, r24
    2530:	05 90       	lpm	r0, Z+
    2532:	61 50       	subi	r22, 0x01	; 1
    2534:	70 40       	sbci	r23, 0x00	; 0
    2536:	01 10       	cpse	r0, r1
    2538:	d8 f7       	brcc	.-10     	; 0x2530 <strnlen_P+0x2>
    253a:	80 95       	com	r24
    253c:	90 95       	com	r25
    253e:	8e 0f       	add	r24, r30
    2540:	9f 1f       	adc	r25, r31
    2542:	08 95       	ret

00002544 <strnlen>:
    2544:	fc 01       	movw	r30, r24
    2546:	61 50       	subi	r22, 0x01	; 1
    2548:	70 40       	sbci	r23, 0x00	; 0
    254a:	01 90       	ld	r0, Z+
    254c:	01 10       	cpse	r0, r1
    254e:	d8 f7       	brcc	.-10     	; 0x2546 <strnlen+0x2>
    2550:	80 95       	com	r24
    2552:	90 95       	com	r25
    2554:	8e 0f       	add	r24, r30
    2556:	9f 1f       	adc	r25, r31
    2558:	08 95       	ret

0000255a <fputc>:
    255a:	0f 93       	push	r16
    255c:	1f 93       	push	r17
    255e:	cf 93       	push	r28
    2560:	df 93       	push	r29
    2562:	fb 01       	movw	r30, r22
    2564:	23 81       	ldd	r18, Z+3	; 0x03
    2566:	21 fd       	sbrc	r18, 1
    2568:	03 c0       	rjmp	.+6      	; 0x2570 <fputc+0x16>
    256a:	8f ef       	ldi	r24, 0xFF	; 255
    256c:	9f ef       	ldi	r25, 0xFF	; 255
    256e:	2c c0       	rjmp	.+88     	; 0x25c8 <fputc+0x6e>
    2570:	22 ff       	sbrs	r18, 2
    2572:	16 c0       	rjmp	.+44     	; 0x25a0 <fputc+0x46>
    2574:	46 81       	ldd	r20, Z+6	; 0x06
    2576:	57 81       	ldd	r21, Z+7	; 0x07
    2578:	24 81       	ldd	r18, Z+4	; 0x04
    257a:	35 81       	ldd	r19, Z+5	; 0x05
    257c:	42 17       	cp	r20, r18
    257e:	53 07       	cpc	r21, r19
    2580:	44 f4       	brge	.+16     	; 0x2592 <fputc+0x38>
    2582:	a0 81       	ld	r26, Z
    2584:	b1 81       	ldd	r27, Z+1	; 0x01
    2586:	9d 01       	movw	r18, r26
    2588:	2f 5f       	subi	r18, 0xFF	; 255
    258a:	3f 4f       	sbci	r19, 0xFF	; 255
    258c:	31 83       	std	Z+1, r19	; 0x01
    258e:	20 83       	st	Z, r18
    2590:	8c 93       	st	X, r24
    2592:	26 81       	ldd	r18, Z+6	; 0x06
    2594:	37 81       	ldd	r19, Z+7	; 0x07
    2596:	2f 5f       	subi	r18, 0xFF	; 255
    2598:	3f 4f       	sbci	r19, 0xFF	; 255
    259a:	37 83       	std	Z+7, r19	; 0x07
    259c:	26 83       	std	Z+6, r18	; 0x06
    259e:	14 c0       	rjmp	.+40     	; 0x25c8 <fputc+0x6e>
    25a0:	8b 01       	movw	r16, r22
    25a2:	ec 01       	movw	r28, r24
    25a4:	fb 01       	movw	r30, r22
    25a6:	00 84       	ldd	r0, Z+8	; 0x08
    25a8:	f1 85       	ldd	r31, Z+9	; 0x09
    25aa:	e0 2d       	mov	r30, r0
    25ac:	09 95       	icall
    25ae:	89 2b       	or	r24, r25
    25b0:	e1 f6       	brne	.-72     	; 0x256a <fputc+0x10>
    25b2:	d8 01       	movw	r26, r16
    25b4:	16 96       	adiw	r26, 0x06	; 6
    25b6:	8d 91       	ld	r24, X+
    25b8:	9c 91       	ld	r25, X
    25ba:	17 97       	sbiw	r26, 0x07	; 7
    25bc:	01 96       	adiw	r24, 0x01	; 1
    25be:	17 96       	adiw	r26, 0x07	; 7
    25c0:	9c 93       	st	X, r25
    25c2:	8e 93       	st	-X, r24
    25c4:	16 97       	sbiw	r26, 0x06	; 6
    25c6:	ce 01       	movw	r24, r28
    25c8:	df 91       	pop	r29
    25ca:	cf 91       	pop	r28
    25cc:	1f 91       	pop	r17
    25ce:	0f 91       	pop	r16
    25d0:	08 95       	ret

000025d2 <__ultoa_invert>:
    25d2:	fa 01       	movw	r30, r20
    25d4:	aa 27       	eor	r26, r26
    25d6:	28 30       	cpi	r18, 0x08	; 8
    25d8:	51 f1       	breq	.+84     	; 0x262e <__ultoa_invert+0x5c>
    25da:	20 31       	cpi	r18, 0x10	; 16
    25dc:	81 f1       	breq	.+96     	; 0x263e <__ultoa_invert+0x6c>
    25de:	e8 94       	clt
    25e0:	6f 93       	push	r22
    25e2:	6e 7f       	andi	r22, 0xFE	; 254
    25e4:	6e 5f       	subi	r22, 0xFE	; 254
    25e6:	7f 4f       	sbci	r23, 0xFF	; 255
    25e8:	8f 4f       	sbci	r24, 0xFF	; 255
    25ea:	9f 4f       	sbci	r25, 0xFF	; 255
    25ec:	af 4f       	sbci	r26, 0xFF	; 255
    25ee:	b1 e0       	ldi	r27, 0x01	; 1
    25f0:	3e d0       	rcall	.+124    	; 0x266e <__ultoa_invert+0x9c>
    25f2:	b4 e0       	ldi	r27, 0x04	; 4
    25f4:	3c d0       	rcall	.+120    	; 0x266e <__ultoa_invert+0x9c>
    25f6:	67 0f       	add	r22, r23
    25f8:	78 1f       	adc	r23, r24
    25fa:	89 1f       	adc	r24, r25
    25fc:	9a 1f       	adc	r25, r26
    25fe:	a1 1d       	adc	r26, r1
    2600:	68 0f       	add	r22, r24
    2602:	79 1f       	adc	r23, r25
    2604:	8a 1f       	adc	r24, r26
    2606:	91 1d       	adc	r25, r1
    2608:	a1 1d       	adc	r26, r1
    260a:	6a 0f       	add	r22, r26
    260c:	71 1d       	adc	r23, r1
    260e:	81 1d       	adc	r24, r1
    2610:	91 1d       	adc	r25, r1
    2612:	a1 1d       	adc	r26, r1
    2614:	20 d0       	rcall	.+64     	; 0x2656 <__ultoa_invert+0x84>
    2616:	09 f4       	brne	.+2      	; 0x261a <__ultoa_invert+0x48>
    2618:	68 94       	set
    261a:	3f 91       	pop	r19
    261c:	2a e0       	ldi	r18, 0x0A	; 10
    261e:	26 9f       	mul	r18, r22
    2620:	11 24       	eor	r1, r1
    2622:	30 19       	sub	r19, r0
    2624:	30 5d       	subi	r19, 0xD0	; 208
    2626:	31 93       	st	Z+, r19
    2628:	de f6       	brtc	.-74     	; 0x25e0 <__ultoa_invert+0xe>
    262a:	cf 01       	movw	r24, r30
    262c:	08 95       	ret
    262e:	46 2f       	mov	r20, r22
    2630:	47 70       	andi	r20, 0x07	; 7
    2632:	40 5d       	subi	r20, 0xD0	; 208
    2634:	41 93       	st	Z+, r20
    2636:	b3 e0       	ldi	r27, 0x03	; 3
    2638:	0f d0       	rcall	.+30     	; 0x2658 <__ultoa_invert+0x86>
    263a:	c9 f7       	brne	.-14     	; 0x262e <__ultoa_invert+0x5c>
    263c:	f6 cf       	rjmp	.-20     	; 0x262a <__ultoa_invert+0x58>
    263e:	46 2f       	mov	r20, r22
    2640:	4f 70       	andi	r20, 0x0F	; 15
    2642:	40 5d       	subi	r20, 0xD0	; 208
    2644:	4a 33       	cpi	r20, 0x3A	; 58
    2646:	18 f0       	brcs	.+6      	; 0x264e <__ultoa_invert+0x7c>
    2648:	49 5d       	subi	r20, 0xD9	; 217
    264a:	31 fd       	sbrc	r19, 1
    264c:	40 52       	subi	r20, 0x20	; 32
    264e:	41 93       	st	Z+, r20
    2650:	02 d0       	rcall	.+4      	; 0x2656 <__ultoa_invert+0x84>
    2652:	a9 f7       	brne	.-22     	; 0x263e <__ultoa_invert+0x6c>
    2654:	ea cf       	rjmp	.-44     	; 0x262a <__ultoa_invert+0x58>
    2656:	b4 e0       	ldi	r27, 0x04	; 4
    2658:	a6 95       	lsr	r26
    265a:	97 95       	ror	r25
    265c:	87 95       	ror	r24
    265e:	77 95       	ror	r23
    2660:	67 95       	ror	r22
    2662:	ba 95       	dec	r27
    2664:	c9 f7       	brne	.-14     	; 0x2658 <__ultoa_invert+0x86>
    2666:	00 97       	sbiw	r24, 0x00	; 0
    2668:	61 05       	cpc	r22, r1
    266a:	71 05       	cpc	r23, r1
    266c:	08 95       	ret
    266e:	9b 01       	movw	r18, r22
    2670:	ac 01       	movw	r20, r24
    2672:	0a 2e       	mov	r0, r26
    2674:	06 94       	lsr	r0
    2676:	57 95       	ror	r21
    2678:	47 95       	ror	r20
    267a:	37 95       	ror	r19
    267c:	27 95       	ror	r18
    267e:	ba 95       	dec	r27
    2680:	c9 f7       	brne	.-14     	; 0x2674 <__ultoa_invert+0xa2>
    2682:	62 0f       	add	r22, r18
    2684:	73 1f       	adc	r23, r19
    2686:	84 1f       	adc	r24, r20
    2688:	95 1f       	adc	r25, r21
    268a:	a0 1d       	adc	r26, r0
    268c:	08 95       	ret

0000268e <__prologue_saves__>:
    268e:	2f 92       	push	r2
    2690:	3f 92       	push	r3
    2692:	4f 92       	push	r4
    2694:	5f 92       	push	r5
    2696:	6f 92       	push	r6
    2698:	7f 92       	push	r7
    269a:	8f 92       	push	r8
    269c:	9f 92       	push	r9
    269e:	af 92       	push	r10
    26a0:	bf 92       	push	r11
    26a2:	cf 92       	push	r12
    26a4:	df 92       	push	r13
    26a6:	ef 92       	push	r14
    26a8:	ff 92       	push	r15
    26aa:	0f 93       	push	r16
    26ac:	1f 93       	push	r17
    26ae:	cf 93       	push	r28
    26b0:	df 93       	push	r29
    26b2:	cd b7       	in	r28, 0x3d	; 61
    26b4:	de b7       	in	r29, 0x3e	; 62
    26b6:	ca 1b       	sub	r28, r26
    26b8:	db 0b       	sbc	r29, r27
    26ba:	0f b6       	in	r0, 0x3f	; 63
    26bc:	f8 94       	cli
    26be:	de bf       	out	0x3e, r29	; 62
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	cd bf       	out	0x3d, r28	; 61
    26c4:	09 94       	ijmp

000026c6 <__epilogue_restores__>:
    26c6:	2a 88       	ldd	r2, Y+18	; 0x12
    26c8:	39 88       	ldd	r3, Y+17	; 0x11
    26ca:	48 88       	ldd	r4, Y+16	; 0x10
    26cc:	5f 84       	ldd	r5, Y+15	; 0x0f
    26ce:	6e 84       	ldd	r6, Y+14	; 0x0e
    26d0:	7d 84       	ldd	r7, Y+13	; 0x0d
    26d2:	8c 84       	ldd	r8, Y+12	; 0x0c
    26d4:	9b 84       	ldd	r9, Y+11	; 0x0b
    26d6:	aa 84       	ldd	r10, Y+10	; 0x0a
    26d8:	b9 84       	ldd	r11, Y+9	; 0x09
    26da:	c8 84       	ldd	r12, Y+8	; 0x08
    26dc:	df 80       	ldd	r13, Y+7	; 0x07
    26de:	ee 80       	ldd	r14, Y+6	; 0x06
    26e0:	fd 80       	ldd	r15, Y+5	; 0x05
    26e2:	0c 81       	ldd	r16, Y+4	; 0x04
    26e4:	1b 81       	ldd	r17, Y+3	; 0x03
    26e6:	aa 81       	ldd	r26, Y+2	; 0x02
    26e8:	b9 81       	ldd	r27, Y+1	; 0x01
    26ea:	ce 0f       	add	r28, r30
    26ec:	d1 1d       	adc	r29, r1
    26ee:	0f b6       	in	r0, 0x3f	; 63
    26f0:	f8 94       	cli
    26f2:	de bf       	out	0x3e, r29	; 62
    26f4:	0f be       	out	0x3f, r0	; 63
    26f6:	cd bf       	out	0x3d, r28	; 61
    26f8:	ed 01       	movw	r28, r26
    26fa:	08 95       	ret

000026fc <__do_global_dtors>:
    26fc:	10 e0       	ldi	r17, 0x00	; 0
    26fe:	c7 e3       	ldi	r28, 0x37	; 55
    2700:	d0 e0       	ldi	r29, 0x00	; 0
    2702:	04 c0       	rjmp	.+8      	; 0x270c <__do_global_dtors+0x10>
    2704:	fe 01       	movw	r30, r28
    2706:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <__tablejump2__>
    270a:	21 96       	adiw	r28, 0x01	; 1
    270c:	ca 33       	cpi	r28, 0x3A	; 58
    270e:	d1 07       	cpc	r29, r17
    2710:	c9 f7       	brne	.-14     	; 0x2704 <__do_global_dtors+0x8>
    2712:	f8 94       	cli

00002714 <__stop_program>:
    2714:	ff cf       	rjmp	.-2      	; 0x2714 <__stop_program>

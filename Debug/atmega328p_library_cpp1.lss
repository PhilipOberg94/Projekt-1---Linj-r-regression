
atmega328p_library_cpp1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000028b8  0000294c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000028b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000051  00800138  00800138  00002984  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002984  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000450  00000000  00000000  00002a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000807f  00000000  00000000  00002e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001e9d  00000000  00000000  0000aeef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001eac  00000000  00000000  0000cd8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f40  00000000  00000000  0000ec38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002769  00000000  00000000  0000fb78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000040eb  00000000  00000000  000122e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  000163cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__dtors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 80 04 	jmp	0x900	; 0x900 <__vector_3>
      10:	0c 94 a8 04 	jmp	0x950	; 0x950 <__vector_4>
      14:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__vector_5>
      18:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__vector_6>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__vector_9>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 f1 0b 	jmp	0x17e2	; 0x17e2 <__vector_11>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 cc 0b 	jmp	0x1798	; 0x1798 <__vector_16>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>

00000068 <__ctors_start>:
      68:	0b 05       	cpc	r16, r11
      6a:	d0 09       	sbc	r29, r0
      6c:	4c 0c       	add	r4, r12

0000006e <__ctors_end>:
      6e:	12 05       	cpc	r17, r2
      70:	d7 09       	sbc	r29, r7
      72:	53 0c       	add	r5, r3

00000074 <__dtors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e8 eb       	ldi	r30, 0xB8	; 184
      88:	f8 e2       	ldi	r31, 0x28	; 40
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a8 33       	cpi	r26, 0x38	; 56
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a8 e3       	ldi	r26, 0x38	; 56
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a9 38       	cpi	r26, 0x89	; 137
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>

000000a6 <__do_global_ctors>:
      a6:	10 e0       	ldi	r17, 0x00	; 0
      a8:	c7 e3       	ldi	r28, 0x37	; 55
      aa:	d0 e0       	ldi	r29, 0x00	; 0
      ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_global_ctors+0x10>
      ae:	21 97       	sbiw	r28, 0x01	; 1
      b0:	fe 01       	movw	r30, r28
      b2:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <__tablejump2__>
      b6:	c4 33       	cpi	r28, 0x34	; 52
      b8:	d1 07       	cpc	r29, r17
      ba:	c9 f7       	brne	.-14     	; 0xae <__do_global_ctors+0x8>
      bc:	0e 94 47 06 	call	0xc8e	; 0xc8e <main>
      c0:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__do_global_dtors>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <_ZN6driver3adc4readEh>:
    return read(pin) / static_cast<double>(MaxVal); 
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
      c8:	0f 93       	push	r16
constexpr uint8_t AdcPortOffset{14U};

// -----------------------------------------------------------------------------
constexpr bool isPinNumberValid(const uint8_t pin) 
{
    return (pin >= Pin::A0 && pin <= Pin::A5) || 
      ca:	86 30       	cpi	r24, 0x06	; 6
      cc:	30 f0       	brcs	.+12     	; 0xda <_ZN6driver3adc4readEh+0x12>
        (pin >= Port::C0 && pin <= Port::C5);
      ce:	92 ef       	ldi	r25, 0xF2	; 242
      d0:	98 0f       	add	r25, r24
constexpr uint8_t AdcPortOffset{14U};

// -----------------------------------------------------------------------------
constexpr bool isPinNumberValid(const uint8_t pin) 
{
    return (pin >= Pin::A0 && pin <= Pin::A5) || 
      d2:	96 30       	cpi	r25, 0x06	; 6
      d4:	20 f4       	brcc	.+8      	; 0xde <_ZN6driver3adc4readEh+0x16>
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	03 c0       	rjmp	.+6      	; 0xe0 <_ZN6driver3adc4readEh+0x18>
      da:	91 e0       	ldi	r25, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <_ZN6driver3adc4readEh+0x18>
      de:	90 e0       	ldi	r25, 0x00	; 0
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
      e0:	99 23       	and	r25, r25
      e2:	c9 f1       	breq	.+114    	; 0x156 <_ZN6driver3adc4readEh+0x8e>
}

// -----------------------------------------------------------------------------
constexpr uint8_t isPinAdjustedForOffset(const uint8_t pin) 
{
    return pin <= Pin::A5 ? pin : pin - AdcPortOffset;
      e4:	86 30       	cpi	r24, 0x06	; 6
      e6:	08 f0       	brcs	.+2      	; 0xea <_ZN6driver3adc4readEh+0x22>
      e8:	8e 50       	subi	r24, 0x0E	; 14

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
   ADMUX = (1 << REFS0) | isPinAdjustedForOffset(pin);
      ea:	80 64       	ori	r24, 0x40	; 64
      ec:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
      f0:	ea e7       	ldi	r30, 0x7A	; 122
      f2:	f0 e0       	ldi	r31, 0x00	; 0
      f4:	80 81       	ld	r24, Z
      f6:	80 68       	ori	r24, 0x80	; 128
      f8:	80 83       	st	Z, r24
      fa:	80 81       	ld	r24, Z
      fc:	80 64       	ori	r24, 0x40	; 64
      fe:	80 83       	st	Z, r24
     100:	80 81       	ld	r24, Z
     102:	81 60       	ori	r24, 0x01	; 1
     104:	80 83       	st	Z, r24
     106:	80 81       	ld	r24, Z
     108:	82 60       	ori	r24, 0x02	; 2
     10a:	80 83       	st	Z, r24
     10c:	80 81       	ld	r24, Z
     10e:	84 60       	ori	r24, 0x04	; 4
     110:	80 83       	st	Z, r24
template <typename T>
constexpr bool read(const volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    return reg & (1ULL << bit);
     112:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	40 e0       	ldi	r20, 0x00	; 0
     11a:	50 e0       	ldi	r21, 0x00	; 0
     11c:	60 e0       	ldi	r22, 0x00	; 0
     11e:	70 e0       	ldi	r23, 0x00	; 0
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	04 e0       	ldi	r16, 0x04	; 4
     126:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__lshrdi3>
     12a:	21 70       	andi	r18, 0x01	; 1
   utils::set(ADCSRA, ADEN, ADSC, ADPS0, ADPS1, ADPS2);
   while (!utils::read(ADCSRA, ADIF));
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	40 e0       	ldi	r20, 0x00	; 0
     130:	50 e0       	ldi	r21, 0x00	; 0
     132:	60 e0       	ldi	r22, 0x00	; 0
     134:	70 e0       	ldi	r23, 0x00	; 0
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__cmpdi2_s8>
     140:	41 f3       	breq	.-48     	; 0x112 <_ZN6driver3adc4readEh+0x4a>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
     142:	ea e7       	ldi	r30, 0x7A	; 122
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	80 81       	ld	r24, Z
     148:	80 61       	ori	r24, 0x10	; 16
     14a:	80 83       	st	Z, r24
   utils::set(ADCSRA, ADIF);
   return ADC;
     14c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     150:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     154:	02 c0       	rjmp	.+4      	; 0x15a <_ZN6driver3adc4readEh+0x92>
}

// -----------------------------------------------------------------------------
uint16_t read(const uint8_t pin) 
{
   if (!isPinNumberValid(pin)) { return 0U; }
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
   ADMUX = (1 << REFS0) | isPinAdjustedForOffset(pin);
   utils::set(ADCSRA, ADEN, ADSC, ADPS0, ADPS1, ADPS2);
   while (!utils::read(ADCSRA, ADIF));
   utils::set(ADCSRA, ADIF);
   return ADC;
}
     15a:	0f 91       	pop	r16
     15c:	08 95       	ret

0000015e <_ZN6driver3adc4initEv>:
    return pin <= Pin::A5 ? pin : pin - AdcPortOffset;
}
} // namespace 

// -----------------------------------------------------------------------------
void init(void) { read(Pin::A0); }
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	0e 94 64 00 	call	0xc8	; 0xc8 <_ZN6driver3adc4readEh>
     164:	08 95       	ret

00000166 <_ZN6driver3adc12getDutyCycleEh>:

// -----------------------------------------------------------------------------
double getDutyCycle(const uint8_t pin) 
{ 
    return read(pin) / static_cast<double>(MaxVal); 
     166:	0e 94 64 00 	call	0xc8	; 0xc8 <_ZN6driver3adc4readEh>
     16a:	bc 01       	movw	r22, r24
     16c:	80 e0       	ldi	r24, 0x00	; 0
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__floatunsisf>
     174:	20 e0       	ldi	r18, 0x00	; 0
     176:	30 ec       	ldi	r19, 0xC0	; 192
     178:	4f e7       	ldi	r20, 0x7F	; 127
     17a:	54 e4       	ldi	r21, 0x44	; 68
     17c:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__divsf3>
}
     180:	08 95       	ret

00000182 <_ZNK2ml6LinReg7predictERKd>:
 * @return Number of training sets
 ********************************************************************************/
int LinReg::getTrainingSetCount() const
{
    return myTrainingInput.size();
}
     182:	cf 92       	push	r12
     184:	df 92       	push	r13
     186:	ef 92       	push	r14
     188:	ff 92       	push	r15
     18a:	fb 01       	movw	r30, r22
     18c:	dc 01       	movw	r26, r24
     18e:	cd 90       	ld	r12, X+
     190:	dd 90       	ld	r13, X+
     192:	ed 90       	ld	r14, X+
     194:	fc 90       	ld	r15, X
     196:	13 97       	sbiw	r26, 0x03	; 3
     198:	14 96       	adiw	r26, 0x04	; 4
     19a:	6d 91       	ld	r22, X+
     19c:	7d 91       	ld	r23, X+
     19e:	8d 91       	ld	r24, X+
     1a0:	9c 91       	ld	r25, X
     1a2:	17 97       	sbiw	r26, 0x07	; 7
     1a4:	20 81       	ld	r18, Z
     1a6:	31 81       	ldd	r19, Z+1	; 0x01
     1a8:	42 81       	ldd	r20, Z+2	; 0x02
     1aa:	53 81       	ldd	r21, Z+3	; 0x03
     1ac:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__mulsf3>
     1b0:	9b 01       	movw	r18, r22
     1b2:	ac 01       	movw	r20, r24
     1b4:	c7 01       	movw	r24, r14
     1b6:	b6 01       	movw	r22, r12
     1b8:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
     1bc:	ff 90       	pop	r15
     1be:	ef 90       	pop	r14
     1c0:	df 90       	pop	r13
     1c2:	cf 90       	pop	r12
     1c4:	08 95       	ret

000001c6 <_ZNK9container6VectorIdE4sizeEv>:
     1c6:	fc 01       	movw	r30, r24
     1c8:	82 81       	ldd	r24, Z+2	; 0x02
     1ca:	93 81       	ldd	r25, Z+3	; 0x03
     1cc:	08 95       	ret

000001ce <_ZNK9container6VectorIdEixEj>:
template <typename T>
T& Vector<T>::operator[](const size_t index) { return myData[index]; }

// -----------------------------------------------------------------------------
template <typename T>
const T& Vector<T>::operator[](const size_t index) const { return myData[index]; }
     1ce:	fc 01       	movw	r30, r24
     1d0:	80 81       	ld	r24, Z
     1d2:	91 81       	ldd	r25, Z+1	; 0x01
     1d4:	66 0f       	add	r22, r22
     1d6:	77 1f       	adc	r23, r23
     1d8:	66 0f       	add	r22, r22
     1da:	77 1f       	adc	r23, r23
     1dc:	86 0f       	add	r24, r22
     1de:	97 1f       	adc	r25, r23
     1e0:	08 95       	ret

000001e2 <_ZN2ml6LinReg5trainERKi>:
 * 
 * @param epochs Number of epochs to train the model
 * @return True if training was successful, false otherwise
 ********************************************************************************/
bool LinReg::train(const int &epochs)
{
     1e2:	4f 92       	push	r4
     1e4:	5f 92       	push	r5
     1e6:	6f 92       	push	r6
     1e8:	7f 92       	push	r7
     1ea:	8f 92       	push	r8
     1ec:	9f 92       	push	r9
     1ee:	af 92       	push	r10
     1f0:	bf 92       	push	r11
     1f2:	cf 92       	push	r12
     1f4:	df 92       	push	r13
     1f6:	ef 92       	push	r14
     1f8:	ff 92       	push	r15
     1fa:	0f 93       	push	r16
     1fc:	1f 93       	push	r17
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
    double prediction{};
    double error{};
        
    if (epochs == 0 || myLearningRate <= 0) { return false; }
     202:	fb 01       	movw	r30, r22
     204:	20 81       	ld	r18, Z
     206:	31 81       	ldd	r19, Z+1	; 0x01
     208:	23 2b       	or	r18, r19
     20a:	09 f4       	brne	.+2      	; 0x20e <_ZN2ml6LinReg5trainERKi+0x2c>
     20c:	82 c0       	rjmp	.+260    	; 0x312 <_ZN2ml6LinReg5trainERKi+0x130>
     20e:	4b 01       	movw	r8, r22
     210:	ec 01       	movw	r28, r24
     212:	68 85       	ldd	r22, Y+8	; 0x08
     214:	79 85       	ldd	r23, Y+9	; 0x09
     216:	8a 85       	ldd	r24, Y+10	; 0x0a
     218:	9b 85       	ldd	r25, Y+11	; 0x0b
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	a9 01       	movw	r20, r18
     220:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__cmpsf2>
     224:	18 16       	cp	r1, r24
     226:	0c f0       	brlt	.+2      	; 0x22a <_ZN2ml6LinReg5trainERKi+0x48>
     228:	76 c0       	rjmp	.+236    	; 0x316 <_ZN2ml6LinReg5trainERKi+0x134>
     22a:	a1 2c       	mov	r10, r1
     22c:	b1 2c       	mov	r11, r1
        
    for (int i = 0; i < epochs; i++)
     22e:	f4 01       	movw	r30, r8
     230:	80 81       	ld	r24, Z
     232:	91 81       	ldd	r25, Z+1	; 0x01
     234:	a8 16       	cp	r10, r24
     236:	b9 06       	cpc	r11, r25
     238:	0c f0       	brlt	.+2      	; 0x23c <_ZN2ml6LinReg5trainERKi+0x5a>
     23a:	6f c0       	rjmp	.+222    	; 0x31a <_ZN2ml6LinReg5trainERKi+0x138>
     23c:	00 e0       	ldi	r16, 0x00	; 0
     23e:	10 e0       	ldi	r17, 0x00	; 0
    {
        for (auto j = 0U; j < myTrainingInput.size(); j++)
     240:	7e 01       	movw	r14, r28
     242:	fc e0       	ldi	r31, 0x0C	; 12
     244:	ef 0e       	add	r14, r31
     246:	f1 1c       	adc	r15, r1
     248:	c7 01       	movw	r24, r14
     24a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <_ZNK9container6VectorIdE4sizeEv>
     24e:	08 17       	cp	r16, r24
     250:	19 07       	cpc	r17, r25
     252:	08 f0       	brcs	.+2      	; 0x256 <_ZN2ml6LinReg5trainERKi+0x74>
     254:	5a c0       	rjmp	.+180    	; 0x30a <_ZN2ml6LinReg5trainERKi+0x128>
        {
            const auto &ref(myTrainingOutput[j]);
     256:	b8 01       	movw	r22, r16
     258:	ce 01       	movw	r24, r28
     25a:	40 96       	adiw	r24, 0x10	; 16
     25c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <_ZNK9container6VectorIdEixEj>
     260:	6c 01       	movw	r12, r24
            const auto &input(myTrainingInput[j]);
     262:	b8 01       	movw	r22, r16
     264:	c7 01       	movw	r24, r14
     266:	0e 94 e7 00 	call	0x1ce	; 0x1ce <_ZNK9container6VectorIdEixEj>
     26a:	7c 01       	movw	r14, r24
            
            if(input == 0){
     26c:	fc 01       	movw	r30, r24
     26e:	60 81       	ld	r22, Z
     270:	71 81       	ldd	r23, Z+1	; 0x01
     272:	82 81       	ldd	r24, Z+2	; 0x02
     274:	93 81       	ldd	r25, Z+3	; 0x03
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	a9 01       	movw	r20, r18
     27c:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__cmpsf2>
     280:	81 11       	cpse	r24, r1
     282:	0a c0       	rjmp	.+20     	; 0x298 <_ZN2ml6LinReg5trainERKi+0xb6>
                myBias = ref;
     284:	f6 01       	movw	r30, r12
     286:	80 81       	ld	r24, Z
     288:	91 81       	ldd	r25, Z+1	; 0x01
     28a:	a2 81       	ldd	r26, Z+2	; 0x02
     28c:	b3 81       	ldd	r27, Z+3	; 0x03
     28e:	88 83       	st	Y, r24
     290:	99 83       	std	Y+1, r25	; 0x01
     292:	aa 83       	std	Y+2, r26	; 0x02
     294:	bb 83       	std	Y+3, r27	; 0x03
     296:	36 c0       	rjmp	.+108    	; 0x304 <_ZN2ml6LinReg5trainERKi+0x122>
            }
            else{
                prediction = predict(input);
     298:	b7 01       	movw	r22, r14
     29a:	ce 01       	movw	r24, r28
     29c:	0e 94 c1 00 	call	0x182	; 0x182 <_ZNK2ml6LinReg7predictERKd>
     2a0:	9b 01       	movw	r18, r22
     2a2:	ac 01       	movw	r20, r24
                error = ref - prediction;
     2a4:	f6 01       	movw	r30, r12
     2a6:	60 81       	ld	r22, Z
     2a8:	71 81       	ldd	r23, Z+1	; 0x01
     2aa:	82 81       	ldd	r24, Z+2	; 0x02
     2ac:	93 81       	ldd	r25, Z+3	; 0x03
     2ae:	0e 94 c5 0c 	call	0x198a	; 0x198a <__subsf3>

                myBias += error * myLearningRate;
     2b2:	28 85       	ldd	r18, Y+8	; 0x08
     2b4:	39 85       	ldd	r19, Y+9	; 0x09
     2b6:	4a 85       	ldd	r20, Y+10	; 0x0a
     2b8:	5b 85       	ldd	r21, Y+11	; 0x0b
     2ba:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__mulsf3>
     2be:	2b 01       	movw	r4, r22
     2c0:	3c 01       	movw	r6, r24
     2c2:	9b 01       	movw	r18, r22
     2c4:	ac 01       	movw	r20, r24
     2c6:	68 81       	ld	r22, Y
     2c8:	79 81       	ldd	r23, Y+1	; 0x01
     2ca:	8a 81       	ldd	r24, Y+2	; 0x02
     2cc:	9b 81       	ldd	r25, Y+3	; 0x03
     2ce:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
     2d2:	68 83       	st	Y, r22
     2d4:	79 83       	std	Y+1, r23	; 0x01
     2d6:	8a 83       	std	Y+2, r24	; 0x02
     2d8:	9b 83       	std	Y+3, r25	; 0x03
                myWeight += error * myLearningRate * input;
     2da:	f7 01       	movw	r30, r14
     2dc:	20 81       	ld	r18, Z
     2de:	31 81       	ldd	r19, Z+1	; 0x01
     2e0:	42 81       	ldd	r20, Z+2	; 0x02
     2e2:	53 81       	ldd	r21, Z+3	; 0x03
     2e4:	c3 01       	movw	r24, r6
     2e6:	b2 01       	movw	r22, r4
     2e8:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__mulsf3>
     2ec:	9b 01       	movw	r18, r22
     2ee:	ac 01       	movw	r20, r24
     2f0:	6c 81       	ldd	r22, Y+4	; 0x04
     2f2:	7d 81       	ldd	r23, Y+5	; 0x05
     2f4:	8e 81       	ldd	r24, Y+6	; 0x06
     2f6:	9f 81       	ldd	r25, Y+7	; 0x07
     2f8:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
     2fc:	6c 83       	std	Y+4, r22	; 0x04
     2fe:	7d 83       	std	Y+5, r23	; 0x05
     300:	8e 83       	std	Y+6, r24	; 0x06
     302:	9f 83       	std	Y+7, r25	; 0x07
        
    if (epochs == 0 || myLearningRate <= 0) { return false; }
        
    for (int i = 0; i < epochs; i++)
    {
        for (auto j = 0U; j < myTrainingInput.size(); j++)
     304:	0f 5f       	subi	r16, 0xFF	; 255
     306:	1f 4f       	sbci	r17, 0xFF	; 255
     308:	9b cf       	rjmp	.-202    	; 0x240 <_ZN2ml6LinReg5trainERKi+0x5e>
    double prediction{};
    double error{};
        
    if (epochs == 0 || myLearningRate <= 0) { return false; }
        
    for (int i = 0; i < epochs; i++)
     30a:	ff ef       	ldi	r31, 0xFF	; 255
     30c:	af 1a       	sub	r10, r31
     30e:	bf 0a       	sbc	r11, r31
     310:	8e cf       	rjmp	.-228    	; 0x22e <_ZN2ml6LinReg5trainERKi+0x4c>
bool LinReg::train(const int &epochs)
{
    double prediction{};
    double error{};
        
    if (epochs == 0 || myLearningRate <= 0) { return false; }
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	03 c0       	rjmp	.+6      	; 0x31c <_ZN2ml6LinReg5trainERKi+0x13a>
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	01 c0       	rjmp	.+2      	; 0x31c <_ZN2ml6LinReg5trainERKi+0x13a>
                myBias += error * myLearningRate;
                myWeight += error * myLearningRate * input;
            }                
        }
    }
    return true;
     31a:	81 e0       	ldi	r24, 0x01	; 1
}
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	1f 91       	pop	r17
     322:	0f 91       	pop	r16
     324:	ff 90       	pop	r15
     326:	ef 90       	pop	r14
     328:	df 90       	pop	r13
     32a:	cf 90       	pop	r12
     32c:	bf 90       	pop	r11
     32e:	af 90       	pop	r10
     330:	9f 90       	pop	r9
     332:	8f 90       	pop	r8
     334:	7f 90       	pop	r7
     336:	6f 90       	pop	r6
     338:	5f 90       	pop	r5
     33a:	4f 90       	pop	r4
     33c:	08 95       	ret

0000033e <_ZN9container6VectorIdE6resizeEj>:
    mySize = 0;
}

// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::resize(const size_t newSize) 
     33e:	0f 93       	push	r16
     340:	1f 93       	push	r17
     342:	cf 93       	push	r28
     344:	df 93       	push	r29
     346:	ec 01       	movw	r28, r24
     348:	8b 01       	movw	r16, r22

// -----------------------------------------------------------------------------
template <typename T>
inline T* reallocMemory(T* block, const size_t new_size) 
{
    return static_cast<T*>(realloc(block, sizeof(T) * new_size));
     34a:	66 0f       	add	r22, r22
     34c:	77 1f       	adc	r23, r23
     34e:	66 0f       	add	r22, r22
     350:	77 1f       	adc	r23, r23
     352:	88 81       	ld	r24, Y
     354:	99 81       	ldd	r25, Y+1	; 0x01
     356:	0e 94 66 10 	call	0x20cc	; 0x20cc <realloc>
{
    auto copy{utils::reallocMemory<T>(myData, newSize)};
    if (copy == nullptr) { return false; }
     35a:	00 97       	sbiw	r24, 0x00	; 0
     35c:	31 f0       	breq	.+12     	; 0x36a <_ZN9container6VectorIdE6resizeEj+0x2c>
    myData = copy;
     35e:	99 83       	std	Y+1, r25	; 0x01
     360:	88 83       	st	Y, r24
    mySize = newSize;
     362:	1b 83       	std	Y+3, r17	; 0x03
     364:	0a 83       	std	Y+2, r16	; 0x02
    return true;
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	01 c0       	rjmp	.+2      	; 0x36c <_ZN9container6VectorIdE6resizeEj+0x2e>
// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::resize(const size_t newSize) 
{
    auto copy{utils::reallocMemory<T>(myData, newSize)};
    if (copy == nullptr) { return false; }
     36a:	80 e0       	ldi	r24, 0x00	; 0
    myData = copy;
    mySize = newSize;
    return true;
}
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	1f 91       	pop	r17
     372:	0f 91       	pop	r16
     374:	08 95       	ret

00000376 <_ZN9container6VectorIdE6assignERKS1_j>:
    return true;
}

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::assign(const Vector<T>& source, const size_t offset) 
     376:	ef 92       	push	r14
     378:	ff 92       	push	r15
     37a:	0f 93       	push	r16
     37c:	1f 93       	push	r17
     37e:	cf 93       	push	r28
     380:	df 93       	push	r29
{
    for (size_t i{}; offset + i < mySize && i < source.mySize; ++i) 
     382:	a0 e0       	ldi	r26, 0x00	; 0
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	9d 01       	movw	r18, r26
     388:	24 0f       	add	r18, r20
     38a:	35 1f       	adc	r19, r21
     38c:	ec 01       	movw	r28, r24
     38e:	ea 81       	ldd	r30, Y+2	; 0x02
     390:	fb 81       	ldd	r31, Y+3	; 0x03
     392:	2e 17       	cp	r18, r30
     394:	3f 07       	cpc	r19, r31
     396:	28 f5       	brcc	.+74     	; 0x3e2 <_ZN9container6VectorIdE6assignERKS1_j+0x6c>
     398:	eb 01       	movw	r28, r22
     39a:	ea 81       	ldd	r30, Y+2	; 0x02
     39c:	fb 81       	ldd	r31, Y+3	; 0x03
     39e:	ae 17       	cp	r26, r30
     3a0:	bf 07       	cpc	r27, r31
     3a2:	f8 f4       	brcc	.+62     	; 0x3e2 <_ZN9container6VectorIdE6assignERKS1_j+0x6c>
    {
        myData[offset + i] = source.myData[i];
     3a4:	22 0f       	add	r18, r18
     3a6:	33 1f       	adc	r19, r19
     3a8:	22 0f       	add	r18, r18
     3aa:	33 1f       	adc	r19, r19
     3ac:	ec 01       	movw	r28, r24
     3ae:	e8 81       	ld	r30, Y
     3b0:	f9 81       	ldd	r31, Y+1	; 0x01
     3b2:	7f 01       	movw	r14, r30
     3b4:	e2 0e       	add	r14, r18
     3b6:	f3 1e       	adc	r15, r19
     3b8:	9d 01       	movw	r18, r26
     3ba:	22 0f       	add	r18, r18
     3bc:	33 1f       	adc	r19, r19
     3be:	22 0f       	add	r18, r18
     3c0:	33 1f       	adc	r19, r19
     3c2:	fb 01       	movw	r30, r22
     3c4:	c0 81       	ld	r28, Z
     3c6:	d1 81       	ldd	r29, Z+1	; 0x01
     3c8:	c2 0f       	add	r28, r18
     3ca:	d3 1f       	adc	r29, r19
     3cc:	08 81       	ld	r16, Y
     3ce:	19 81       	ldd	r17, Y+1	; 0x01
     3d0:	2a 81       	ldd	r18, Y+2	; 0x02
     3d2:	3b 81       	ldd	r19, Y+3	; 0x03
     3d4:	e7 01       	movw	r28, r14
     3d6:	08 83       	st	Y, r16
     3d8:	19 83       	std	Y+1, r17	; 0x01
     3da:	2a 83       	std	Y+2, r18	; 0x02
     3dc:	3b 83       	std	Y+3, r19	; 0x03

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::assign(const Vector<T>& source, const size_t offset) 
{
    for (size_t i{}; offset + i < mySize && i < source.mySize; ++i) 
     3de:	11 96       	adiw	r26, 0x01	; 1
     3e0:	d2 cf       	rjmp	.-92     	; 0x386 <_ZN9container6VectorIdE6assignERKS1_j+0x10>
    {
        myData[offset + i] = source.myData[i];
    }
}
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	08 95       	ret

000003f0 <_ZN9container6VectorIdE4copyERKS1_>:
    }
}

// -----------------------------------------------------------------------------
template <typename T>
bool Vector<T>::copy(const Vector<T>& source) 
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
     3f8:	cf 93       	push	r28
     3fa:	8c 01       	movw	r16, r24
     3fc:	7b 01       	movw	r14, r22
{
    if (!resize(source.mySize)) { return false; }
     3fe:	fb 01       	movw	r30, r22
     400:	62 81       	ldd	r22, Z+2	; 0x02
     402:	73 81       	ldd	r23, Z+3	; 0x03
     404:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZN9container6VectorIdE6resizeEj>
     408:	c8 2f       	mov	r28, r24
     40a:	88 23       	and	r24, r24
     40c:	31 f0       	breq	.+12     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
    assign(source);
     40e:	40 e0       	ldi	r20, 0x00	; 0
     410:	50 e0       	ldi	r21, 0x00	; 0
     412:	b7 01       	movw	r22, r14
     414:	c8 01       	movw	r24, r16
     416:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN9container6VectorIdE6assignERKS1_j>
    return true;
}
     41a:	8c 2f       	mov	r24, r28
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	08 95       	ret

00000428 <_ZN9container6VectorIdEC1ERKS1_>:
    addValues(array);
}

// -----------------------------------------------------------------------------
template <typename T>
Vector<T>::Vector(const Vector<T>& source) { copy(source); }
     428:	fc 01       	movw	r30, r24
     42a:	11 82       	std	Z+1, r1	; 0x01
     42c:	10 82       	st	Z, r1
     42e:	13 82       	std	Z+3, r1	; 0x03
     430:	12 82       	std	Z+2, r1	; 0x02
     432:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <_ZN9container6VectorIdE4copyERKS1_>
     436:	08 95       	ret

00000438 <_ZN2ml6LinRegC1ERKdS2_RKN9container6VectorIdEES7_S2_>:
 * @param weight Initial weight value
 * @param trainingInput Vector of training input values
 * @param trainingOutput Vector of training output values
 * @param learningRate Learning rate for the model
 ********************************************************************************/
LinReg::LinReg(const double &bias, const double &weight,
     438:	ef 92       	push	r14
     43a:	ff 92       	push	r15
     43c:	0f 93       	push	r16
     43e:	1f 93       	push	r17
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	ec 01       	movw	r28, r24
    const double &learningRate)
    : myBias(bias)
    , myWeight(weight)
    , myLearningRate(learningRate)
    , myTrainingInput(trainingInput)
    , myTrainingOutput(trainingOutput)
     446:	fb 01       	movw	r30, r22
     448:	80 81       	ld	r24, Z
     44a:	91 81       	ldd	r25, Z+1	; 0x01
     44c:	a2 81       	ldd	r26, Z+2	; 0x02
     44e:	b3 81       	ldd	r27, Z+3	; 0x03
     450:	88 83       	st	Y, r24
     452:	99 83       	std	Y+1, r25	; 0x01
     454:	aa 83       	std	Y+2, r26	; 0x02
     456:	bb 83       	std	Y+3, r27	; 0x03
     458:	fa 01       	movw	r30, r20
     45a:	80 81       	ld	r24, Z
     45c:	91 81       	ldd	r25, Z+1	; 0x01
     45e:	a2 81       	ldd	r26, Z+2	; 0x02
     460:	b3 81       	ldd	r27, Z+3	; 0x03
     462:	8c 83       	std	Y+4, r24	; 0x04
     464:	9d 83       	std	Y+5, r25	; 0x05
     466:	ae 83       	std	Y+6, r26	; 0x06
     468:	bf 83       	std	Y+7, r27	; 0x07
     46a:	f7 01       	movw	r30, r14
     46c:	80 81       	ld	r24, Z
     46e:	91 81       	ldd	r25, Z+1	; 0x01
     470:	a2 81       	ldd	r26, Z+2	; 0x02
     472:	b3 81       	ldd	r27, Z+3	; 0x03
     474:	88 87       	std	Y+8, r24	; 0x08
     476:	99 87       	std	Y+9, r25	; 0x09
     478:	aa 87       	std	Y+10, r26	; 0x0a
     47a:	bb 87       	std	Y+11, r27	; 0x0b
     47c:	b9 01       	movw	r22, r18
     47e:	ce 01       	movw	r24, r28
     480:	0c 96       	adiw	r24, 0x0c	; 12
     482:	0e 94 14 02 	call	0x428	; 0x428 <_ZN9container6VectorIdEC1ERKS1_>
     486:	b8 01       	movw	r22, r16
     488:	ce 01       	movw	r24, r28
     48a:	40 96       	adiw	r24, 0x10	; 16
     48c:	0e 94 14 02 	call	0x428	; 0x428 <_ZN9container6VectorIdEC1ERKS1_>
{
}
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	1f 91       	pop	r17
     496:	0f 91       	pop	r16
     498:	ff 90       	pop	r15
     49a:	ef 90       	pop	r14
     49c:	08 95       	ret

0000049e <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>:
 * @tparam Size The array size.
 * 
 * @note The array size must exceed 0, else a compilation error will be generated.
 ********************************************************************************/
template <size_t Size>
class CallbackArray : public Array<void (*)(), Size>
     49e:	43 30       	cpi	r20, 0x03	; 3
     4a0:	51 05       	cpc	r21, r1
     4a2:	60 f4       	brcc	.+24     	; 0x4bc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x1e>
     4a4:	61 15       	cp	r22, r1
     4a6:	71 05       	cpc	r23, r1
     4a8:	59 f0       	breq	.+22     	; 0x4c0 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x22>
     4aa:	44 0f       	add	r20, r20
     4ac:	55 1f       	adc	r21, r21
     4ae:	fc 01       	movw	r30, r24
     4b0:	e4 0f       	add	r30, r20
     4b2:	f5 1f       	adc	r31, r21
     4b4:	71 83       	std	Z+1, r23	; 0x01
     4b6:	60 83       	st	Z, r22
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	08 95       	ret
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	08 95       	ret
     4c0:	80 e0       	ldi	r24, 0x00	; 0
     4c2:	08 95       	ret

000004c4 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>:
     4c4:	66 0f       	add	r22, r22
     4c6:	77 1f       	adc	r23, r23
     4c8:	86 0f       	add	r24, r22
     4ca:	97 1f       	adc	r25, r23
     4cc:	fc 01       	movw	r30, r24
     4ce:	20 81       	ld	r18, Z
     4d0:	31 81       	ldd	r19, Z+1	; 0x01
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	23 2b       	or	r18, r19
     4d6:	09 f4       	brne	.+2      	; 0x4da <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj+0x16>
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	08 95       	ret

000004dc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>:
     4dc:	ef 92       	push	r14
     4de:	ff 92       	push	r15
     4e0:	1f 93       	push	r17
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	7c 01       	movw	r14, r24
     4e8:	eb 01       	movw	r28, r22
     4ea:	63 30       	cpi	r22, 0x03	; 3
     4ec:	71 05       	cpc	r23, r1
     4ee:	20 f4       	brcc	.+8      	; 0x4f8 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1c>
     4f0:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>
     4f4:	18 2f       	mov	r17, r24
     4f6:	01 c0       	rjmp	.+2      	; 0x4fa <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1e>
     4f8:	10 e0       	ldi	r17, 0x00	; 0
     4fa:	11 23       	and	r17, r17
     4fc:	39 f0       	breq	.+14     	; 0x50c <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x30>
     4fe:	cc 0f       	add	r28, r28
     500:	dd 1f       	adc	r29, r29
     502:	ce 0d       	add	r28, r14
     504:	df 1d       	adc	r29, r15
     506:	e8 81       	ld	r30, Y
     508:	f9 81       	ldd	r31, Y+1	; 0x01
     50a:	09 95       	icall
     50c:	81 2f       	mov	r24, r17
     50e:	df 91       	pop	r29
     510:	cf 91       	pop	r28
     512:	1f 91       	pop	r17
     514:	ff 90       	pop	r15
     516:	ef 90       	pop	r14
     518:	08 95       	ret

0000051a <_ZNK6driver4GPIO6ioPortEv>:
     51a:	dc 01       	movw	r26, r24
     51c:	ed 91       	ld	r30, X+
     51e:	fc 91       	ld	r31, X
     520:	81 85       	ldd	r24, Z+9	; 0x09
     522:	92 85       	ldd	r25, Z+10	; 0x0a
     524:	08 95       	ret

00000526 <_ZN6driver4GPIO16disableInterruptEv>:
     526:	0f 93       	push	r16
     528:	dc 01       	movw	r26, r24
     52a:	12 96       	adiw	r26, 0x02	; 2
     52c:	0c 91       	ld	r16, X
     52e:	12 97       	sbiw	r26, 0x02	; 2
     530:	ed 91       	ld	r30, X+
     532:	fc 91       	ld	r31, X
     534:	a6 81       	ldd	r26, Z+6	; 0x06
     536:	b7 81       	ldd	r27, Z+7	; 0x07
     538:	ec 91       	ld	r30, X
     53a:	21 e0       	ldi	r18, 0x01	; 1
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     54e:	20 95       	com	r18
     550:	e2 23       	and	r30, r18
     552:	ec 93       	st	X, r30
     554:	0f 91       	pop	r16
     556:	08 95       	ret

00000558 <_ZN6driver4GPIO7disableEv>:
     558:	4f 92       	push	r4
     55a:	5f 92       	push	r5
     55c:	6f 92       	push	r6
     55e:	7f 92       	push	r7
     560:	8f 92       	push	r8
     562:	9f 92       	push	r9
     564:	af 92       	push	r10
     566:	bf 92       	push	r11
     568:	cf 92       	push	r12
     56a:	df 92       	push	r13
     56c:	ef 92       	push	r14
     56e:	ff 92       	push	r15
     570:	0f 93       	push	r16
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	ec 01       	movw	r28, r24
     578:	0a 81       	ldd	r16, Y+2	; 0x02
     57a:	e8 81       	ld	r30, Y
     57c:	f9 81       	ldd	r31, Y+1	; 0x01
     57e:	a0 81       	ld	r26, Z
     580:	b1 81       	ldd	r27, Z+1	; 0x01
     582:	ec 91       	ld	r30, X
     584:	21 e0       	ldi	r18, 0x01	; 1
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	40 e0       	ldi	r20, 0x00	; 0
     58a:	50 e0       	ldi	r21, 0x00	; 0
     58c:	60 e0       	ldi	r22, 0x00	; 0
     58e:	70 e0       	ldi	r23, 0x00	; 0
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     598:	20 95       	com	r18
     59a:	e2 23       	and	r30, r18
     59c:	ec 93       	st	X, r30
     59e:	0a 81       	ldd	r16, Y+2	; 0x02
     5a0:	e8 81       	ld	r30, Y
     5a2:	f9 81       	ldd	r31, Y+1	; 0x01
     5a4:	a2 81       	ldd	r26, Z+2	; 0x02
     5a6:	b3 81       	ldd	r27, Z+3	; 0x03
     5a8:	ec 91       	ld	r30, X
     5aa:	21 e0       	ldi	r18, 0x01	; 1
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	40 e0       	ldi	r20, 0x00	; 0
     5b0:	50 e0       	ldi	r21, 0x00	; 0
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     5be:	20 95       	com	r18
     5c0:	e2 23       	and	r30, r18
     5c2:	ec 93       	st	X, r30
     5c4:	0a 81       	ldd	r16, Y+2	; 0x02
     5c6:	e8 e3       	ldi	r30, 0x38	; 56
     5c8:	f1 e0       	ldi	r31, 0x01	; 1
     5ca:	40 80       	ld	r4, Z
     5cc:	51 80       	ldd	r5, Z+1	; 0x01
     5ce:	62 80       	ldd	r6, Z+2	; 0x02
     5d0:	73 80       	ldd	r7, Z+3	; 0x03
     5d2:	21 e0       	ldi	r18, 0x01	; 1
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	40 e0       	ldi	r20, 0x00	; 0
     5d8:	50 e0       	ldi	r21, 0x00	; 0
     5da:	60 e0       	ldi	r22, 0x00	; 0
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	80 e0       	ldi	r24, 0x00	; 0
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     5e6:	82 2e       	mov	r8, r18
     5e8:	93 2e       	mov	r9, r19
     5ea:	a4 2e       	mov	r10, r20
     5ec:	b5 2e       	mov	r11, r21
     5ee:	80 94       	com	r8
     5f0:	90 94       	com	r9
     5f2:	a0 94       	com	r10
     5f4:	b0 94       	com	r11
     5f6:	84 20       	and	r8, r4
     5f8:	95 20       	and	r9, r5
     5fa:	a6 20       	and	r10, r6
     5fc:	b7 20       	and	r11, r7
     5fe:	80 82       	st	Z, r8
     600:	91 82       	std	Z+1, r9	; 0x01
     602:	a2 82       	std	Z+2, r10	; 0x02
     604:	b3 82       	std	Z+3, r11	; 0x03
     606:	ce 01       	movw	r24, r28
     608:	0e 94 93 02 	call	0x526	; 0x526 <_ZN6driver4GPIO16disableInterruptEv>
     60c:	19 82       	std	Y+1, r1	; 0x01
     60e:	18 82       	st	Y, r1
     610:	1a 82       	std	Y+2, r1	; 0x02
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	0f 91       	pop	r16
     618:	ff 90       	pop	r15
     61a:	ef 90       	pop	r14
     61c:	df 90       	pop	r13
     61e:	cf 90       	pop	r12
     620:	bf 90       	pop	r11
     622:	af 90       	pop	r10
     624:	9f 90       	pop	r9
     626:	8f 90       	pop	r8
     628:	7f 90       	pop	r7
     62a:	6f 90       	pop	r6
     62c:	5f 90       	pop	r5
     62e:	4f 90       	pop	r4
     630:	08 95       	ret

00000632 <_ZN6driver4GPIOD1Ev>:
     632:	0e 94 ac 02 	call	0x558	; 0x558 <_ZN6driver4GPIO7disableEv>
     636:	08 95       	ret

00000638 <_ZN6driver4GPIO15enableInterruptEv>:
     638:	0f 93       	push	r16
     63a:	cf 93       	push	r28
     63c:	fc 01       	movw	r30, r24
     63e:	78 94       	sei
     640:	a0 81       	ld	r26, Z
     642:	b1 81       	ldd	r27, Z+1	; 0x01
     644:	18 96       	adiw	r26, 0x08	; 8
     646:	0c 91       	ld	r16, X
     648:	a8 e6       	ldi	r26, 0x68	; 104
     64a:	b0 e0       	ldi	r27, 0x00	; 0
     64c:	cc 91       	ld	r28, X
     64e:	21 e0       	ldi	r18, 0x01	; 1
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	40 e0       	ldi	r20, 0x00	; 0
     654:	50 e0       	ldi	r21, 0x00	; 0
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     662:	2c 2b       	or	r18, r28
     664:	2c 93       	st	X, r18
     666:	02 81       	ldd	r16, Z+2	; 0x02
     668:	01 90       	ld	r0, Z+
     66a:	f0 81       	ld	r31, Z
     66c:	e0 2d       	mov	r30, r0
     66e:	06 80       	ldd	r0, Z+6	; 0x06
     670:	f7 81       	ldd	r31, Z+7	; 0x07
     672:	e0 2d       	mov	r30, r0
     674:	a0 81       	ld	r26, Z
     676:	21 e0       	ldi	r18, 0x01	; 1
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	40 e0       	ldi	r20, 0x00	; 0
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	60 e0       	ldi	r22, 0x00	; 0
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     68a:	2a 2b       	or	r18, r26
     68c:	20 83       	st	Z, r18
     68e:	cf 91       	pop	r28
     690:	0f 91       	pop	r16
     692:	08 95       	ret

00000694 <_ZNK6driver4GPIO4readEv>:
     694:	0f 93       	push	r16
     696:	dc 01       	movw	r26, r24
     698:	12 96       	adiw	r26, 0x02	; 2
     69a:	0c 91       	ld	r16, X
     69c:	12 97       	sbiw	r26, 0x02	; 2
     69e:	ed 91       	ld	r30, X+
     6a0:	fc 91       	ld	r31, X
     6a2:	04 80       	ldd	r0, Z+4	; 0x04
     6a4:	f5 81       	ldd	r31, Z+5	; 0x05
     6a6:	e0 2d       	mov	r30, r0
     6a8:	20 81       	ld	r18, Z
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e0       	ldi	r20, 0x00	; 0
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__lshrdi3>
     6bc:	82 2f       	mov	r24, r18
     6be:	81 70       	andi	r24, 0x01	; 1
     6c0:	0f 91       	pop	r16
     6c2:	08 95       	ret

000006c4 <_ZNK6driver4GPIO11addCallbackEPFvvE>:
     6c4:	dc 01       	movw	r26, r24
     6c6:	ed 91       	ld	r30, X+
     6c8:	fc 91       	ld	r31, X
     6ca:	82 81       	ldd	r24, Z+2	; 0x02
     6cc:	93 81       	ldd	r25, Z+3	; 0x03
     6ce:	85 32       	cpi	r24, 0x25	; 37
     6d0:	91 05       	cpc	r25, r1
     6d2:	39 f4       	brne	.+14     	; 0x6e2 <_ZNK6driver4GPIO11addCallbackEPFvvE+0x1e>
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	50 e0       	ldi	r21, 0x00	; 0
     6d8:	8c e3       	ldi	r24, 0x3C	; 60
     6da:	91 e0       	ldi	r25, 0x01	; 1
     6dc:	0e 94 4f 02 	call	0x49e	; 0x49e <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     6e0:	08 95       	ret
     6e2:	88 32       	cpi	r24, 0x28	; 40
     6e4:	91 05       	cpc	r25, r1
     6e6:	39 f4       	brne	.+14     	; 0x6f6 <_ZNK6driver4GPIO11addCallbackEPFvvE+0x32>
     6e8:	41 e0       	ldi	r20, 0x01	; 1
     6ea:	50 e0       	ldi	r21, 0x00	; 0
     6ec:	8c e3       	ldi	r24, 0x3C	; 60
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	0e 94 4f 02 	call	0x49e	; 0x49e <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     6f4:	08 95       	ret
     6f6:	8b 97       	sbiw	r24, 0x2b	; 43
     6f8:	39 f4       	brne	.+14     	; 0x708 <_ZNK6driver4GPIO11addCallbackEPFvvE+0x44>
     6fa:	42 e0       	ldi	r20, 0x02	; 2
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	8c e3       	ldi	r24, 0x3C	; 60
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	0e 94 4f 02 	call	0x49e	; 0x49e <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
     706:	08 95       	ret
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	08 95       	ret

0000070c <_ZN6driver4GPIO24enableInterruptsOnIoPortENS0_6IoPortE>:
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	78 94       	sei
     712:	e8 e6       	ldi	r30, 0x68	; 104
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	a0 81       	ld	r26, Z
     718:	8c 01       	movw	r16, r24
     71a:	11 27       	eor	r17, r17
     71c:	21 e0       	ldi	r18, 0x01	; 1
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	50 e0       	ldi	r21, 0x00	; 0
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     730:	2a 2b       	or	r18, r26
     732:	20 83       	st	Z, r18
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	08 95       	ret

0000073a <_ZN6driver4GPIO24enableInterruptsOnIoPortEv>:
     73a:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK6driver4GPIO6ioPortEv>
     73e:	0e 94 86 03 	call	0x70c	; 0x70c <_ZN6driver4GPIO24enableInterruptsOnIoPortENS0_6IoPortE>
     742:	08 95       	ret

00000744 <_ZN6driver4GPIO25disableInterruptsOnIoPortENS0_6IoPortE>:
     744:	0f 93       	push	r16
     746:	1f 93       	push	r17
     748:	a8 e6       	ldi	r26, 0x68	; 104
     74a:	b0 e0       	ldi	r27, 0x00	; 0
     74c:	ec 91       	ld	r30, X
     74e:	8c 01       	movw	r16, r24
     750:	11 27       	eor	r17, r17
     752:	21 e0       	ldi	r18, 0x01	; 1
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	40 e0       	ldi	r20, 0x00	; 0
     758:	50 e0       	ldi	r21, 0x00	; 0
     75a:	60 e0       	ldi	r22, 0x00	; 0
     75c:	70 e0       	ldi	r23, 0x00	; 0
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     766:	20 95       	com	r18
     768:	e2 23       	and	r30, r18
     76a:	ec 93       	st	X, r30
     76c:	1f 91       	pop	r17
     76e:	0f 91       	pop	r16
     770:	08 95       	ret

00000772 <_ZN6driver4GPIO25disableInterruptsOnIoPortEv>:
     772:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK6driver4GPIO6ioPortEv>
     776:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN6driver4GPIO25disableInterruptsOnIoPortENS0_6IoPortE>
     77a:	08 95       	ret

0000077c <_ZN6driver4GPIO16setIoRegPointersEh>:
     77c:	68 30       	cpi	r22, 0x08	; 8
     77e:	38 f4       	brcc	.+14     	; 0x78e <_ZN6driver4GPIO16setIoRegPointersEh+0x12>
     780:	26 e0       	ldi	r18, 0x06	; 6
     782:	31 e0       	ldi	r19, 0x01	; 1
     784:	fc 01       	movw	r30, r24
     786:	31 83       	std	Z+1, r19	; 0x01
     788:	20 83       	st	Z, r18
     78a:	62 83       	std	Z+2, r22	; 0x02
     78c:	08 95       	ret
     78e:	28 ef       	ldi	r18, 0xF8	; 248
     790:	26 0f       	add	r18, r22
     792:	26 30       	cpi	r18, 0x06	; 6
     794:	38 f4       	brcc	.+14     	; 0x7a4 <_ZN6driver4GPIO16setIoRegPointersEh+0x28>
     796:	41 e1       	ldi	r20, 0x11	; 17
     798:	51 e0       	ldi	r21, 0x01	; 1
     79a:	fc 01       	movw	r30, r24
     79c:	51 83       	std	Z+1, r21	; 0x01
     79e:	40 83       	st	Z, r20
     7a0:	22 83       	std	Z+2, r18	; 0x02
     7a2:	08 95       	ret
     7a4:	6e 50       	subi	r22, 0x0E	; 14
     7a6:	66 30       	cpi	r22, 0x06	; 6
     7a8:	30 f4       	brcc	.+12     	; 0x7b6 <_ZN6driver4GPIO16setIoRegPointersEh+0x3a>
     7aa:	26 e0       	ldi	r18, 0x06	; 6
     7ac:	31 e0       	ldi	r19, 0x01	; 1
     7ae:	fc 01       	movw	r30, r24
     7b0:	31 83       	std	Z+1, r19	; 0x01
     7b2:	20 83       	st	Z, r18
     7b4:	62 83       	std	Z+2, r22	; 0x02
     7b6:	08 95       	ret

000007b8 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE>:
     7b8:	0f 93       	push	r16
     7ba:	61 30       	cpi	r22, 0x01	; 1
     7bc:	71 05       	cpc	r23, r1
     7be:	b9 f4       	brne	.+46     	; 0x7ee <_ZN6driver4GPIO12setDirectionENS0_9DirectionE+0x36>
     7c0:	dc 01       	movw	r26, r24
     7c2:	12 96       	adiw	r26, 0x02	; 2
     7c4:	0c 91       	ld	r16, X
     7c6:	12 97       	sbiw	r26, 0x02	; 2
     7c8:	ed 91       	ld	r30, X+
     7ca:	fc 91       	ld	r31, X
     7cc:	02 80       	ldd	r0, Z+2	; 0x02
     7ce:	f3 81       	ldd	r31, Z+3	; 0x03
     7d0:	e0 2d       	mov	r30, r0
     7d2:	a0 81       	ld	r26, Z
     7d4:	21 e0       	ldi	r18, 0x01	; 1
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     7e8:	2a 2b       	or	r18, r26
     7ea:	20 83       	st	Z, r18
     7ec:	18 c0       	rjmp	.+48     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7ee:	62 30       	cpi	r22, 0x02	; 2
     7f0:	71 05       	cpc	r23, r1
     7f2:	a9 f4       	brne	.+42     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f4:	fc 01       	movw	r30, r24
     7f6:	02 81       	ldd	r16, Z+2	; 0x02
     7f8:	01 90       	ld	r0, Z+
     7fa:	f0 81       	ld	r31, Z
     7fc:	e0 2d       	mov	r30, r0
     7fe:	01 90       	ld	r0, Z+
     800:	f0 81       	ld	r31, Z
     802:	e0 2d       	mov	r30, r0
     804:	a0 81       	ld	r26, Z
     806:	21 e0       	ldi	r18, 0x01	; 1
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	50 e0       	ldi	r21, 0x00	; 0
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     81a:	2a 2b       	or	r18, r26
     81c:	20 83       	st	Z, r18
     81e:	0f 91       	pop	r16
     820:	08 95       	ret

00000822 <_ZN6driver4GPIO4initEhNS0_9DirectionE>:
     822:	4f 92       	push	r4
     824:	5f 92       	push	r5
     826:	6f 92       	push	r6
     828:	7f 92       	push	r7
     82a:	8f 92       	push	r8
     82c:	9f 92       	push	r9
     82e:	af 92       	push	r10
     830:	bf 92       	push	r11
     832:	cf 92       	push	r12
     834:	df 92       	push	r13
     836:	ef 92       	push	r14
     838:	ff 92       	push	r15
     83a:	0f 93       	push	r16
     83c:	dc 01       	movw	r26, r24
     83e:	e6 2f       	mov	r30, r22
     840:	7a 01       	movw	r14, r20
     842:	64 31       	cpi	r22, 0x14	; 20
     844:	d8 f4       	brcc	.+54     	; 0x87c <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5a>
     846:	64 31       	cpi	r22, 0x14	; 20
     848:	b8 f4       	brcc	.+46     	; 0x878 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x56>
     84a:	40 91 38 01 	lds	r20, 0x0138	; 0x800138 <__data_end>
     84e:	50 91 39 01 	lds	r21, 0x0139	; 0x800139 <__data_end+0x1>
     852:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <__data_end+0x2>
     856:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <__data_end+0x3>
     85a:	3a 01       	movw	r6, r20
     85c:	4b 01       	movw	r8, r22
     85e:	24 2f       	mov	r18, r20
     860:	37 2d       	mov	r19, r7
     862:	48 2d       	mov	r20, r8
     864:	59 2d       	mov	r21, r9
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	80 e0       	ldi	r24, 0x00	; 0
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 2f       	mov	r16, r30
     870:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__lshrdi3>
     874:	21 70       	andi	r18, 0x01	; 1
     876:	03 c0       	rjmp	.+6      	; 0x87e <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5c>
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	01 c0       	rjmp	.+2      	; 0x87e <_ZN6driver4GPIO4initEhNS0_9DirectionE+0x5c>
     87c:	21 e0       	ldi	r18, 0x01	; 1
     87e:	21 11       	cpse	r18, r1
     880:	29 c0       	rjmp	.+82     	; 0x8d4 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0xb2>
     882:	67 01       	movw	r12, r14
     884:	0e 2f       	mov	r16, r30
     886:	7d 01       	movw	r14, r26
     888:	6e 2f       	mov	r22, r30
     88a:	cd 01       	movw	r24, r26
     88c:	0e 94 be 03 	call	0x77c	; 0x77c <_ZN6driver4GPIO16setIoRegPointersEh>
     890:	b6 01       	movw	r22, r12
     892:	c7 01       	movw	r24, r14
     894:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN6driver4GPIO12setDirectionENS0_9DirectionE>
     898:	e8 e3       	ldi	r30, 0x38	; 56
     89a:	f1 e0       	ldi	r31, 0x01	; 1
     89c:	40 80       	ld	r4, Z
     89e:	51 80       	ldd	r5, Z+1	; 0x01
     8a0:	62 80       	ldd	r6, Z+2	; 0x02
     8a2:	73 80       	ldd	r7, Z+3	; 0x03
     8a4:	21 e0       	ldi	r18, 0x01	; 1
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	40 e0       	ldi	r20, 0x00	; 0
     8aa:	50 e0       	ldi	r21, 0x00	; 0
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
     8b8:	82 2e       	mov	r8, r18
     8ba:	93 2e       	mov	r9, r19
     8bc:	a4 2e       	mov	r10, r20
     8be:	b5 2e       	mov	r11, r21
     8c0:	84 28       	or	r8, r4
     8c2:	95 28       	or	r9, r5
     8c4:	a6 28       	or	r10, r6
     8c6:	b7 28       	or	r11, r7
     8c8:	80 82       	st	Z, r8
     8ca:	91 82       	std	Z+1, r9	; 0x01
     8cc:	a2 82       	std	Z+2, r10	; 0x02
     8ce:	b3 82       	std	Z+3, r11	; 0x03
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	01 c0       	rjmp	.+2      	; 0x8d6 <_ZN6driver4GPIO4initEhNS0_9DirectionE+0xb4>
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	0f 91       	pop	r16
     8d8:	ff 90       	pop	r15
     8da:	ef 90       	pop	r14
     8dc:	df 90       	pop	r13
     8de:	cf 90       	pop	r12
     8e0:	bf 90       	pop	r11
     8e2:	af 90       	pop	r10
     8e4:	9f 90       	pop	r9
     8e6:	8f 90       	pop	r8
     8e8:	7f 90       	pop	r7
     8ea:	6f 90       	pop	r6
     8ec:	5f 90       	pop	r5
     8ee:	4f 90       	pop	r4
     8f0:	08 95       	ret

000008f2 <_ZN6driver4GPIOC1EhNS0_9DirectionE>:
     8f2:	fc 01       	movw	r30, r24
     8f4:	11 82       	std	Z+1, r1	; 0x01
     8f6:	10 82       	st	Z, r1
     8f8:	12 82       	std	Z+2, r1	; 0x02
     8fa:	0e 94 11 04 	call	0x822	; 0x822 <_ZN6driver4GPIO4initEhNS0_9DirectionE>
     8fe:	08 95       	ret

00000900 <__vector_3>:
     900:	1f 92       	push	r1
     902:	0f 92       	push	r0
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	0f 92       	push	r0
     908:	11 24       	eor	r1, r1
     90a:	2f 93       	push	r18
     90c:	3f 93       	push	r19
     90e:	4f 93       	push	r20
     910:	5f 93       	push	r21
     912:	6f 93       	push	r22
     914:	7f 93       	push	r23
     916:	8f 93       	push	r24
     918:	9f 93       	push	r25
     91a:	af 93       	push	r26
     91c:	bf 93       	push	r27
     91e:	ef 93       	push	r30
     920:	ff 93       	push	r31
     922:	60 e0       	ldi	r22, 0x00	; 0
     924:	70 e0       	ldi	r23, 0x00	; 0
     926:	8c e3       	ldi	r24, 0x3C	; 60
     928:	91 e0       	ldi	r25, 0x01	; 1
     92a:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     92e:	ff 91       	pop	r31
     930:	ef 91       	pop	r30
     932:	bf 91       	pop	r27
     934:	af 91       	pop	r26
     936:	9f 91       	pop	r25
     938:	8f 91       	pop	r24
     93a:	7f 91       	pop	r23
     93c:	6f 91       	pop	r22
     93e:	5f 91       	pop	r21
     940:	4f 91       	pop	r20
     942:	3f 91       	pop	r19
     944:	2f 91       	pop	r18
     946:	0f 90       	pop	r0
     948:	0f be       	out	0x3f, r0	; 63
     94a:	0f 90       	pop	r0
     94c:	1f 90       	pop	r1
     94e:	18 95       	reti

00000950 <__vector_4>:
     950:	1f 92       	push	r1
     952:	0f 92       	push	r0
     954:	0f b6       	in	r0, 0x3f	; 63
     956:	0f 92       	push	r0
     958:	11 24       	eor	r1, r1
     95a:	2f 93       	push	r18
     95c:	3f 93       	push	r19
     95e:	4f 93       	push	r20
     960:	5f 93       	push	r21
     962:	6f 93       	push	r22
     964:	7f 93       	push	r23
     966:	8f 93       	push	r24
     968:	9f 93       	push	r25
     96a:	af 93       	push	r26
     96c:	bf 93       	push	r27
     96e:	ef 93       	push	r30
     970:	ff 93       	push	r31
     972:	61 e0       	ldi	r22, 0x01	; 1
     974:	70 e0       	ldi	r23, 0x00	; 0
     976:	8c e3       	ldi	r24, 0x3C	; 60
     978:	91 e0       	ldi	r25, 0x01	; 1
     97a:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     97e:	ff 91       	pop	r31
     980:	ef 91       	pop	r30
     982:	bf 91       	pop	r27
     984:	af 91       	pop	r26
     986:	9f 91       	pop	r25
     988:	8f 91       	pop	r24
     98a:	7f 91       	pop	r23
     98c:	6f 91       	pop	r22
     98e:	5f 91       	pop	r21
     990:	4f 91       	pop	r20
     992:	3f 91       	pop	r19
     994:	2f 91       	pop	r18
     996:	0f 90       	pop	r0
     998:	0f be       	out	0x3f, r0	; 63
     99a:	0f 90       	pop	r0
     99c:	1f 90       	pop	r1
     99e:	18 95       	reti

000009a0 <__vector_5>:
     9a0:	1f 92       	push	r1
     9a2:	0f 92       	push	r0
     9a4:	0f b6       	in	r0, 0x3f	; 63
     9a6:	0f 92       	push	r0
     9a8:	11 24       	eor	r1, r1
     9aa:	2f 93       	push	r18
     9ac:	3f 93       	push	r19
     9ae:	4f 93       	push	r20
     9b0:	5f 93       	push	r21
     9b2:	6f 93       	push	r22
     9b4:	7f 93       	push	r23
     9b6:	8f 93       	push	r24
     9b8:	9f 93       	push	r25
     9ba:	af 93       	push	r26
     9bc:	bf 93       	push	r27
     9be:	ef 93       	push	r30
     9c0:	ff 93       	push	r31
     9c2:	62 e0       	ldi	r22, 0x02	; 2
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	8c e3       	ldi	r24, 0x3C	; 60
     9c8:	91 e0       	ldi	r25, 0x01	; 1
     9ca:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
     9ce:	ff 91       	pop	r31
     9d0:	ef 91       	pop	r30
     9d2:	bf 91       	pop	r27
     9d4:	af 91       	pop	r26
     9d6:	9f 91       	pop	r25
     9d8:	8f 91       	pop	r24
     9da:	7f 91       	pop	r23
     9dc:	6f 91       	pop	r22
     9de:	5f 91       	pop	r21
     9e0:	4f 91       	pop	r20
     9e2:	3f 91       	pop	r19
     9e4:	2f 91       	pop	r18
     9e6:	0f 90       	pop	r0
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	0f 90       	pop	r0
     9ec:	1f 90       	pop	r1
     9ee:	18 95       	reti

000009f0 <_ZN9container5ArrayIPFvvELj3EEC1Ev>:
     9f0:	26 e0       	ldi	r18, 0x06	; 6
     9f2:	fc 01       	movw	r30, r24
     9f4:	11 92       	st	Z+, r1
     9f6:	2a 95       	dec	r18
     9f8:	e9 f7       	brne	.-6      	; 0x9f4 <_ZN9container5ArrayIPFvvELj3EEC1Ev+0x4>
     9fa:	08 95       	ret

000009fc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>:
     9fc:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <_ZN9container5ArrayIPFvvELj3EEC1Ev>
     a00:	08 95       	ret

00000a02 <_Z41__static_initialization_and_destruction_0ii>:
ISR (PCINT2_vect) 
{
    callbacks.call(CallbackIndex::PortD);
}

} // namespace driver
     a02:	01 97       	sbiw	r24, 0x01	; 1
     a04:	39 f4       	brne	.+14     	; 0xa14 <_Z41__static_initialization_and_destruction_0ii+0x12>
     a06:	6f 3f       	cpi	r22, 0xFF	; 255
     a08:	7f 4f       	sbci	r23, 0xFF	; 255
     a0a:	21 f4       	brne	.+8      	; 0xa14 <_Z41__static_initialization_and_destruction_0ii+0x12>

namespace
{

constexpr uint8_t NumIoPorts{3U}; 
container::CallbackArray<NumIoPorts> callbacks{};
     a0c:	8c e3       	ldi	r24, 0x3C	; 60
     a0e:	91 e0       	ldi	r25, 0x01	; 1
     a10:	0e 94 fe 04 	call	0x9fc	; 0x9fc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>
     a14:	08 95       	ret

00000a16 <_GLOBAL__sub_I__ZN6driver4GPIO8myHwPinBE>:
ISR (PCINT2_vect) 
{
    callbacks.call(CallbackIndex::PortD);
}

} // namespace driver
     a16:	6f ef       	ldi	r22, 0xFF	; 255
     a18:	7f ef       	ldi	r23, 0xFF	; 255
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 01 05 	call	0xa02	; 0xa02 <_Z41__static_initialization_and_destruction_0ii>
     a22:	08 95       	ret

00000a24 <_GLOBAL__sub_D__ZN6driver4GPIO8myHwPinBE>:
     a24:	6f ef       	ldi	r22, 0xFF	; 255
     a26:	7f ef       	ldi	r23, 0xFF	; 255
     a28:	80 e0       	ldi	r24, 0x00	; 0
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	0e 94 01 05 	call	0xa02	; 0xa02 <_Z41__static_initialization_and_destruction_0ii>
     a30:	08 95       	ret

00000a32 <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>:
        utils::round<uint16_t>(F_CPU / 16.0 * baudRateKbps);
}

// -----------------------------------------------------------------------------
void printChar(const char c)
{
     a32:	0f 93       	push	r16
     a34:	e8 2f       	mov	r30, r24
template <typename T>
constexpr bool read(const volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    return reg & (1ULL << bit);
     a36:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	40 e0       	ldi	r20, 0x00	; 0
     a3e:	50 e0       	ldi	r21, 0x00	; 0
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	05 e0       	ldi	r16, 0x05	; 5
     a4a:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__lshrdi3>
     a4e:	21 70       	andi	r18, 0x01	; 1
    while (utils::read(UCSR0A, UDRE0) == 0U);
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e0       	ldi	r20, 0x00	; 0
     a54:	50 e0       	ldi	r21, 0x00	; 0
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	a0 e0       	ldi	r26, 0x00	; 0
     a60:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__cmpdi2_s8>
     a64:	41 f3       	breq	.-48     	; 0xa36 <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc+0x4>
    UDR0 = c;
     a66:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     a6a:	0f 91       	pop	r16
     a6c:	08 95       	ret

00000a6e <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc>:

// -----------------------------------------------------------------------------
void print(const char* s)
{
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
     a72:	ec 01       	movw	r28, r24
    for (const char* i{s}; *i; ++i)
     a74:	88 81       	ld	r24, Y
     a76:	88 23       	and	r24, r24
     a78:	51 f0       	breq	.+20     	; 0xa8e <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc+0x20>
    {
        printChar(*i);
     a7a:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>

        if (*i == detail::CarriageReturn)
     a7e:	88 81       	ld	r24, Y
     a80:	8d 30       	cpi	r24, 0x0D	; 13
     a82:	19 f4       	brne	.+6      	; 0xa8a <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc+0x1c>
        {
            printChar(detail::NewLine);
     a84:	8a e0       	ldi	r24, 0x0A	; 10
     a86:	0e 94 19 05 	call	0xa32	; 0xa32 <_ZN6driver6serial12_GLOBAL__N_16detail9printCharEc>
}

// -----------------------------------------------------------------------------
void print(const char* s)
{
    for (const char* i{s}; *i; ++i)
     a8a:	21 96       	adiw	r28, 0x01	; 1
     a8c:	f3 cf       	rjmp	.-26     	; 0xa74 <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc+0x6>
        if (*i == detail::CarriageReturn)
        {
            printChar(detail::NewLine);
        }
    }
}
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	08 95       	ret

00000a94 <_ZN6driver6serial12_GLOBAL__N_14initEm>:
// -----------------------------------------------------------------------------
void init(const uint32_t baudRateKbps)
{
    static bool serialInitialized{false};

    if (!serialInitialized)
     a94:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <_ZZN6driver6serial12_GLOBAL__N_14initEmE17serialInitialized>
     a98:	21 11       	cpse	r18, r1
     a9a:	30 c0       	rjmp	.+96     	; 0xafc <_ZN6driver6serial12_GLOBAL__N_14initEm+0x68>
template <typename T>
constexpr void set(volatile T& reg, const uint8_t bit)  
{
    static_assert(type_traits::is_unsigned<T>::value, 
        "Invalid data type used for bit manipulation!");
    reg |= (1ULL << bit);
     a9c:	e1 ec       	ldi	r30, 0xC1	; 193
     a9e:	f0 e0       	ldi	r31, 0x00	; 0
     aa0:	20 81       	ld	r18, Z
     aa2:	28 60       	ori	r18, 0x08	; 8
     aa4:	20 83       	st	Z, r18
     aa6:	e2 ec       	ldi	r30, 0xC2	; 194
     aa8:	f0 e0       	ldi	r31, 0x00	; 0
     aaa:	20 81       	ld	r18, Z
     aac:	22 60       	ori	r18, 0x02	; 2
     aae:	20 83       	st	Z, r18
     ab0:	20 81       	ld	r18, Z
     ab2:	24 60       	ori	r18, 0x04	; 4
     ab4:	20 83       	st	Z, r18

// -----------------------------------------------------------------------------
constexpr uint16_t getBaudRateValue(const uint32_t baudRateKbps)
{
    return baudRateKbps == 9600U ? 103U :
        utils::round<uint16_t>(F_CPU / 16.0 * baudRateKbps);
     ab6:	60 38       	cpi	r22, 0x80	; 128
     ab8:	25 e2       	ldi	r18, 0x25	; 37
     aba:	72 07       	cpc	r23, r18
     abc:	81 05       	cpc	r24, r1
     abe:	91 05       	cpc	r25, r1
     ac0:	89 f0       	breq	.+34     	; 0xae4 <_ZN6driver6serial12_GLOBAL__N_14initEm+0x50>
     ac2:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__floatunsisf>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	34 e2       	ldi	r19, 0x24	; 36
     aca:	44 e7       	ldi	r20, 0x74	; 116
     acc:	59 e4       	ldi	r21, 0x49	; 73
     ace:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__mulsf3>
constexpr T1 round(const T2 value) 
{
    static_assert(type_traits::is_integral<T1>::value && 
                  type_traits::is_arithmetic<T2>::value, 
                  "Rounding only possible for arithmetic types!");
    return static_cast<T1>(value + 0.5);
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	40 e0       	ldi	r20, 0x00	; 0
     ad8:	5f e3       	ldi	r21, 0x3F	; 63
     ada:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
     ade:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <__fixunssfsi>
     ae2:	02 c0       	rjmp	.+4      	; 0xae8 <_ZN6driver6serial12_GLOBAL__N_14initEm+0x54>
     ae4:	67 e6       	ldi	r22, 0x67	; 103
     ae6:	70 e0       	ldi	r23, 0x00	; 0

    if (!serialInitialized)
    {
        utils::set(UCSR0B, TXEN0);
        utils::set(UCSR0C, UCSZ00, UCSZ01);
        UBRR0 = detail::getBaudRateValue(baudRateKbps);
     ae8:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     aec:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
        UDR0 = detail::CarriageReturn;
     af0:	8d e0       	ldi	r24, 0x0D	; 13
     af2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
        serialInitialized = true;
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_ZZN6driver6serial12_GLOBAL__N_14initEmE17serialInitialized>
     afc:	08 95       	ret

00000afe <_ZN12_GLOBAL__N_112inputVoltageEh>:
 *
 * @return The input voltage in volts.
 ********************************************************************************/
double inputVoltage(const uint8_t pin) 
{
    return adc::getDutyCycle(pin) * Vcc;
     afe:	0e 94 b3 00 	call	0x166	; 0x166 <_ZN6driver3adc12getDutyCycleEh>
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 ea       	ldi	r20, 0xA0	; 160
     b08:	50 e4       	ldi	r21, 0x40	; 64
     b0a:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__mulsf3>
}
     b0e:	08 95       	ret

00000b10 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_>:
    }
}

// -----------------------------------------------------------------------------
template <typename... Args>
bool printf(const char* format, const Args&... args)
     b10:	ef 92       	push	r14
     b12:	ff 92       	push	r15
     b14:	0f 93       	push	r16
     b16:	1f 93       	push	r17
     b18:	cf 93       	push	r28
     b1a:	df 93       	push	r29
{
    if (format == nullptr) { return false; }
     b1c:	00 97       	sbiw	r24, 0x00	; 0
     b1e:	d1 f1       	breq	.+116    	; 0xb94 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x84>
     b20:	8b 01       	movw	r16, r22
     b22:	ec 01       	movw	r28, r24
    if (sizeof...(args) > 0)
    {
        const int length{snprintf(nullptr, 0, format, nullptr)};
     b24:	1f 92       	push	r1
     b26:	1f 92       	push	r1
     b28:	df 93       	push	r29
     b2a:	cf 93       	push	r28
     b2c:	1f 92       	push	r1
     b2e:	1f 92       	push	r1
     b30:	1f 92       	push	r1
     b32:	1f 92       	push	r1
     b34:	0e 94 35 11 	call	0x226a	; 0x226a <snprintf>
        char* buffer{(char*)malloc(sizeof(char) * length)};
     b38:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <malloc>
     b3c:	7c 01       	movw	r14, r24
        if (!buffer) { return false; }
     b3e:	ed b7       	in	r30, 0x3d	; 61
     b40:	fe b7       	in	r31, 0x3e	; 62
     b42:	38 96       	adiw	r30, 0x08	; 8
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	fe bf       	out	0x3e, r31	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	ed bf       	out	0x3d, r30	; 61
     b4e:	00 97       	sbiw	r24, 0x00	; 0
     b50:	19 f1       	breq	.+70     	; 0xb98 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x88>
        buffer[0U] = '\0';
     b52:	fc 01       	movw	r30, r24
     b54:	10 82       	st	Z, r1
        sprintf(buffer, format, args...);
     b56:	f8 01       	movw	r30, r16
     b58:	80 81       	ld	r24, Z
     b5a:	91 81       	ldd	r25, Z+1	; 0x01
     b5c:	22 81       	ldd	r18, Z+2	; 0x02
     b5e:	33 81       	ldd	r19, Z+3	; 0x03
     b60:	3f 93       	push	r19
     b62:	2f 93       	push	r18
     b64:	9f 93       	push	r25
     b66:	8f 93       	push	r24
     b68:	df 93       	push	r29
     b6a:	cf 93       	push	r28
     b6c:	ff 92       	push	r15
     b6e:	ef 92       	push	r14
     b70:	0e 94 65 11 	call	0x22ca	; 0x22ca <sprintf>
        detail::print(buffer);
     b74:	c7 01       	movw	r24, r14
     b76:	0e 94 37 05 	call	0xa6e	; 0xa6e <_ZN6driver6serial12_GLOBAL__N_16detail5printEPKc>
        free(buffer);
     b7a:	c7 01       	movw	r24, r14
     b7c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <free>
    }
    else
    {
        detail::print(format);
    }
    return true;
     b80:	ed b7       	in	r30, 0x3d	; 61
     b82:	fe b7       	in	r31, 0x3e	; 62
     b84:	38 96       	adiw	r30, 0x08	; 8
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	fe bf       	out	0x3e, r31	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	ed bf       	out	0x3d, r30	; 61
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	03 c0       	rjmp	.+6      	; 0xb9a <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x8a>

// -----------------------------------------------------------------------------
template <typename... Args>
bool printf(const char* format, const Args&... args)
{
    if (format == nullptr) { return false; }
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	01 c0       	rjmp	.+2      	; 0xb9a <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_+0x8a>
    if (sizeof...(args) > 0)
    {
        const int length{snprintf(nullptr, 0, format, nullptr)};
        char* buffer{(char*)malloc(sizeof(char) * length)};
        if (!buffer) { return false; }
     b98:	80 e0       	ldi	r24, 0x00	; 0
    else
    {
        detail::print(format);
    }
    return true;
}
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	1f 91       	pop	r17
     ba0:	0f 91       	pop	r16
     ba2:	ff 90       	pop	r15
     ba4:	ef 90       	pop	r14
     ba6:	08 95       	ret

00000ba8 <_ZN12_GLOBAL__N_118predictTemperatureEv>:

/**
 * @brief Predicts the temperature based on the input voltage.
 */
void predictTemperature()
{
     ba8:	cf 92       	push	r12
     baa:	df 92       	push	r13
     bac:	ef 92       	push	r14
     bae:	ff 92       	push	r15
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
     bb4:	cd b7       	in	r28, 0x3d	; 61
     bb6:	de b7       	in	r29, 0x3e	; 62
     bb8:	28 97       	sbiw	r28, 0x08	; 8
     bba:	0f b6       	in	r0, 0x3f	; 63
     bbc:	f8 94       	cli
     bbe:	de bf       	out	0x3e, r29	; 62
     bc0:	0f be       	out	0x3f, r0	; 63
     bc2:	cd bf       	out	0x3d, r28	; 61
    const auto input{inputVoltage(tempSensorPin)};
     bc4:	82 e0       	ldi	r24, 0x02	; 2
     bc6:	0e 94 7f 05 	call	0xafe	; 0xafe <_ZN12_GLOBAL__N_112inputVoltageEh>
     bca:	69 83       	std	Y+1, r22	; 0x01
     bcc:	7a 83       	std	Y+2, r23	; 0x02
     bce:	8b 83       	std	Y+3, r24	; 0x03
     bd0:	9c 83       	std	Y+4, r25	; 0x04
    
    const auto prediction{linReg.predict(input)};
     bd2:	be 01       	movw	r22, r28
     bd4:	6f 5f       	subi	r22, 0xFF	; 255
     bd6:	7f 4f       	sbci	r23, 0xFF	; 255
     bd8:	83 e4       	ldi	r24, 0x43	; 67
     bda:	91 e0       	ldi	r25, 0x01	; 1
     bdc:	0e 94 c1 00 	call	0x182	; 0x182 <_ZNK2ml6LinReg7predictERKd>
     be0:	6b 01       	movw	r12, r22
     be2:	7c 01       	movw	r14, r24
    const auto temperature{prediction >= 0 ? prediction + 0.5 : prediction - 0.5};
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	a9 01       	movw	r20, r18
     bea:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <__gesf2>
     bee:	88 23       	and	r24, r24
     bf0:	4c f0       	brlt	.+18     	; 0xc04 <_ZN12_GLOBAL__N_118predictTemperatureEv+0x5c>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	40 e0       	ldi	r20, 0x00	; 0
     bf8:	5f e3       	ldi	r21, 0x3F	; 63
     bfa:	c7 01       	movw	r24, r14
     bfc:	b6 01       	movw	r22, r12
     bfe:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
     c02:	08 c0       	rjmp	.+16     	; 0xc14 <_ZN12_GLOBAL__N_118predictTemperatureEv+0x6c>
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	40 e0       	ldi	r20, 0x00	; 0
     c0a:	5f e3       	ldi	r21, 0x3F	; 63
     c0c:	c7 01       	movw	r24, r14
     c0e:	b6 01       	movw	r22, r12
     c10:	0e 94 c5 0c 	call	0x198a	; 0x198a <__subsf3>
     c14:	6d 83       	std	Y+5, r22	; 0x05
     c16:	7e 83       	std	Y+6, r23	; 0x06
     c18:	8f 83       	std	Y+7, r24	; 0x07
     c1a:	98 87       	std	Y+8, r25	; 0x08
    serial::printf("%d ", temperature);
     c1c:	be 01       	movw	r22, r28
     c1e:	6b 5f       	subi	r22, 0xFB	; 251
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	84 e3       	ldi	r24, 0x34	; 52
     c24:	91 e0       	ldi	r25, 0x01	; 1
     c26:	0e 94 88 05 	call	0xb10	; 0xb10 <_ZN6driver6serial12_GLOBAL__N_16printfIJdEEEbPKcDpRKT_>
}
     c2a:	28 96       	adiw	r28, 0x08	; 8
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de bf       	out	0x3e, r29	; 62
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	cd bf       	out	0x3d, r28	; 61
     c36:	df 91       	pop	r29
     c38:	cf 91       	pop	r28
     c3a:	ff 90       	pop	r15
     c3c:	ef 90       	pop	r14
     c3e:	df 90       	pop	r13
     c40:	cf 90       	pop	r12
     c42:	08 95       	ret

00000c44 <_ZN12_GLOBAL__N_123predictionTimerCallbackEv>:
void predictionTimerCallback(void) 
{
    /** @attention Add code to predict the temperature! 
     *             Also remove the Swedish comment. */
    
    predictTemperature();
     c44:	0e 94 d4 05 	call	0xba8	; 0xba8 <_ZN12_GLOBAL__N_118predictTemperatureEv>
    predictionTimer.restart();
     c48:	8f e5       	ldi	r24, 0x5F	; 95
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <_ZN6driver5Timer7restartEv>
     c50:	08 95       	ret

00000c52 <_ZN12_GLOBAL__N_121debounceTimerCallbackEv>:
 * @brief Enables pin change interrupts on the button's I/O port 300 ms after
 *        press or release to reduce the effects of contact bounces.
 ********************************************************************************/
void debounceTimerCallback(void) 
{
    debounceTimer.stop();
     c52:	88 e6       	ldi	r24, 0x68	; 104
     c54:	91 e0       	ldi	r25, 0x01	; 1
     c56:	0e 94 43 0a 	call	0x1486	; 0x1486 <_ZN6driver5Timer4stopEv>
    predictionButton.enableInterruptsOnIoPort();
     c5a:	81 e7       	ldi	r24, 0x71	; 113
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN6driver4GPIO24enableInterruptsOnIoPortEv>
     c62:	08 95       	ret

00000c64 <_ZN12_GLOBAL__N_114buttonCallbackEv>:
 *        Pin change interrupts are disabled for 300 ms on the button's I/O port
 *        to reduce the effects of contact bounces.
 ********************************************************************************/
void buttonCallback(void) 
{
     predictionButton.disableInterruptsOnIoPort();
     c64:	81 e7       	ldi	r24, 0x71	; 113
     c66:	91 e0       	ldi	r25, 0x01	; 1
     c68:	0e 94 b9 03 	call	0x772	; 0x772 <_ZN6driver4GPIO25disableInterruptsOnIoPortEv>
     debounceTimer.start();
     c6c:	88 e6       	ldi	r24, 0x68	; 104
     c6e:	91 e0       	ldi	r25, 0x01	; 1
     c70:	0e 94 1c 0a 	call	0x1438	; 0x1438 <_ZN6driver5Timer5startEv>

     if (predictionButton.read())
     c74:	81 e7       	ldi	r24, 0x71	; 113
     c76:	91 e0       	ldi	r25, 0x01	; 1
     c78:	0e 94 4a 03 	call	0x694	; 0x694 <_ZNK6driver4GPIO4readEv>
     c7c:	88 23       	and	r24, r24
     c7e:	31 f0       	breq	.+12     	; 0xc8c <_ZN12_GLOBAL__N_114buttonCallbackEv+0x28>
     {
         /** @attention Add code to predict the temperature and reset the prediction timer!
          *             Also remove the Swedish comments. */
         
         predictTemperature();      // Predicts temperature
     c80:	0e 94 d4 05 	call	0xba8	; 0xba8 <_ZN12_GLOBAL__N_118predictTemperatureEv>
         predictionTimer.restart(); // Reset the 60 sec timer.
     c84:	8f e5       	ldi	r24, 0x5F	; 95
     c86:	91 e0       	ldi	r25, 0x01	; 1
     c88:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <_ZN6driver5Timer7restartEv>
     c8c:	08 95       	ret

00000c8e <main>:
 *        voltage is supplied. The hardware is interrupt controlled, hence the
 *        while loop is almost empty. If the program gets stuck anywhere, the
 *        watchdog timer won't be reset in time and the program will then restart.
 ********************************************************************************/
int main(void)
{
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
     c92:	00 d0       	rcall	.+0      	; 0xc94 <main+0x6>
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
 * @brief Sets callback routines, enabled pin change interrupt on predictionButton and
 *        enables the watchdog timer in system reset mode.
 ********************************************************************************/
inline void setup(void) 
{
    adc::init();
     c98:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN6driver3adc4initEv>
    serial::init();
     c9c:	60 e8       	ldi	r22, 0x80	; 128
     c9e:	75 e2       	ldi	r23, 0x25	; 37
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 4a 05 	call	0xa94	; 0xa94 <_ZN6driver6serial12_GLOBAL__N_14initEm>

    /** @note Consider using names */
    
    predictionButton.addCallback(buttonCallback);
     ca8:	62 e3       	ldi	r22, 0x32	; 50
     caa:	76 e0       	ldi	r23, 0x06	; 6
     cac:	81 e7       	ldi	r24, 0x71	; 113
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	0e 94 62 03 	call	0x6c4	; 0x6c4 <_ZNK6driver4GPIO11addCallbackEPFvvE>
    debounceTimer.addCallback(debounceTimerCallback);
     cb4:	69 e2       	ldi	r22, 0x29	; 41
     cb6:	76 e0       	ldi	r23, 0x06	; 6
     cb8:	88 e6       	ldi	r24, 0x68	; 104
     cba:	91 e0       	ldi	r25, 0x01	; 1
     cbc:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <_ZNK6driver5Timer11addCallbackEPFvvE>
    predictionTimer.addCallback(predictionTimerCallback);
     cc0:	62 e2       	ldi	r22, 0x22	; 34
     cc2:	76 e0       	ldi	r23, 0x06	; 6
     cc4:	8f e5       	ldi	r24, 0x5F	; 95
     cc6:	91 e0       	ldi	r25, 0x01	; 1
     cc8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <_ZNK6driver5Timer11addCallbackEPFvvE>
    predictionButton.enableInterrupt();
     ccc:	81 e7       	ldi	r24, 0x71	; 113
     cce:	91 e0       	ldi	r25, 0x01	; 1
     cd0:	0e 94 1c 03 	call	0x638	; 0x638 <_ZN6driver4GPIO15enableInterruptEv>
    linReg.train(100);
     cd4:	84 e6       	ldi	r24, 0x64	; 100
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	9a 83       	std	Y+2, r25	; 0x02
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	be 01       	movw	r22, r28
     cde:	6f 5f       	subi	r22, 0xFF	; 255
     ce0:	7f 4f       	sbci	r23, 0xFF	; 255
     ce2:	83 e4       	ldi	r24, 0x43	; 67
     ce4:	91 e0       	ldi	r25, 0x01	; 1
     ce6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <_ZN2ml6LinReg5trainERKi>
    
    watchdog::init(watchdog::Timeout::Timeout1024ms);
     cea:	86 e0       	ldi	r24, 0x06	; 6
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <_ZN6driver8watchdog4initENS0_7TimeoutE>
    watchdog::enableSystemReset();
     cf2:	0e 94 6d 0c 	call	0x18da	; 0x18da <_ZN6driver8watchdog17enableSystemResetEv>
{
    setup();
    
    while (1) 
    {   
        watchdog::reset();
     cf6:	0e 94 66 0c 	call	0x18cc	; 0x18cc <_ZN6driver8watchdog5resetEv>
     cfa:	fd cf       	rjmp	.-6      	; 0xcf6 <main+0x68>

00000cfc <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj>:
}

// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
void Vector<T>::assign(const T (&values)[NumValues], const size_t offset) 
     cfc:	0f 93       	push	r16
     cfe:	1f 93       	push	r17
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
{
    for (size_t i{}; i < NumValues && offset + i < mySize; ++i) 
     d04:	a0 e0       	ldi	r26, 0x00	; 0
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	ab 30       	cpi	r26, 0x0B	; 11
     d0a:	b1 05       	cpc	r27, r1
     d0c:	10 f5       	brcc	.+68     	; 0xd52 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0x56>
     d0e:	9d 01       	movw	r18, r26
     d10:	24 0f       	add	r18, r20
     d12:	35 1f       	adc	r19, r21
     d14:	ec 01       	movw	r28, r24
     d16:	ea 81       	ldd	r30, Y+2	; 0x02
     d18:	fb 81       	ldd	r31, Y+3	; 0x03
     d1a:	2e 17       	cp	r18, r30
     d1c:	3f 07       	cpc	r19, r31
     d1e:	c8 f4       	brcc	.+50     	; 0xd52 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0x56>
    {
        myData[offset + i] = values[i];
     d20:	22 0f       	add	r18, r18
     d22:	33 1f       	adc	r19, r19
     d24:	22 0f       	add	r18, r18
     d26:	33 1f       	adc	r19, r19
     d28:	e8 81       	ld	r30, Y
     d2a:	f9 81       	ldd	r31, Y+1	; 0x01
     d2c:	e2 0f       	add	r30, r18
     d2e:	f3 1f       	adc	r31, r19
     d30:	ed 01       	movw	r28, r26
     d32:	cc 0f       	add	r28, r28
     d34:	dd 1f       	adc	r29, r29
     d36:	cc 0f       	add	r28, r28
     d38:	dd 1f       	adc	r29, r29
     d3a:	c6 0f       	add	r28, r22
     d3c:	d7 1f       	adc	r29, r23
     d3e:	08 81       	ld	r16, Y
     d40:	19 81       	ldd	r17, Y+1	; 0x01
     d42:	2a 81       	ldd	r18, Y+2	; 0x02
     d44:	3b 81       	ldd	r19, Y+3	; 0x03
     d46:	00 83       	st	Z, r16
     d48:	11 83       	std	Z+1, r17	; 0x01
     d4a:	22 83       	std	Z+2, r18	; 0x02
     d4c:	33 83       	std	Z+3, r19	; 0x03
// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
void Vector<T>::assign(const T (&values)[NumValues], const size_t offset) 
{
    for (size_t i{}; i < NumValues && offset + i < mySize; ++i) 
     d4e:	11 96       	adiw	r26, 0x01	; 1
     d50:	db cf       	rjmp	.-74     	; 0xd08 <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj+0xc>
    {
        myData[offset + i] = values[i];
    }
}
     d52:	df 91       	pop	r29
     d54:	cf 91       	pop	r28
     d56:	1f 91       	pop	r17
     d58:	0f 91       	pop	r16
     d5a:	08 95       	ret

00000d5c <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>:
}

// -----------------------------------------------------------------------------
template <typename T>
template <size_t NumValues>
bool Vector<T>::addValues(const T (&values)[NumValues]) 
     d5c:	cf 92       	push	r12
     d5e:	df 92       	push	r13
     d60:	ef 92       	push	r14
     d62:	ff 92       	push	r15
     d64:	1f 93       	push	r17
     d66:	cf 93       	push	r28
     d68:	df 93       	push	r29
     d6a:	ec 01       	movw	r28, r24
     d6c:	6b 01       	movw	r12, r22
{
    const auto offset{mySize};
     d6e:	ea 80       	ldd	r14, Y+2	; 0x02
     d70:	fb 80       	ldd	r15, Y+3	; 0x03
    if (!resize(mySize + NumValues)) { return false; }
     d72:	b7 01       	movw	r22, r14
     d74:	65 5f       	subi	r22, 0xF5	; 245
     d76:	7f 4f       	sbci	r23, 0xFF	; 255
     d78:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZN9container6VectorIdE6resizeEj>
     d7c:	18 2f       	mov	r17, r24
     d7e:	88 23       	and	r24, r24
     d80:	29 f0       	breq	.+10     	; 0xd8c <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd+0x30>
    assign(values, offset);
     d82:	a7 01       	movw	r20, r14
     d84:	b6 01       	movw	r22, r12
     d86:	ce 01       	movw	r24, r28
     d88:	0e 94 7e 06 	call	0xcfc	; 0xcfc <_ZN9container6VectorIdE6assignILj11EEEvRAT__Kdj>
    return true;
}
     d8c:	81 2f       	mov	r24, r17
     d8e:	df 91       	pop	r29
     d90:	cf 91       	pop	r28
     d92:	1f 91       	pop	r17
     d94:	ff 90       	pop	r15
     d96:	ef 90       	pop	r14
     d98:	df 90       	pop	r13
     d9a:	cf 90       	pop	r12
     d9c:	08 95       	ret

00000d9e <_ZN9container6VectorIdEC1IIdddddddddddEEEDpOKT_>:
Vector<T>::Vector(const size_t size) { resize(size); }

// -----------------------------------------------------------------------------
template <typename T>
template <typename... Values>
Vector<T>::Vector(const Values&&... values) 
     d9e:	4f 92       	push	r4
     da0:	5f 92       	push	r5
     da2:	6f 92       	push	r6
     da4:	7f 92       	push	r7
     da6:	8f 92       	push	r8
     da8:	9f 92       	push	r9
     daa:	af 92       	push	r10
     dac:	bf 92       	push	r11
     dae:	cf 92       	push	r12
     db0:	df 92       	push	r13
     db2:	ef 92       	push	r14
     db4:	ff 92       	push	r15
     db6:	0f 93       	push	r16
     db8:	1f 93       	push	r17
     dba:	cf 93       	push	r28
     dbc:	df 93       	push	r29
     dbe:	cd b7       	in	r28, 0x3d	; 61
     dc0:	de b7       	in	r29, 0x3e	; 62
     dc2:	ac 97       	sbiw	r28, 0x2c	; 44
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
     dce:	fc 01       	movw	r30, r24
     dd0:	11 82       	std	Z+1, r1	; 0x01
     dd2:	10 82       	st	Z, r1
     dd4:	13 82       	std	Z+3, r1	; 0x03
     dd6:	12 82       	std	Z+2, r1	; 0x02
{
    const T array[sizeof...(values)]{(values)...};
     dd8:	fb 01       	movw	r30, r22
     dda:	40 80       	ld	r4, Z
     ddc:	51 80       	ldd	r5, Z+1	; 0x01
     dde:	62 80       	ldd	r6, Z+2	; 0x02
     de0:	73 80       	ldd	r7, Z+3	; 0x03
     de2:	49 82       	std	Y+1, r4	; 0x01
     de4:	5a 82       	std	Y+2, r5	; 0x02
     de6:	6b 82       	std	Y+3, r6	; 0x03
     de8:	7c 82       	std	Y+4, r7	; 0x04
     dea:	fa 01       	movw	r30, r20
     dec:	40 81       	ld	r20, Z
     dee:	51 81       	ldd	r21, Z+1	; 0x01
     df0:	62 81       	ldd	r22, Z+2	; 0x02
     df2:	73 81       	ldd	r23, Z+3	; 0x03
     df4:	4d 83       	std	Y+5, r20	; 0x05
     df6:	5e 83       	std	Y+6, r21	; 0x06
     df8:	6f 83       	std	Y+7, r22	; 0x07
     dfa:	78 87       	std	Y+8, r23	; 0x08
     dfc:	f9 01       	movw	r30, r18
     dfe:	40 81       	ld	r20, Z
     e00:	51 81       	ldd	r21, Z+1	; 0x01
     e02:	62 81       	ldd	r22, Z+2	; 0x02
     e04:	73 81       	ldd	r23, Z+3	; 0x03
     e06:	49 87       	std	Y+9, r20	; 0x09
     e08:	5a 87       	std	Y+10, r21	; 0x0a
     e0a:	6b 87       	std	Y+11, r22	; 0x0b
     e0c:	7c 87       	std	Y+12, r23	; 0x0c
     e0e:	f8 01       	movw	r30, r16
     e10:	40 81       	ld	r20, Z
     e12:	51 81       	ldd	r21, Z+1	; 0x01
     e14:	62 81       	ldd	r22, Z+2	; 0x02
     e16:	73 81       	ldd	r23, Z+3	; 0x03
     e18:	4d 87       	std	Y+13, r20	; 0x0d
     e1a:	5e 87       	std	Y+14, r21	; 0x0e
     e1c:	6f 87       	std	Y+15, r22	; 0x0f
     e1e:	78 8b       	std	Y+16, r23	; 0x10
     e20:	f7 01       	movw	r30, r14
     e22:	40 81       	ld	r20, Z
     e24:	51 81       	ldd	r21, Z+1	; 0x01
     e26:	62 81       	ldd	r22, Z+2	; 0x02
     e28:	73 81       	ldd	r23, Z+3	; 0x03
     e2a:	49 8b       	std	Y+17, r20	; 0x11
     e2c:	5a 8b       	std	Y+18, r21	; 0x12
     e2e:	6b 8b       	std	Y+19, r22	; 0x13
     e30:	7c 8b       	std	Y+20, r23	; 0x14
     e32:	f6 01       	movw	r30, r12
     e34:	40 81       	ld	r20, Z
     e36:	51 81       	ldd	r21, Z+1	; 0x01
     e38:	62 81       	ldd	r22, Z+2	; 0x02
     e3a:	73 81       	ldd	r23, Z+3	; 0x03
     e3c:	4d 8b       	std	Y+21, r20	; 0x15
     e3e:	5e 8b       	std	Y+22, r21	; 0x16
     e40:	6f 8b       	std	Y+23, r22	; 0x17
     e42:	78 8f       	std	Y+24, r23	; 0x18
     e44:	f5 01       	movw	r30, r10
     e46:	40 81       	ld	r20, Z
     e48:	51 81       	ldd	r21, Z+1	; 0x01
     e4a:	62 81       	ldd	r22, Z+2	; 0x02
     e4c:	73 81       	ldd	r23, Z+3	; 0x03
     e4e:	49 8f       	std	Y+25, r20	; 0x19
     e50:	5a 8f       	std	Y+26, r21	; 0x1a
     e52:	6b 8f       	std	Y+27, r22	; 0x1b
     e54:	7c 8f       	std	Y+28, r23	; 0x1c
     e56:	f4 01       	movw	r30, r8
     e58:	40 81       	ld	r20, Z
     e5a:	51 81       	ldd	r21, Z+1	; 0x01
     e5c:	62 81       	ldd	r22, Z+2	; 0x02
     e5e:	73 81       	ldd	r23, Z+3	; 0x03
     e60:	4d 8f       	std	Y+29, r20	; 0x1d
     e62:	5e 8f       	std	Y+30, r21	; 0x1e
     e64:	6f 8f       	std	Y+31, r22	; 0x1f
     e66:	78 a3       	std	Y+32, r23	; 0x20
     e68:	21 96       	adiw	r28, 0x01	; 1
     e6a:	ee ad       	ldd	r30, Y+62	; 0x3e
     e6c:	ff ad       	ldd	r31, Y+63	; 0x3f
     e6e:	21 97       	sbiw	r28, 0x01	; 1
     e70:	40 81       	ld	r20, Z
     e72:	51 81       	ldd	r21, Z+1	; 0x01
     e74:	62 81       	ldd	r22, Z+2	; 0x02
     e76:	73 81       	ldd	r23, Z+3	; 0x03
     e78:	49 a3       	std	Y+33, r20	; 0x21
     e7a:	5a a3       	std	Y+34, r21	; 0x22
     e7c:	6b a3       	std	Y+35, r22	; 0x23
     e7e:	7c a3       	std	Y+36, r23	; 0x24
     e80:	23 96       	adiw	r28, 0x03	; 3
     e82:	ee ad       	ldd	r30, Y+62	; 0x3e
     e84:	ff ad       	ldd	r31, Y+63	; 0x3f
     e86:	23 97       	sbiw	r28, 0x03	; 3
     e88:	40 81       	ld	r20, Z
     e8a:	51 81       	ldd	r21, Z+1	; 0x01
     e8c:	62 81       	ldd	r22, Z+2	; 0x02
     e8e:	73 81       	ldd	r23, Z+3	; 0x03
     e90:	4d a3       	std	Y+37, r20	; 0x25
     e92:	5e a3       	std	Y+38, r21	; 0x26
     e94:	6f a3       	std	Y+39, r22	; 0x27
     e96:	78 a7       	std	Y+40, r23	; 0x28
     e98:	25 96       	adiw	r28, 0x05	; 5
     e9a:	ee ad       	ldd	r30, Y+62	; 0x3e
     e9c:	ff ad       	ldd	r31, Y+63	; 0x3f
     e9e:	25 97       	sbiw	r28, 0x05	; 5
     ea0:	40 81       	ld	r20, Z
     ea2:	51 81       	ldd	r21, Z+1	; 0x01
     ea4:	62 81       	ldd	r22, Z+2	; 0x02
     ea6:	73 81       	ldd	r23, Z+3	; 0x03
     ea8:	49 a7       	std	Y+41, r20	; 0x29
     eaa:	5a a7       	std	Y+42, r21	; 0x2a
     eac:	6b a7       	std	Y+43, r22	; 0x2b
     eae:	7c a7       	std	Y+44, r23	; 0x2c
    addValues(array);
     eb0:	be 01       	movw	r22, r28
     eb2:	6f 5f       	subi	r22, 0xFF	; 255
     eb4:	7f 4f       	sbci	r23, 0xFF	; 255
     eb6:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>
}
     eba:	ac 96       	adiw	r28, 0x2c	; 44
     ebc:	0f b6       	in	r0, 0x3f	; 63
     ebe:	f8 94       	cli
     ec0:	de bf       	out	0x3e, r29	; 62
     ec2:	0f be       	out	0x3f, r0	; 63
     ec4:	cd bf       	out	0x3d, r28	; 61
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	ff 90       	pop	r15
     ed0:	ef 90       	pop	r14
     ed2:	df 90       	pop	r13
     ed4:	cf 90       	pop	r12
     ed6:	bf 90       	pop	r11
     ed8:	af 90       	pop	r10
     eda:	9f 90       	pop	r9
     edc:	8f 90       	pop	r8
     ede:	7f 90       	pop	r7
     ee0:	6f 90       	pop	r6
     ee2:	5f 90       	pop	r5
     ee4:	4f 90       	pop	r4
     ee6:	08 95       	ret

00000ee8 <_ZN9container6VectorIdEC1IIiiiiiiiiiiiEEEDpOKT_>:
Vector<T>::Vector(const size_t size) { resize(size); }

// -----------------------------------------------------------------------------
template <typename T>
template <typename... Values>
Vector<T>::Vector(const Values&&... values) 
     ee8:	2f 92       	push	r2
     eea:	3f 92       	push	r3
     eec:	4f 92       	push	r4
     eee:	5f 92       	push	r5
     ef0:	6f 92       	push	r6
     ef2:	7f 92       	push	r7
     ef4:	8f 92       	push	r8
     ef6:	9f 92       	push	r9
     ef8:	af 92       	push	r10
     efa:	bf 92       	push	r11
     efc:	cf 92       	push	r12
     efe:	df 92       	push	r13
     f00:	ef 92       	push	r14
     f02:	ff 92       	push	r15
     f04:	0f 93       	push	r16
     f06:	1f 93       	push	r17
     f08:	cf 93       	push	r28
     f0a:	df 93       	push	r29
     f0c:	cd b7       	in	r28, 0x3d	; 61
     f0e:	de b7       	in	r29, 0x3e	; 62
     f10:	ac 97       	sbiw	r28, 0x2c	; 44
     f12:	0f b6       	in	r0, 0x3f	; 63
     f14:	f8 94       	cli
     f16:	de bf       	out	0x3e, r29	; 62
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	cd bf       	out	0x3d, r28	; 61
     f1c:	3c 01       	movw	r6, r24
     f1e:	2a 01       	movw	r4, r20
     f20:	19 01       	movw	r2, r18
     f22:	fc 01       	movw	r30, r24
     f24:	11 82       	std	Z+1, r1	; 0x01
     f26:	10 82       	st	Z, r1
     f28:	13 82       	std	Z+3, r1	; 0x03
     f2a:	12 82       	std	Z+2, r1	; 0x02
{
    const T array[sizeof...(values)]{(values)...};
     f2c:	fb 01       	movw	r30, r22
     f2e:	60 81       	ld	r22, Z
     f30:	71 81       	ldd	r23, Z+1	; 0x01
     f32:	07 2e       	mov	r0, r23
     f34:	00 0c       	add	r0, r0
     f36:	88 0b       	sbc	r24, r24
     f38:	99 0b       	sbc	r25, r25
     f3a:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     f3e:	69 83       	std	Y+1, r22	; 0x01
     f40:	7a 83       	std	Y+2, r23	; 0x02
     f42:	8b 83       	std	Y+3, r24	; 0x03
     f44:	9c 83       	std	Y+4, r25	; 0x04
     f46:	f2 01       	movw	r30, r4
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	07 2e       	mov	r0, r23
     f4e:	00 0c       	add	r0, r0
     f50:	88 0b       	sbc	r24, r24
     f52:	99 0b       	sbc	r25, r25
     f54:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     f58:	6d 83       	std	Y+5, r22	; 0x05
     f5a:	7e 83       	std	Y+6, r23	; 0x06
     f5c:	8f 83       	std	Y+7, r24	; 0x07
     f5e:	98 87       	std	Y+8, r25	; 0x08
     f60:	f1 01       	movw	r30, r2
     f62:	60 81       	ld	r22, Z
     f64:	71 81       	ldd	r23, Z+1	; 0x01
     f66:	07 2e       	mov	r0, r23
     f68:	00 0c       	add	r0, r0
     f6a:	88 0b       	sbc	r24, r24
     f6c:	99 0b       	sbc	r25, r25
     f6e:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     f72:	69 87       	std	Y+9, r22	; 0x09
     f74:	7a 87       	std	Y+10, r23	; 0x0a
     f76:	8b 87       	std	Y+11, r24	; 0x0b
     f78:	9c 87       	std	Y+12, r25	; 0x0c
     f7a:	f8 01       	movw	r30, r16
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	07 2e       	mov	r0, r23
     f82:	00 0c       	add	r0, r0
     f84:	88 0b       	sbc	r24, r24
     f86:	99 0b       	sbc	r25, r25
     f88:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     f8c:	6d 87       	std	Y+13, r22	; 0x0d
     f8e:	7e 87       	std	Y+14, r23	; 0x0e
     f90:	8f 87       	std	Y+15, r24	; 0x0f
     f92:	98 8b       	std	Y+16, r25	; 0x10
     f94:	f7 01       	movw	r30, r14
     f96:	60 81       	ld	r22, Z
     f98:	71 81       	ldd	r23, Z+1	; 0x01
     f9a:	07 2e       	mov	r0, r23
     f9c:	00 0c       	add	r0, r0
     f9e:	88 0b       	sbc	r24, r24
     fa0:	99 0b       	sbc	r25, r25
     fa2:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     fa6:	69 8b       	std	Y+17, r22	; 0x11
     fa8:	7a 8b       	std	Y+18, r23	; 0x12
     faa:	8b 8b       	std	Y+19, r24	; 0x13
     fac:	9c 8b       	std	Y+20, r25	; 0x14
     fae:	f6 01       	movw	r30, r12
     fb0:	60 81       	ld	r22, Z
     fb2:	71 81       	ldd	r23, Z+1	; 0x01
     fb4:	07 2e       	mov	r0, r23
     fb6:	00 0c       	add	r0, r0
     fb8:	88 0b       	sbc	r24, r24
     fba:	99 0b       	sbc	r25, r25
     fbc:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     fc0:	6d 8b       	std	Y+21, r22	; 0x15
     fc2:	7e 8b       	std	Y+22, r23	; 0x16
     fc4:	8f 8b       	std	Y+23, r24	; 0x17
     fc6:	98 8f       	std	Y+24, r25	; 0x18
     fc8:	f5 01       	movw	r30, r10
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	07 2e       	mov	r0, r23
     fd0:	00 0c       	add	r0, r0
     fd2:	88 0b       	sbc	r24, r24
     fd4:	99 0b       	sbc	r25, r25
     fd6:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     fda:	69 8f       	std	Y+25, r22	; 0x19
     fdc:	7a 8f       	std	Y+26, r23	; 0x1a
     fde:	8b 8f       	std	Y+27, r24	; 0x1b
     fe0:	9c 8f       	std	Y+28, r25	; 0x1c
     fe2:	f4 01       	movw	r30, r8
     fe4:	60 81       	ld	r22, Z
     fe6:	71 81       	ldd	r23, Z+1	; 0x01
     fe8:	07 2e       	mov	r0, r23
     fea:	00 0c       	add	r0, r0
     fec:	88 0b       	sbc	r24, r24
     fee:	99 0b       	sbc	r25, r25
     ff0:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
     ff4:	6d 8f       	std	Y+29, r22	; 0x1d
     ff6:	7e 8f       	std	Y+30, r23	; 0x1e
     ff8:	8f 8f       	std	Y+31, r24	; 0x1f
     ffa:	98 a3       	std	Y+32, r25	; 0x20
     ffc:	23 96       	adiw	r28, 0x03	; 3
     ffe:	ee ad       	ldd	r30, Y+62	; 0x3e
    1000:	ff ad       	ldd	r31, Y+63	; 0x3f
    1002:	23 97       	sbiw	r28, 0x03	; 3
    1004:	60 81       	ld	r22, Z
    1006:	71 81       	ldd	r23, Z+1	; 0x01
    1008:	07 2e       	mov	r0, r23
    100a:	00 0c       	add	r0, r0
    100c:	88 0b       	sbc	r24, r24
    100e:	99 0b       	sbc	r25, r25
    1010:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
    1014:	69 a3       	std	Y+33, r22	; 0x21
    1016:	7a a3       	std	Y+34, r23	; 0x22
    1018:	8b a3       	std	Y+35, r24	; 0x23
    101a:	9c a3       	std	Y+36, r25	; 0x24
    101c:	25 96       	adiw	r28, 0x05	; 5
    101e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1020:	ff ad       	ldd	r31, Y+63	; 0x3f
    1022:	25 97       	sbiw	r28, 0x05	; 5
    1024:	60 81       	ld	r22, Z
    1026:	71 81       	ldd	r23, Z+1	; 0x01
    1028:	07 2e       	mov	r0, r23
    102a:	00 0c       	add	r0, r0
    102c:	88 0b       	sbc	r24, r24
    102e:	99 0b       	sbc	r25, r25
    1030:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
    1034:	6d a3       	std	Y+37, r22	; 0x25
    1036:	7e a3       	std	Y+38, r23	; 0x26
    1038:	8f a3       	std	Y+39, r24	; 0x27
    103a:	98 a7       	std	Y+40, r25	; 0x28
    103c:	27 96       	adiw	r28, 0x07	; 7
    103e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1040:	ff ad       	ldd	r31, Y+63	; 0x3f
    1042:	27 97       	sbiw	r28, 0x07	; 7
    1044:	60 81       	ld	r22, Z
    1046:	71 81       	ldd	r23, Z+1	; 0x01
    1048:	07 2e       	mov	r0, r23
    104a:	00 0c       	add	r0, r0
    104c:	88 0b       	sbc	r24, r24
    104e:	99 0b       	sbc	r25, r25
    1050:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <__floatsisf>
    1054:	69 a7       	std	Y+41, r22	; 0x29
    1056:	7a a7       	std	Y+42, r23	; 0x2a
    1058:	8b a7       	std	Y+43, r24	; 0x2b
    105a:	9c a7       	std	Y+44, r25	; 0x2c
    addValues(array);
    105c:	be 01       	movw	r22, r28
    105e:	6f 5f       	subi	r22, 0xFF	; 255
    1060:	7f 4f       	sbci	r23, 0xFF	; 255
    1062:	c3 01       	movw	r24, r6
    1064:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN9container6VectorIdE9addValuesILj11EEEbRAT__Kd>
}
    1068:	ac 96       	adiw	r28, 0x2c	; 44
    106a:	0f b6       	in	r0, 0x3f	; 63
    106c:	f8 94       	cli
    106e:	de bf       	out	0x3e, r29	; 62
    1070:	0f be       	out	0x3f, r0	; 63
    1072:	cd bf       	out	0x3d, r28	; 61
    1074:	df 91       	pop	r29
    1076:	cf 91       	pop	r28
    1078:	1f 91       	pop	r17
    107a:	0f 91       	pop	r16
    107c:	ff 90       	pop	r15
    107e:	ef 90       	pop	r14
    1080:	df 90       	pop	r13
    1082:	cf 90       	pop	r12
    1084:	bf 90       	pop	r11
    1086:	af 90       	pop	r10
    1088:	9f 90       	pop	r9
    108a:	8f 90       	pop	r8
    108c:	7f 90       	pop	r7
    108e:	6f 90       	pop	r6
    1090:	5f 90       	pop	r5
    1092:	4f 90       	pop	r4
    1094:	3f 90       	pop	r3
    1096:	2f 90       	pop	r2
    1098:	08 95       	ret

0000109a <_ZN9container6VectorIdE5clearEv>:
template <typename T>
const T* Vector<T>::last() const { return mySize > 0 ? end() - 1 : nullptr; }

// -----------------------------------------------------------------------------
template <typename T>
void Vector<T>::clear() 
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	ec 01       	movw	r28, r24

// -----------------------------------------------------------------------------
template <typename T>
inline void deleteMemory(T* &block) 
{
    free(block);
    10a0:	88 81       	ld	r24, Y
    10a2:	99 81       	ldd	r25, Y+1	; 0x01
    10a4:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <free>
    block = nullptr;
    10a8:	19 82       	std	Y+1, r1	; 0x01
    10aa:	18 82       	st	Y, r1
{
    utils::deleteMemory<T>(myData);
    myData = nullptr;
    mySize = 0;
    10ac:	1b 82       	std	Y+3, r1	; 0x03
    10ae:	1a 82       	std	Y+2, r1	; 0x02
}
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	08 95       	ret

000010b6 <_ZN9container6VectorIdED1Ev>:
    source.mySize = 0;
}

// -----------------------------------------------------------------------------
template <typename T>
Vector<T>::~Vector() { clear(); }
    10b6:	0e 94 4d 08 	call	0x109a	; 0x109a <_ZN9container6VectorIdE5clearEv>
    10ba:	08 95       	ret

000010bc <_Z41__static_initialization_and_destruction_0ii>:
    }
    return 0;
}
    10bc:	4f 92       	push	r4
    10be:	5f 92       	push	r5
    10c0:	6f 92       	push	r6
    10c2:	7f 92       	push	r7
    10c4:	8f 92       	push	r8
    10c6:	9f 92       	push	r9
    10c8:	af 92       	push	r10
    10ca:	bf 92       	push	r11
    10cc:	cf 92       	push	r12
    10ce:	df 92       	push	r13
    10d0:	ef 92       	push	r14
    10d2:	ff 92       	push	r15
    10d4:	0f 93       	push	r16
    10d6:	1f 93       	push	r17
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	ce 54       	subi	r28, 0x4E	; 78
    10e2:	d1 09       	sbc	r29, r1
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	de bf       	out	0x3e, r29	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	cd bf       	out	0x3d, r28	; 61
    10ee:	3c 01       	movw	r6, r24
    10f0:	2b 01       	movw	r4, r22
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	68 16       	cp	r6, r24
    10f6:	71 04       	cpc	r7, r1
    10f8:	09 f0       	breq	.+2      	; 0x10fc <_Z41__static_initialization_and_destruction_0ii+0x40>
    10fa:	15 c1       	rjmp	.+554    	; 0x1326 <_Z41__static_initialization_and_destruction_0ii+0x26a>
    10fc:	6f 3f       	cpi	r22, 0xFF	; 255
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	09 f0       	breq	.+2      	; 0x1104 <_Z41__static_initialization_and_destruction_0ii+0x48>
    1102:	11 c1       	rjmp	.+546    	; 0x1326 <_Z41__static_initialization_and_destruction_0ii+0x26a>
 * @param predictionButton Button connected to pin 13, used to toggle the LED.
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
    1104:	42 e0       	ldi	r20, 0x02	; 2
    1106:	50 e0       	ldi	r21, 0x00	; 0
    1108:	69 e0       	ldi	r22, 0x09	; 9
    110a:	84 e7       	ldi	r24, 0x74	; 116
    110c:	91 e0       	ldi	r25, 0x01	; 1
    110e:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_ZN6driver4GPIOC1EhNS0_9DirectionE>
GPIO predictionButton{13, GPIO::Direction::InputPullup};
    1112:	41 e0       	ldi	r20, 0x01	; 1
    1114:	50 e0       	ldi	r21, 0x00	; 0
    1116:	6d e0       	ldi	r22, 0x0D	; 13
    1118:	81 e7       	ldi	r24, 0x71	; 113
    111a:	91 e0       	ldi	r25, 0x01	; 1
    111c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_ZN6driver4GPIOC1EhNS0_9DirectionE>
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	4c e2       	ldi	r20, 0x2C	; 44
    1124:	51 e0       	ldi	r21, 0x01	; 1
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	88 e6       	ldi	r24, 0x68	; 104
    112c:	91 e0       	ldi	r25, 0x01	; 1
    112e:	0e 94 55 0b 	call	0x16aa	; 0x16aa <_ZN6driver5TimerC1ENS0_7CircuitEjb>
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
    1132:	20 e0       	ldi	r18, 0x00	; 0
    1134:	40 e6       	ldi	r20, 0x60	; 96
    1136:	5a ee       	ldi	r21, 0xEA	; 234
    1138:	61 e0       	ldi	r22, 0x01	; 1
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	8f e5       	ldi	r24, 0x5F	; 95
    113e:	91 e0       	ldi	r25, 0x01	; 1
    1140:	0e 94 55 0b 	call	0x16aa	; 0x16aa <_ZN6driver5TimerC1ENS0_7CircuitEjb>
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
    1144:	2f 96       	adiw	r28, 0x0f	; 15
    1146:	1c ae       	std	Y+60, r1	; 0x3c
    1148:	1d ae       	std	Y+61, r1	; 0x3d
    114a:	1e ae       	std	Y+62, r1	; 0x3e
    114c:	1f ae       	std	Y+63, r1	; 0x3f
    114e:	2f 97       	sbiw	r28, 0x0f	; 15
    1150:	8d ec       	ldi	r24, 0xCD	; 205
    1152:	9c ec       	ldi	r25, 0xCC	; 204
    1154:	ac ec       	ldi	r26, 0xCC	; 204
    1156:	bd e3       	ldi	r27, 0x3D	; 61
    1158:	2b 96       	adiw	r28, 0x0b	; 11
    115a:	8c af       	std	Y+60, r24	; 0x3c
    115c:	9d af       	std	Y+61, r25	; 0x3d
    115e:	ae af       	std	Y+62, r26	; 0x3e
    1160:	bf af       	std	Y+63, r27	; 0x3f
    1162:	2b 97       	sbiw	r28, 0x0b	; 11
    1164:	8d ec       	ldi	r24, 0xCD	; 205
    1166:	9c ec       	ldi	r25, 0xCC	; 204
    1168:	ac e4       	ldi	r26, 0x4C	; 76
    116a:	be e3       	ldi	r27, 0x3E	; 62
    116c:	27 96       	adiw	r28, 0x07	; 7
    116e:	8c af       	std	Y+60, r24	; 0x3c
    1170:	9d af       	std	Y+61, r25	; 0x3d
    1172:	ae af       	std	Y+62, r26	; 0x3e
    1174:	bf af       	std	Y+63, r27	; 0x3f
    1176:	27 97       	sbiw	r28, 0x07	; 7
    1178:	8a e9       	ldi	r24, 0x9A	; 154
    117a:	99 e9       	ldi	r25, 0x99	; 153
    117c:	a9 e9       	ldi	r26, 0x99	; 153
    117e:	be e3       	ldi	r27, 0x3E	; 62
    1180:	23 96       	adiw	r28, 0x03	; 3
    1182:	8c af       	std	Y+60, r24	; 0x3c
    1184:	9d af       	std	Y+61, r25	; 0x3d
    1186:	ae af       	std	Y+62, r26	; 0x3e
    1188:	bf af       	std	Y+63, r27	; 0x3f
    118a:	23 97       	sbiw	r28, 0x03	; 3
    118c:	8d ec       	ldi	r24, 0xCD	; 205
    118e:	9c ec       	ldi	r25, 0xCC	; 204
    1190:	ac ec       	ldi	r26, 0xCC	; 204
    1192:	be e3       	ldi	r27, 0x3E	; 62
    1194:	8b af       	std	Y+59, r24	; 0x3b
    1196:	9c af       	std	Y+60, r25	; 0x3c
    1198:	ad af       	std	Y+61, r26	; 0x3d
    119a:	be af       	std	Y+62, r27	; 0x3e
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	a0 e0       	ldi	r26, 0x00	; 0
    11a2:	bf e3       	ldi	r27, 0x3F	; 63
    11a4:	8f ab       	std	Y+55, r24	; 0x37
    11a6:	98 af       	std	Y+56, r25	; 0x38
    11a8:	a9 af       	std	Y+57, r26	; 0x39
    11aa:	ba af       	std	Y+58, r27	; 0x3a
    11ac:	8a e9       	ldi	r24, 0x9A	; 154
    11ae:	99 e9       	ldi	r25, 0x99	; 153
    11b0:	a9 e1       	ldi	r26, 0x19	; 25
    11b2:	bf e3       	ldi	r27, 0x3F	; 63
    11b4:	8b ab       	std	Y+51, r24	; 0x33
    11b6:	9c ab       	std	Y+52, r25	; 0x34
    11b8:	ad ab       	std	Y+53, r26	; 0x35
    11ba:	be ab       	std	Y+54, r27	; 0x36
    11bc:	83 e3       	ldi	r24, 0x33	; 51
    11be:	93 e3       	ldi	r25, 0x33	; 51
    11c0:	a3 e3       	ldi	r26, 0x33	; 51
    11c2:	bf e3       	ldi	r27, 0x3F	; 63
    11c4:	8f a7       	std	Y+47, r24	; 0x2f
    11c6:	98 ab       	std	Y+48, r25	; 0x30
    11c8:	a9 ab       	std	Y+49, r26	; 0x31
    11ca:	ba ab       	std	Y+50, r27	; 0x32
    11cc:	8d ec       	ldi	r24, 0xCD	; 205
    11ce:	9c ec       	ldi	r25, 0xCC	; 204
    11d0:	ac e4       	ldi	r26, 0x4C	; 76
    11d2:	bf e3       	ldi	r27, 0x3F	; 63
    11d4:	8b a7       	std	Y+43, r24	; 0x2b
    11d6:	9c a7       	std	Y+44, r25	; 0x2c
    11d8:	ad a7       	std	Y+45, r26	; 0x2d
    11da:	be a7       	std	Y+46, r27	; 0x2e
    11dc:	86 e6       	ldi	r24, 0x66	; 102
    11de:	96 e6       	ldi	r25, 0x66	; 102
    11e0:	a6 e6       	ldi	r26, 0x66	; 102
    11e2:	bf e3       	ldi	r27, 0x3F	; 63
    11e4:	8f a3       	std	Y+39, r24	; 0x27
    11e6:	98 a7       	std	Y+40, r25	; 0x28
    11e8:	a9 a7       	std	Y+41, r26	; 0x29
    11ea:	ba a7       	std	Y+42, r27	; 0x2a
    11ec:	80 e0       	ldi	r24, 0x00	; 0
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	a0 e8       	ldi	r26, 0x80	; 128
    11f2:	bf e3       	ldi	r27, 0x3F	; 63
    11f4:	8b a3       	std	Y+35, r24	; 0x23
    11f6:	9c a3       	std	Y+36, r25	; 0x24
    11f8:	ad a3       	std	Y+37, r26	; 0x25
    11fa:	be a3       	std	Y+38, r27	; 0x26
    11fc:	ce 01       	movw	r24, r28
    11fe:	83 96       	adiw	r24, 0x23	; 35
    1200:	9f 93       	push	r25
    1202:	8f 93       	push	r24
    1204:	04 96       	adiw	r24, 0x04	; 4
    1206:	9f 93       	push	r25
    1208:	8f 93       	push	r24
    120a:	04 96       	adiw	r24, 0x04	; 4
    120c:	9f 93       	push	r25
    120e:	8f 93       	push	r24
    1210:	de 01       	movw	r26, r28
    1212:	9f 96       	adiw	r26, 0x2f	; 47
    1214:	4d 01       	movw	r8, r26
    1216:	08 96       	adiw	r24, 0x08	; 8
    1218:	5c 01       	movw	r10, r24
    121a:	18 96       	adiw	r26, 0x08	; 8
    121c:	6d 01       	movw	r12, r26
    121e:	08 96       	adiw	r24, 0x08	; 8
    1220:	7c 01       	movw	r14, r24
    1222:	8e 01       	movw	r16, r28
    1224:	01 5c       	subi	r16, 0xC1	; 193
    1226:	1f 4f       	sbci	r17, 0xFF	; 255
    1228:	9e 01       	movw	r18, r28
    122a:	2d 5b       	subi	r18, 0xBD	; 189
    122c:	3f 4f       	sbci	r19, 0xFF	; 255
    122e:	ae 01       	movw	r20, r28
    1230:	49 5b       	subi	r20, 0xB9	; 185
    1232:	5f 4f       	sbci	r21, 0xFF	; 255
    1234:	be 01       	movw	r22, r28
    1236:	65 5b       	subi	r22, 0xB5	; 181
    1238:	7f 4f       	sbci	r23, 0xFF	; 255
    123a:	8b e5       	ldi	r24, 0x5B	; 91
    123c:	91 e0       	ldi	r25, 0x01	; 1
    123e:	0e 94 cf 06 	call	0xd9e	; 0xd9e <_ZN9container6VectorIdEC1IIdddddddddddEEEDpOKT_>
const container::Vector<double> trainingOutput{-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50}; 
    1242:	8e ec       	ldi	r24, 0xCE	; 206
    1244:	9f ef       	ldi	r25, 0xFF	; 255
    1246:	9a a3       	std	Y+34, r25	; 0x22
    1248:	89 a3       	std	Y+33, r24	; 0x21
    124a:	88 ed       	ldi	r24, 0xD8	; 216
    124c:	9f ef       	ldi	r25, 0xFF	; 255
    124e:	98 a3       	std	Y+32, r25	; 0x20
    1250:	8f 8f       	std	Y+31, r24	; 0x1f
    1252:	82 ee       	ldi	r24, 0xE2	; 226
    1254:	9f ef       	ldi	r25, 0xFF	; 255
    1256:	9e 8f       	std	Y+30, r25	; 0x1e
    1258:	8d 8f       	std	Y+29, r24	; 0x1d
    125a:	8c ee       	ldi	r24, 0xEC	; 236
    125c:	9f ef       	ldi	r25, 0xFF	; 255
    125e:	9c 8f       	std	Y+28, r25	; 0x1c
    1260:	8b 8f       	std	Y+27, r24	; 0x1b
    1262:	86 ef       	ldi	r24, 0xF6	; 246
    1264:	9f ef       	ldi	r25, 0xFF	; 255
    1266:	9a 8f       	std	Y+26, r25	; 0x1a
    1268:	89 8f       	std	Y+25, r24	; 0x19
    126a:	18 8e       	std	Y+24, r1	; 0x18
    126c:	1f 8a       	std	Y+23, r1	; 0x17
    126e:	8a e0       	ldi	r24, 0x0A	; 10
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	9e 8b       	std	Y+22, r25	; 0x16
    1274:	8d 8b       	std	Y+21, r24	; 0x15
    1276:	84 e1       	ldi	r24, 0x14	; 20
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	9c 8b       	std	Y+20, r25	; 0x14
    127c:	8b 8b       	std	Y+19, r24	; 0x13
    127e:	8e e1       	ldi	r24, 0x1E	; 30
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	9a 8b       	std	Y+18, r25	; 0x12
    1284:	89 8b       	std	Y+17, r24	; 0x11
    1286:	88 e2       	ldi	r24, 0x28	; 40
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	98 8b       	std	Y+16, r25	; 0x10
    128c:	8f 87       	std	Y+15, r24	; 0x0f
    128e:	82 e3       	ldi	r24, 0x32	; 50
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	9e 87       	std	Y+14, r25	; 0x0e
    1294:	8d 87       	std	Y+13, r24	; 0x0d
    1296:	ce 01       	movw	r24, r28
    1298:	0d 96       	adiw	r24, 0x0d	; 13
    129a:	9f 93       	push	r25
    129c:	8f 93       	push	r24
    129e:	02 96       	adiw	r24, 0x02	; 2
    12a0:	9f 93       	push	r25
    12a2:	8f 93       	push	r24
    12a4:	02 96       	adiw	r24, 0x02	; 2
    12a6:	9f 93       	push	r25
    12a8:	8f 93       	push	r24
    12aa:	de 01       	movw	r26, r28
    12ac:	53 96       	adiw	r26, 0x13	; 19
    12ae:	4d 01       	movw	r8, r26
    12b0:	04 96       	adiw	r24, 0x04	; 4
    12b2:	5c 01       	movw	r10, r24
    12b4:	14 96       	adiw	r26, 0x04	; 4
    12b6:	6d 01       	movw	r12, r26
    12b8:	04 96       	adiw	r24, 0x04	; 4
    12ba:	7c 01       	movw	r14, r24
    12bc:	04 52       	subi	r16, 0x24	; 36
    12be:	11 09       	sbc	r17, r1
    12c0:	9e 01       	movw	r18, r28
    12c2:	23 5e       	subi	r18, 0xE3	; 227
    12c4:	3f 4f       	sbci	r19, 0xFF	; 255
    12c6:	ae 01       	movw	r20, r28
    12c8:	41 5e       	subi	r20, 0xE1	; 225
    12ca:	5f 4f       	sbci	r21, 0xFF	; 255
    12cc:	be 01       	movw	r22, r28
    12ce:	6f 5d       	subi	r22, 0xDF	; 223
    12d0:	7f 4f       	sbci	r23, 0xFF	; 255
    12d2:	87 e5       	ldi	r24, 0x57	; 87
    12d4:	91 e0       	ldi	r25, 0x01	; 1
    12d6:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZN9container6VectorIdEC1IIiiiiiiiiiiiEEEDpOKT_>
ml::LinReg linReg{0.0, 0.0, trainingInput, trainingOutput, 0.1};
    12da:	19 86       	std	Y+9, r1	; 0x09
    12dc:	1a 86       	std	Y+10, r1	; 0x0a
    12de:	1b 86       	std	Y+11, r1	; 0x0b
    12e0:	1c 86       	std	Y+12, r1	; 0x0c
    12e2:	1d 82       	std	Y+5, r1	; 0x05
    12e4:	1e 82       	std	Y+6, r1	; 0x06
    12e6:	1f 82       	std	Y+7, r1	; 0x07
    12e8:	18 86       	std	Y+8, r1	; 0x08
    12ea:	8d ec       	ldi	r24, 0xCD	; 205
    12ec:	9c ec       	ldi	r25, 0xCC	; 204
    12ee:	ac ec       	ldi	r26, 0xCC	; 204
    12f0:	bd e3       	ldi	r27, 0x3D	; 61
    12f2:	89 83       	std	Y+1, r24	; 0x01
    12f4:	9a 83       	std	Y+2, r25	; 0x02
    12f6:	ab 83       	std	Y+3, r26	; 0x03
    12f8:	bc 83       	std	Y+4, r27	; 0x04
    12fa:	de 01       	movw	r26, r28
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	7d 01       	movw	r14, r26
    1300:	07 e5       	ldi	r16, 0x57	; 87
    1302:	11 e0       	ldi	r17, 0x01	; 1
    1304:	2b e5       	ldi	r18, 0x5B	; 91
    1306:	31 e0       	ldi	r19, 0x01	; 1
    1308:	ae 01       	movw	r20, r28
    130a:	4b 5f       	subi	r20, 0xFB	; 251
    130c:	5f 4f       	sbci	r21, 0xFF	; 255
    130e:	be 01       	movw	r22, r28
    1310:	67 5f       	subi	r22, 0xF7	; 247
    1312:	7f 4f       	sbci	r23, 0xFF	; 255
    1314:	83 e4       	ldi	r24, 0x43	; 67
    1316:	91 e0       	ldi	r25, 0x01	; 1
    1318:	0e 94 1c 02 	call	0x438	; 0x438 <_ZN2ml6LinRegC1ERKdS2_RKN9container6VectorIdEES7_S2_>
    131c:	0f b6       	in	r0, 0x3f	; 63
    131e:	f8 94       	cli
    1320:	de bf       	out	0x3e, r29	; 62
    1322:	0f be       	out	0x3f, r0	; 63
    1324:	cd bf       	out	0x3d, r28	; 61
    1326:	67 28       	or	r6, r7
    1328:	19 f5       	brne	.+70     	; 0x1370 <_Z41__static_initialization_and_destruction_0ii+0x2b4>
    132a:	45 20       	and	r4, r5
    132c:	40 94       	com	r4
    132e:	01 f5       	brne	.+64     	; 0x1370 <_Z41__static_initialization_and_destruction_0ii+0x2b4>
namespace ml { /** @note Put the bracket on a new line. */

/********************************************************************************
 * @brief Class for Linear Regression model
 ********************************************************************************/
class LinReg { /** @note Put the bracket on a new line. */
    1330:	83 e5       	ldi	r24, 0x53	; 83
    1332:	91 e0       	ldi	r25, 0x01	; 1
    1334:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <_ZN9container6VectorIdED1Ev>
    1338:	8f e4       	ldi	r24, 0x4F	; 79
    133a:	91 e0       	ldi	r25, 0x01	; 1
    133c:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <_ZN9container6VectorIdED1Ev>
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
const container::Vector<double> trainingOutput{-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50}; 
    1340:	87 e5       	ldi	r24, 0x57	; 87
    1342:	91 e0       	ldi	r25, 0x01	; 1
    1344:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <_ZN9container6VectorIdED1Ev>
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
const container::Vector<double> trainingInput{0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0};
    1348:	8b e5       	ldi	r24, 0x5B	; 91
    134a:	91 e0       	ldi	r25, 0x01	; 1
    134c:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <_ZN9container6VectorIdED1Ev>
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
Timer predictionTimer{Timer::Circuit::predictionTimer, 60000}; 
    1350:	8f e5       	ldi	r24, 0x5F	; 95
    1352:	91 e0       	ldi	r25, 0x01	; 1
    1354:	0e 94 a6 0b 	call	0x174c	; 0x174c <_ZN6driver5TimerD1Ev>
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
Timer debounceTimer{Timer::Circuit::debounceTimer, 300};        
    1358:	88 e6       	ldi	r24, 0x68	; 104
    135a:	91 e0       	ldi	r25, 0x01	; 1
    135c:	0e 94 a6 0b 	call	0x174c	; 0x174c <_ZN6driver5TimerD1Ev>
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
GPIO predictionButton{13, GPIO::Direction::InputPullup};
    1360:	81 e7       	ldi	r24, 0x71	; 113
    1362:	91 e0       	ldi	r25, 0x01	; 1
    1364:	0e 94 19 03 	call	0x632	; 0x632 <_ZN6driver4GPIOD1Ev>
 * @param predictionButton Button connected to pin 13, used to toggle the LED.
 * @param debounceTimer  Timer used to reduced the effect of contact bounces when
 *                pressing the button.
 * @param predictionTimer  Timer used to toggle the LED every 100 ms when enabled.
 ********************************************************************************/
GPIO errorLed{9, GPIO::Direction::Output};
    1368:	84 e7       	ldi	r24, 0x74	; 116
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	0e 94 19 03 	call	0x632	; 0x632 <_ZN6driver4GPIOD1Ev>
    while (1) 
    {   
        watchdog::reset();
    }
    return 0;
}
    1370:	c2 5b       	subi	r28, 0xB2	; 178
    1372:	df 4f       	sbci	r29, 0xFF	; 255
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	df 91       	pop	r29
    1380:	cf 91       	pop	r28
    1382:	1f 91       	pop	r17
    1384:	0f 91       	pop	r16
    1386:	ff 90       	pop	r15
    1388:	ef 90       	pop	r14
    138a:	df 90       	pop	r13
    138c:	cf 90       	pop	r12
    138e:	bf 90       	pop	r11
    1390:	af 90       	pop	r10
    1392:	9f 90       	pop	r9
    1394:	8f 90       	pop	r8
    1396:	7f 90       	pop	r7
    1398:	6f 90       	pop	r6
    139a:	5f 90       	pop	r5
    139c:	4f 90       	pop	r4
    139e:	08 95       	ret

000013a0 <_GLOBAL__sub_I_main>:
    13a0:	6f ef       	ldi	r22, 0xFF	; 255
    13a2:	7f ef       	ldi	r23, 0xFF	; 255
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <_Z41__static_initialization_and_destruction_0ii>
    13ac:	08 95       	ret

000013ae <_GLOBAL__sub_D_main>:
    13ae:	6f ef       	ldi	r22, 0xFF	; 255
    13b0:	7f ef       	ldi	r23, 0xFF	; 255
    13b2:	80 e0       	ldi	r24, 0x00	; 0
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <_Z41__static_initialization_and_destruction_0ii>
    13ba:	08 95       	ret

000013bc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>:
 * @tparam Size The array size.
 * 
 * @note The array size must exceed 0, else a compilation error will be generated.
 ********************************************************************************/
template <typename T, size_t Size>
class Array 
    13bc:	43 30       	cpi	r20, 0x03	; 3
    13be:	51 05       	cpc	r21, r1
    13c0:	60 f4       	brcc	.+24     	; 0x13da <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x1e>
    13c2:	61 15       	cp	r22, r1
    13c4:	71 05       	cpc	r23, r1
    13c6:	59 f0       	breq	.+22     	; 0x13de <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj+0x22>
    13c8:	44 0f       	add	r20, r20
    13ca:	55 1f       	adc	r21, r21
    13cc:	fc 01       	movw	r30, r24
    13ce:	e4 0f       	add	r30, r20
    13d0:	f5 1f       	adc	r31, r21
    13d2:	71 83       	std	Z+1, r23	; 0x01
    13d4:	60 83       	st	Z, r22
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	08 95       	ret
    13da:	80 e0       	ldi	r24, 0x00	; 0
    13dc:	08 95       	ret
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	08 95       	ret

000013e2 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>:
    13e2:	66 0f       	add	r22, r22
    13e4:	77 1f       	adc	r23, r23
    13e6:	86 0f       	add	r24, r22
    13e8:	97 1f       	adc	r25, r23
    13ea:	fc 01       	movw	r30, r24
    13ec:	20 81       	ld	r18, Z
    13ee:	31 81       	ldd	r19, Z+1	; 0x01
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	23 2b       	or	r18, r19
    13f4:	09 f4       	brne	.+2      	; 0x13f8 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj+0x16>
    13f6:	80 e0       	ldi	r24, 0x00	; 0
    13f8:	08 95       	ret

000013fa <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>:
    13fa:	ef 92       	push	r14
    13fc:	ff 92       	push	r15
    13fe:	1f 93       	push	r17
    1400:	cf 93       	push	r28
    1402:	df 93       	push	r29
    1404:	7c 01       	movw	r14, r24
    1406:	eb 01       	movw	r28, r22
    1408:	63 30       	cpi	r22, 0x03	; 3
    140a:	71 05       	cpc	r23, r1
    140c:	20 f4       	brcc	.+8      	; 0x1416 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1c>
    140e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <_ZNK9container12_GLOBAL__N_113CallbackArrayILj3EE17isCallbackDefinedEj>
    1412:	18 2f       	mov	r17, r24
    1414:	01 c0       	rjmp	.+2      	; 0x1418 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x1e>
    1416:	10 e0       	ldi	r17, 0x00	; 0
    1418:	11 23       	and	r17, r17
    141a:	39 f0       	breq	.+14     	; 0x142a <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj+0x30>
    141c:	cc 0f       	add	r28, r28
    141e:	dd 1f       	adc	r29, r29
    1420:	ce 0d       	add	r28, r14
    1422:	df 1d       	adc	r29, r15
    1424:	e8 81       	ld	r30, Y
    1426:	f9 81       	ldd	r31, Y+1	; 0x01
    1428:	09 95       	icall
    142a:	81 2f       	mov	r24, r17
    142c:	df 91       	pop	r29
    142e:	cf 91       	pop	r28
    1430:	1f 91       	pop	r17
    1432:	ff 90       	pop	r15
    1434:	ef 90       	pop	r14
    1436:	08 95       	ret

00001438 <_ZN6driver5Timer5startEv>:
    1438:	0f 93       	push	r16
    143a:	cf 93       	push	r28
    143c:	fc 01       	movw	r30, r24
    143e:	78 94       	sei
    1440:	84 81       	ldd	r24, Z+4	; 0x04
    1442:	95 81       	ldd	r25, Z+5	; 0x05
    1444:	a6 81       	ldd	r26, Z+6	; 0x06
    1446:	b7 81       	ldd	r27, Z+7	; 0x07
    1448:	89 2b       	or	r24, r25
    144a:	8a 2b       	or	r24, r26
    144c:	8b 2b       	or	r24, r27
    144e:	c1 f0       	breq	.+48     	; 0x1480 <_ZN6driver5Timer5startEv+0x48>
    1450:	a0 81       	ld	r26, Z
    1452:	b1 81       	ldd	r27, Z+1	; 0x01
    1454:	16 96       	adiw	r26, 0x06	; 6
    1456:	0c 91       	ld	r16, X
    1458:	16 97       	sbiw	r26, 0x06	; 6
    145a:	14 96       	adiw	r26, 0x04	; 4
    145c:	0d 90       	ld	r0, X+
    145e:	bc 91       	ld	r27, X
    1460:	a0 2d       	mov	r26, r0
    1462:	cc 91       	ld	r28, X
    1464:	21 e0       	ldi	r18, 0x01	; 1
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 e0       	ldi	r20, 0x00	; 0
    146a:	50 e0       	ldi	r21, 0x00	; 0
    146c:	60 e0       	ldi	r22, 0x00	; 0
    146e:	70 e0       	ldi	r23, 0x00	; 0
    1470:	80 e0       	ldi	r24, 0x00	; 0
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
    1478:	2c 2b       	or	r18, r28
    147a:	2c 93       	st	X, r18
    147c:	81 e0       	ldi	r24, 0x01	; 1
    147e:	80 87       	std	Z+8, r24	; 0x08
    1480:	cf 91       	pop	r28
    1482:	0f 91       	pop	r16
    1484:	08 95       	ret

00001486 <_ZN6driver5Timer4stopEv>:
    1486:	0f 93       	push	r16
    1488:	cf 93       	push	r28
    148a:	df 93       	push	r29
    148c:	dc 01       	movw	r26, r24
    148e:	ed 91       	ld	r30, X+
    1490:	fc 91       	ld	r31, X
    1492:	11 97       	sbiw	r26, 0x01	; 1
    1494:	06 81       	ldd	r16, Z+6	; 0x06
    1496:	c4 81       	ldd	r28, Z+4	; 0x04
    1498:	d5 81       	ldd	r29, Z+5	; 0x05
    149a:	e8 81       	ld	r30, Y
    149c:	21 e0       	ldi	r18, 0x01	; 1
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	40 e0       	ldi	r20, 0x00	; 0
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	60 e0       	ldi	r22, 0x00	; 0
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__ashldi3>
    14b0:	20 95       	com	r18
    14b2:	e2 23       	and	r30, r18
    14b4:	e8 83       	st	Y, r30
    14b6:	18 96       	adiw	r26, 0x08	; 8
    14b8:	1c 92       	st	X, r1
    14ba:	df 91       	pop	r29
    14bc:	cf 91       	pop	r28
    14be:	0f 91       	pop	r16
    14c0:	08 95       	ret

000014c2 <_ZN6driver5Timer7restartEv>:
    14c2:	dc 01       	movw	r26, r24
    14c4:	ed 91       	ld	r30, X+
    14c6:	fc 91       	ld	r31, X
    14c8:	10 82       	st	Z, r1
    14ca:	11 82       	std	Z+1, r1	; 0x01
    14cc:	12 82       	std	Z+2, r1	; 0x02
    14ce:	13 82       	std	Z+3, r1	; 0x03
    14d0:	0e 94 1c 0a 	call	0x1438	; 0x1438 <_ZN6driver5Timer5startEv>
    14d4:	08 95       	ret

000014d6 <_ZNK6driver5Timer11addCallbackEPFvvE>:
    14d6:	61 15       	cp	r22, r1
    14d8:	71 05       	cpc	r23, r1
    14da:	59 f0       	breq	.+22     	; 0x14f2 <_ZNK6driver5Timer11addCallbackEPFvvE+0x1c>
    14dc:	fc 01       	movw	r30, r24
    14de:	01 90       	ld	r0, Z+
    14e0:	f0 81       	ld	r31, Z
    14e2:	e0 2d       	mov	r30, r0
    14e4:	47 81       	ldd	r20, Z+7	; 0x07
    14e6:	50 e0       	ldi	r21, 0x00	; 0
    14e8:	8d e7       	ldi	r24, 0x7D	; 125
    14ea:	91 e0       	ldi	r25, 0x01	; 1
    14ec:	0e 94 de 09 	call	0x13bc	; 0x13bc <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE3addEPFvvEj>
    14f0:	08 95       	ret
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	08 95       	ret

000014f6 <_ZN6driver5Timer9incrementEv>:
    14f6:	cf 93       	push	r28
    14f8:	df 93       	push	r29
    14fa:	fc 01       	movw	r30, r24
    14fc:	80 85       	ldd	r24, Z+8	; 0x08
    14fe:	88 23       	and	r24, r24
    1500:	69 f0       	breq	.+26     	; 0x151c <_ZN6driver5Timer9incrementEv+0x26>
    1502:	c0 81       	ld	r28, Z
    1504:	d1 81       	ldd	r29, Z+1	; 0x01
    1506:	88 81       	ld	r24, Y
    1508:	99 81       	ldd	r25, Y+1	; 0x01
    150a:	aa 81       	ldd	r26, Y+2	; 0x02
    150c:	bb 81       	ldd	r27, Y+3	; 0x03
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	a1 1d       	adc	r26, r1
    1512:	b1 1d       	adc	r27, r1
    1514:	88 83       	st	Y, r24
    1516:	99 83       	std	Y+1, r25	; 0x01
    1518:	aa 83       	std	Y+2, r26	; 0x02
    151a:	bb 83       	std	Y+3, r27	; 0x03
    151c:	80 85       	ldd	r24, Z+8	; 0x08
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	08 95       	ret

00001524 <_ZN6driver5Timer10hasElapsedEv>:
    1524:	0f 93       	push	r16
    1526:	1f 93       	push	r17
    1528:	fc 01       	movw	r30, r24
    152a:	90 85       	ldd	r25, Z+8	; 0x08
    152c:	99 23       	and	r25, r25
    152e:	81 f0       	breq	.+32     	; 0x1550 <_ZN6driver5Timer10hasElapsedEv+0x2c>
    1530:	a0 81       	ld	r26, Z
    1532:	b1 81       	ldd	r27, Z+1	; 0x01
    1534:	0d 91       	ld	r16, X+
    1536:	1d 91       	ld	r17, X+
    1538:	2d 91       	ld	r18, X+
    153a:	3c 91       	ld	r19, X
    153c:	44 81       	ldd	r20, Z+4	; 0x04
    153e:	55 81       	ldd	r21, Z+5	; 0x05
    1540:	66 81       	ldd	r22, Z+6	; 0x06
    1542:	77 81       	ldd	r23, Z+7	; 0x07
    1544:	04 17       	cp	r16, r20
    1546:	15 07       	cpc	r17, r21
    1548:	26 07       	cpc	r18, r22
    154a:	37 07       	cpc	r19, r23
    154c:	18 f4       	brcc	.+6      	; 0x1554 <_ZN6driver5Timer10hasElapsedEv+0x30>
    154e:	03 c0       	rjmp	.+6      	; 0x1556 <_ZN6driver5Timer10hasElapsedEv+0x32>
    1550:	91 e0       	ldi	r25, 0x01	; 1
    1552:	01 c0       	rjmp	.+2      	; 0x1556 <_ZN6driver5Timer10hasElapsedEv+0x32>
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	91 11       	cpse	r25, r1
    1558:	09 c0       	rjmp	.+18     	; 0x156c <_ZN6driver5Timer10hasElapsedEv+0x48>
    155a:	01 90       	ld	r0, Z+
    155c:	f0 81       	ld	r31, Z
    155e:	e0 2d       	mov	r30, r0
    1560:	10 82       	st	Z, r1
    1562:	11 82       	std	Z+1, r1	; 0x01
    1564:	12 82       	std	Z+2, r1	; 0x02
    1566:	13 82       	std	Z+3, r1	; 0x03
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	01 c0       	rjmp	.+2      	; 0x156e <_ZN6driver5Timer10hasElapsedEv+0x4a>
    156c:	80 e0       	ldi	r24, 0x00	; 0
    156e:	1f 91       	pop	r17
    1570:	0f 91       	pop	r16
    1572:	08 95       	ret

00001574 <_ZN6driver5Timer11getMaxCountEj>:
    1574:	00 97       	sbiw	r24, 0x00	; 0
    1576:	a1 f0       	breq	.+40     	; 0x15a0 <_ZN6driver5Timer11getMaxCountEj+0x2c>
    1578:	bc 01       	movw	r22, r24
    157a:	80 e0       	ldi	r24, 0x00	; 0
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__floatunsisf>
    1582:	2f e6       	ldi	r18, 0x6F	; 111
    1584:	32 e1       	ldi	r19, 0x12	; 18
    1586:	43 e0       	ldi	r20, 0x03	; 3
    1588:	5e e3       	ldi	r21, 0x3E	; 62
    158a:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__divsf3>
    158e:	20 e0       	ldi	r18, 0x00	; 0
    1590:	30 e0       	ldi	r19, 0x00	; 0
    1592:	40 e0       	ldi	r20, 0x00	; 0
    1594:	5f e3       	ldi	r21, 0x3F	; 63
    1596:	0e 94 c6 0c 	call	0x198c	; 0x198c <__addsf3>
    159a:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <__fixunssfsi>
    159e:	08 95       	ret
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	70 e0       	ldi	r23, 0x00	; 0
    15a4:	cb 01       	movw	r24, r22
    15a6:	08 95       	ret

000015a8 <_ZN6driver5Timer15setElapseTimeMsEj>:
    15a8:	0f 93       	push	r16
    15aa:	1f 93       	push	r17
    15ac:	cf 93       	push	r28
    15ae:	df 93       	push	r29
    15b0:	8c 01       	movw	r16, r24
    15b2:	eb 01       	movw	r28, r22
    15b4:	20 97       	sbiw	r28, 0x00	; 0
    15b6:	11 f4       	brne	.+4      	; 0x15bc <_ZN6driver5Timer15setElapseTimeMsEj+0x14>
    15b8:	0e 94 43 0a 	call	0x1486	; 0x1486 <_ZN6driver5Timer4stopEv>
    15bc:	ce 01       	movw	r24, r28
    15be:	0e 94 ba 0a 	call	0x1574	; 0x1574 <_ZN6driver5Timer11getMaxCountEj>
    15c2:	f8 01       	movw	r30, r16
    15c4:	64 83       	std	Z+4, r22	; 0x04
    15c6:	75 83       	std	Z+5, r23	; 0x05
    15c8:	86 83       	std	Z+6, r24	; 0x06
    15ca:	97 83       	std	Z+7, r25	; 0x07
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	08 95       	ret

000015d6 <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev>:
    15d6:	26 e0       	ldi	r18, 0x06	; 6
    15d8:	fc 01       	movw	r30, r24
    15da:	11 92       	st	Z+, r1
    15dc:	2a 95       	dec	r18
    15de:	e9 f7       	brne	.-6      	; 0x15da <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev+0x4>
    15e0:	08 95       	ret

000015e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>:
    15e2:	66 0f       	add	r22, r22
    15e4:	77 1f       	adc	r23, r23
    15e6:	86 0f       	add	r24, r22
    15e8:	97 1f       	adc	r25, r23
    15ea:	08 95       	ret

000015ec <_ZN6driver5Timer12initHardwareEv>:
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	ec 01       	movw	r28, r24
    15f2:	8a 81       	ldd	r24, Y+2	; 0x02
    15f4:	9b 81       	ldd	r25, Y+3	; 0x03
    15f6:	00 97       	sbiw	r24, 0x00	; 0
    15f8:	99 f4       	brne	.+38     	; 0x1620 <_ZN6driver5Timer12initHardwareEv+0x34>
    15fa:	60 e0       	ldi	r22, 0x00	; 0
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	87 e7       	ldi	r24, 0x77	; 119
    1600:	91 e0       	ldi	r25, 0x01	; 1
    1602:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    1606:	fc 01       	movw	r30, r24
    1608:	80 81       	ld	r24, Z
    160a:	91 81       	ldd	r25, Z+1	; 0x01
    160c:	89 2b       	or	r24, r25
    160e:	09 f0       	breq	.+2      	; 0x1612 <_ZN6driver5Timer12initHardwareEv+0x26>
    1610:	44 c0       	rjmp	.+136    	; 0x169a <_ZN6driver5Timer12initHardwareEv+0xae>
    1612:	82 e0       	ldi	r24, 0x02	; 2
    1614:	85 bd       	out	0x25, r24	; 37
    1616:	8c e2       	ldi	r24, 0x2C	; 44
    1618:	91 e0       	ldi	r25, 0x01	; 1
    161a:	99 83       	std	Y+1, r25	; 0x01
    161c:	88 83       	st	Y, r24
    161e:	30 c0       	rjmp	.+96     	; 0x1680 <_ZN6driver5Timer12initHardwareEv+0x94>
    1620:	81 30       	cpi	r24, 0x01	; 1
    1622:	91 05       	cpc	r25, r1
    1624:	c9 f4       	brne	.+50     	; 0x1658 <_ZN6driver5Timer12initHardwareEv+0x6c>
    1626:	61 e0       	ldi	r22, 0x01	; 1
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	87 e7       	ldi	r24, 0x77	; 119
    162c:	91 e0       	ldi	r25, 0x01	; 1
    162e:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    1632:	fc 01       	movw	r30, r24
    1634:	80 81       	ld	r24, Z
    1636:	91 81       	ldd	r25, Z+1	; 0x01
    1638:	89 2b       	or	r24, r25
    163a:	89 f5       	brne	.+98     	; 0x169e <_ZN6driver5Timer12initHardwareEv+0xb2>
    163c:	8a e0       	ldi	r24, 0x0A	; 10
    163e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	91 e0       	ldi	r25, 0x01	; 1
    1646:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    164a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    164e:	84 e2       	ldi	r24, 0x24	; 36
    1650:	91 e0       	ldi	r25, 0x01	; 1
    1652:	99 83       	std	Y+1, r25	; 0x01
    1654:	88 83       	st	Y, r24
    1656:	14 c0       	rjmp	.+40     	; 0x1680 <_ZN6driver5Timer12initHardwareEv+0x94>
    1658:	02 97       	sbiw	r24, 0x02	; 2
    165a:	91 f4       	brne	.+36     	; 0x1680 <_ZN6driver5Timer12initHardwareEv+0x94>
    165c:	62 e0       	ldi	r22, 0x02	; 2
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	87 e7       	ldi	r24, 0x77	; 119
    1662:	91 e0       	ldi	r25, 0x01	; 1
    1664:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    1668:	fc 01       	movw	r30, r24
    166a:	80 81       	ld	r24, Z
    166c:	91 81       	ldd	r25, Z+1	; 0x01
    166e:	89 2b       	or	r24, r25
    1670:	c1 f4       	brne	.+48     	; 0x16a2 <_ZN6driver5Timer12initHardwareEv+0xb6>
    1672:	82 e0       	ldi	r24, 0x02	; 2
    1674:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1678:	8c e1       	ldi	r24, 0x1C	; 28
    167a:	91 e0       	ldi	r25, 0x01	; 1
    167c:	99 83       	std	Y+1, r25	; 0x01
    167e:	88 83       	st	Y, r24
    1680:	e8 81       	ld	r30, Y
    1682:	f9 81       	ldd	r31, Y+1	; 0x01
    1684:	67 81       	ldd	r22, Z+7	; 0x07
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	87 e7       	ldi	r24, 0x77	; 119
    168a:	91 e0       	ldi	r25, 0x01	; 1
    168c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    1690:	fc 01       	movw	r30, r24
    1692:	d1 83       	std	Z+1, r29	; 0x01
    1694:	c0 83       	st	Z, r28
    1696:	81 e0       	ldi	r24, 0x01	; 1
    1698:	05 c0       	rjmp	.+10     	; 0x16a4 <_ZN6driver5Timer12initHardwareEv+0xb8>
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	03 c0       	rjmp	.+6      	; 0x16a4 <_ZN6driver5Timer12initHardwareEv+0xb8>
    169e:	80 e0       	ldi	r24, 0x00	; 0
    16a0:	01 c0       	rjmp	.+2      	; 0x16a4 <_ZN6driver5Timer12initHardwareEv+0xb8>
    16a2:	80 e0       	ldi	r24, 0x00	; 0
    16a4:	df 91       	pop	r29
    16a6:	cf 91       	pop	r28
    16a8:	08 95       	ret

000016aa <_ZN6driver5TimerC1ENS0_7CircuitEjb>:
    16aa:	ef 92       	push	r14
    16ac:	ff 92       	push	r15
    16ae:	1f 93       	push	r17
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	ec 01       	movw	r28, r24
    16b6:	7a 01       	movw	r14, r20
    16b8:	12 2f       	mov	r17, r18
    16ba:	19 82       	std	Y+1, r1	; 0x01
    16bc:	18 82       	st	Y, r1
    16be:	7b 83       	std	Y+3, r23	; 0x03
    16c0:	6a 83       	std	Y+2, r22	; 0x02
    16c2:	1c 82       	std	Y+4, r1	; 0x04
    16c4:	1d 82       	std	Y+5, r1	; 0x05
    16c6:	1e 82       	std	Y+6, r1	; 0x06
    16c8:	1f 82       	std	Y+7, r1	; 0x07
    16ca:	18 86       	std	Y+8, r1	; 0x08
    16cc:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <_ZN6driver5Timer12initHardwareEv>
    16d0:	88 23       	and	r24, r24
    16d2:	49 f0       	breq	.+18     	; 0x16e6 <_ZN6driver5TimerC1ENS0_7CircuitEjb+0x3c>
    16d4:	b7 01       	movw	r22, r14
    16d6:	ce 01       	movw	r24, r28
    16d8:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <_ZN6driver5Timer15setElapseTimeMsEj>
    16dc:	11 23       	and	r17, r17
    16de:	19 f0       	breq	.+6      	; 0x16e6 <_ZN6driver5TimerC1ENS0_7CircuitEjb+0x3c>
    16e0:	ce 01       	movw	r24, r28
    16e2:	0e 94 1c 0a 	call	0x1438	; 0x1438 <_ZN6driver5Timer5startEv>
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	1f 91       	pop	r17
    16ec:	ff 90       	pop	r15
    16ee:	ef 90       	pop	r14
    16f0:	08 95       	ret

000016f2 <_ZN6driver5Timer15disableHardwareEv>:
    16f2:	cf 93       	push	r28
    16f4:	df 93       	push	r29
    16f6:	ec 01       	movw	r28, r24
    16f8:	8a 81       	ldd	r24, Y+2	; 0x02
    16fa:	9b 81       	ldd	r25, Y+3	; 0x03
    16fc:	00 97       	sbiw	r24, 0x00	; 0
    16fe:	11 f4       	brne	.+4      	; 0x1704 <_ZN6driver5Timer15disableHardwareEv+0x12>
    1700:	15 bc       	out	0x25, r1	; 37
    1702:	0e c0       	rjmp	.+28     	; 0x1720 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    1704:	81 30       	cpi	r24, 0x01	; 1
    1706:	91 05       	cpc	r25, r1
    1708:	39 f4       	brne	.+14     	; 0x1718 <_ZN6driver5Timer15disableHardwareEv+0x26>
    170a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    170e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1712:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1716:	04 c0       	rjmp	.+8      	; 0x1720 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    1718:	02 97       	sbiw	r24, 0x02	; 2
    171a:	11 f4       	brne	.+4      	; 0x1720 <_ZN6driver5Timer15disableHardwareEv+0x2e>
    171c:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1720:	e8 81       	ld	r30, Y
    1722:	f9 81       	ldd	r31, Y+1	; 0x01
    1724:	04 80       	ldd	r0, Z+4	; 0x04
    1726:	f5 81       	ldd	r31, Z+5	; 0x05
    1728:	e0 2d       	mov	r30, r0
    172a:	10 82       	st	Z, r1
    172c:	e8 81       	ld	r30, Y
    172e:	f9 81       	ldd	r31, Y+1	; 0x01
    1730:	67 81       	ldd	r22, Z+7	; 0x07
    1732:	70 e0       	ldi	r23, 0x00	; 0
    1734:	87 e7       	ldi	r24, 0x77	; 119
    1736:	91 e0       	ldi	r25, 0x01	; 1
    1738:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    173c:	fc 01       	movw	r30, r24
    173e:	11 82       	std	Z+1, r1	; 0x01
    1740:	10 82       	st	Z, r1
    1742:	19 82       	std	Y+1, r1	; 0x01
    1744:	18 82       	st	Y, r1
    1746:	df 91       	pop	r29
    1748:	cf 91       	pop	r28
    174a:	08 95       	ret

0000174c <_ZN6driver5TimerD1Ev>:
    174c:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <_ZN6driver5Timer15disableHardwareEv>
    1750:	08 95       	ret

00001752 <_ZN6driver12_GLOBAL__N_116generateCallbackEh>:
    1752:	0f 93       	push	r16
    1754:	1f 93       	push	r17
    1756:	cf 93       	push	r28
    1758:	df 93       	push	r29
    175a:	c8 2f       	mov	r28, r24
    175c:	d0 e0       	ldi	r29, 0x00	; 0
    175e:	be 01       	movw	r22, r28
    1760:	87 e7       	ldi	r24, 0x77	; 119
    1762:	91 e0       	ldi	r25, 0x01	; 1
    1764:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN9container5ArrayIPN6driver5TimerELj3EEixEj>
    1768:	fc 01       	movw	r30, r24
    176a:	00 81       	ld	r16, Z
    176c:	11 81       	ldd	r17, Z+1	; 0x01
    176e:	01 15       	cp	r16, r1
    1770:	11 05       	cpc	r17, r1
    1772:	69 f0       	breq	.+26     	; 0x178e <_ZN6driver12_GLOBAL__N_116generateCallbackEh+0x3c>
    1774:	c8 01       	movw	r24, r16
    1776:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <_ZN6driver5Timer9incrementEv>
    177a:	c8 01       	movw	r24, r16
    177c:	0e 94 92 0a 	call	0x1524	; 0x1524 <_ZN6driver5Timer10hasElapsedEv>
    1780:	88 23       	and	r24, r24
    1782:	29 f0       	breq	.+10     	; 0x178e <_ZN6driver12_GLOBAL__N_116generateCallbackEh+0x3c>
    1784:	be 01       	movw	r22, r28
    1786:	8d e7       	ldi	r24, 0x7D	; 125
    1788:	91 e0       	ldi	r25, 0x01	; 1
    178a:	0e 94 fd 09 	call	0x13fa	; 0x13fa <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EE4callEj>
    178e:	df 91       	pop	r29
    1790:	cf 91       	pop	r28
    1792:	1f 91       	pop	r17
    1794:	0f 91       	pop	r16
    1796:	08 95       	ret

00001798 <__vector_16>:
    1798:	1f 92       	push	r1
    179a:	0f 92       	push	r0
    179c:	0f b6       	in	r0, 0x3f	; 63
    179e:	0f 92       	push	r0
    17a0:	11 24       	eor	r1, r1
    17a2:	2f 93       	push	r18
    17a4:	3f 93       	push	r19
    17a6:	4f 93       	push	r20
    17a8:	5f 93       	push	r21
    17aa:	6f 93       	push	r22
    17ac:	7f 93       	push	r23
    17ae:	8f 93       	push	r24
    17b0:	9f 93       	push	r25
    17b2:	af 93       	push	r26
    17b4:	bf 93       	push	r27
    17b6:	ef 93       	push	r30
    17b8:	ff 93       	push	r31
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	0e 94 a9 0b 	call	0x1752	; 0x1752 <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    17c0:	ff 91       	pop	r31
    17c2:	ef 91       	pop	r30
    17c4:	bf 91       	pop	r27
    17c6:	af 91       	pop	r26
    17c8:	9f 91       	pop	r25
    17ca:	8f 91       	pop	r24
    17cc:	7f 91       	pop	r23
    17ce:	6f 91       	pop	r22
    17d0:	5f 91       	pop	r21
    17d2:	4f 91       	pop	r20
    17d4:	3f 91       	pop	r19
    17d6:	2f 91       	pop	r18
    17d8:	0f 90       	pop	r0
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	0f 90       	pop	r0
    17de:	1f 90       	pop	r1
    17e0:	18 95       	reti

000017e2 <__vector_11>:
    17e2:	1f 92       	push	r1
    17e4:	0f 92       	push	r0
    17e6:	0f b6       	in	r0, 0x3f	; 63
    17e8:	0f 92       	push	r0
    17ea:	11 24       	eor	r1, r1
    17ec:	2f 93       	push	r18
    17ee:	3f 93       	push	r19
    17f0:	4f 93       	push	r20
    17f2:	5f 93       	push	r21
    17f4:	6f 93       	push	r22
    17f6:	7f 93       	push	r23
    17f8:	8f 93       	push	r24
    17fa:	9f 93       	push	r25
    17fc:	af 93       	push	r26
    17fe:	bf 93       	push	r27
    1800:	ef 93       	push	r30
    1802:	ff 93       	push	r31
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	0e 94 a9 0b 	call	0x1752	; 0x1752 <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    180a:	ff 91       	pop	r31
    180c:	ef 91       	pop	r30
    180e:	bf 91       	pop	r27
    1810:	af 91       	pop	r26
    1812:	9f 91       	pop	r25
    1814:	8f 91       	pop	r24
    1816:	7f 91       	pop	r23
    1818:	6f 91       	pop	r22
    181a:	5f 91       	pop	r21
    181c:	4f 91       	pop	r20
    181e:	3f 91       	pop	r19
    1820:	2f 91       	pop	r18
    1822:	0f 90       	pop	r0
    1824:	0f be       	out	0x3f, r0	; 63
    1826:	0f 90       	pop	r0
    1828:	1f 90       	pop	r1
    182a:	18 95       	reti

0000182c <__vector_9>:
    182c:	1f 92       	push	r1
    182e:	0f 92       	push	r0
    1830:	0f b6       	in	r0, 0x3f	; 63
    1832:	0f 92       	push	r0
    1834:	11 24       	eor	r1, r1
    1836:	2f 93       	push	r18
    1838:	3f 93       	push	r19
    183a:	4f 93       	push	r20
    183c:	5f 93       	push	r21
    183e:	6f 93       	push	r22
    1840:	7f 93       	push	r23
    1842:	8f 93       	push	r24
    1844:	9f 93       	push	r25
    1846:	af 93       	push	r26
    1848:	bf 93       	push	r27
    184a:	ef 93       	push	r30
    184c:	ff 93       	push	r31
    184e:	82 e0       	ldi	r24, 0x02	; 2
    1850:	0e 94 a9 0b 	call	0x1752	; 0x1752 <_ZN6driver12_GLOBAL__N_116generateCallbackEh>
    1854:	ff 91       	pop	r31
    1856:	ef 91       	pop	r30
    1858:	bf 91       	pop	r27
    185a:	af 91       	pop	r26
    185c:	9f 91       	pop	r25
    185e:	8f 91       	pop	r24
    1860:	7f 91       	pop	r23
    1862:	6f 91       	pop	r22
    1864:	5f 91       	pop	r21
    1866:	4f 91       	pop	r20
    1868:	3f 91       	pop	r19
    186a:	2f 91       	pop	r18
    186c:	0f 90       	pop	r0
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	0f 90       	pop	r0
    1872:	1f 90       	pop	r1
    1874:	18 95       	reti

00001876 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>:
    1876:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <_ZN9container5ArrayIPFvvELj3EEC1Ev>
    187a:	08 95       	ret

0000187c <_Z41__static_initialization_and_destruction_0ii>:
ISR (TIMER2_OVF_vect) 
{
	generateCallback(TimerIndex::Timer2);
}

} // namespace driver
    187c:	01 97       	sbiw	r24, 0x01	; 1
    187e:	59 f4       	brne	.+22     	; 0x1896 <_Z41__static_initialization_and_destruction_0ii+0x1a>
    1880:	6f 3f       	cpi	r22, 0xFF	; 255
    1882:	7f 4f       	sbci	r23, 0xFF	; 255
    1884:	41 f4       	brne	.+16     	; 0x1896 <_Z41__static_initialization_and_destruction_0ii+0x1a>
};

namespace
{    
constexpr uint8_t kNumCircuits{3U};
container::CallbackArray<kNumCircuits> callbacks{};
    1886:	8d e7       	ldi	r24, 0x7D	; 125
    1888:	91 e0       	ldi	r25, 0x01	; 1
    188a:	0e 94 3b 0c 	call	0x1876	; 0x1876 <_ZN9container12_GLOBAL__N_113CallbackArrayILj3EEC1Ev>
container::Array<Timer*, kNumCircuits> timers{};
    188e:	87 e7       	ldi	r24, 0x77	; 119
    1890:	91 e0       	ldi	r25, 0x01	; 1
    1892:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <_ZN9container5ArrayIPN6driver5TimerELj3EEC1Ev>
    1896:	08 95       	ret

00001898 <_GLOBAL__sub_I__ZN6driver5Timer17myHwdebounceTimerE>:
ISR (TIMER2_OVF_vect) 
{
	generateCallback(TimerIndex::Timer2);
}

} // namespace driver
    1898:	6f ef       	ldi	r22, 0xFF	; 255
    189a:	7f ef       	ldi	r23, 0xFF	; 255
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	0e 94 3e 0c 	call	0x187c	; 0x187c <_Z41__static_initialization_and_destruction_0ii>
    18a4:	08 95       	ret

000018a6 <_GLOBAL__sub_D__ZN6driver5Timer17myHwdebounceTimerE>:
    18a6:	6f ef       	ldi	r22, 0xFF	; 255
    18a8:	7f ef       	ldi	r23, 0xFF	; 255
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	90 e0       	ldi	r25, 0x00	; 0
    18ae:	0e 94 3e 0c 	call	0x187c	; 0x187c <_Z41__static_initialization_and_destruction_0ii>
    18b2:	08 95       	ret

000018b4 <_ZN6driver8watchdog4initENS0_7TimeoutE>:
{
    return static_cast<T&&>(value);
}

// -----------------------------------------------------------------------------
inline void globalInterruptEnable(void) { asm("SEI"); }
    18b4:	f8 94       	cli
    18b6:	e0 e6       	ldi	r30, 0x60	; 96
    18b8:	f0 e0       	ldi	r31, 0x00	; 0
    18ba:	90 81       	ld	r25, Z
    18bc:	90 61       	ori	r25, 0x10	; 16
    18be:	90 83       	st	Z, r25
    18c0:	90 81       	ld	r25, Z
    18c2:	98 60       	ori	r25, 0x08	; 8
    18c4:	90 83       	st	Z, r25
    18c6:	80 83       	st	Z, r24
    18c8:	78 94       	sei
    18ca:	08 95       	ret

000018cc <_ZN6driver8watchdog5resetEv>:
    18cc:	f8 94       	cli
    18ce:	a8 95       	wdr
    18d0:	84 b7       	in	r24, 0x34	; 52
    18d2:	87 7f       	andi	r24, 0xF7	; 247
    18d4:	84 bf       	out	0x34, r24	; 52
    18d6:	78 94       	sei
    18d8:	08 95       	ret

000018da <_ZN6driver8watchdog17enableSystemResetEv>:
    18da:	0e 94 66 0c 	call	0x18cc	; 0x18cc <_ZN6driver8watchdog5resetEv>
    18de:	f8 94       	cli
    18e0:	e0 e6       	ldi	r30, 0x60	; 96
    18e2:	f0 e0       	ldi	r31, 0x00	; 0
    18e4:	80 81       	ld	r24, Z
    18e6:	80 61       	ori	r24, 0x10	; 16
    18e8:	80 83       	st	Z, r24
    18ea:	80 81       	ld	r24, Z
    18ec:	88 60       	ori	r24, 0x08	; 8
    18ee:	80 83       	st	Z, r24
    18f0:	80 81       	ld	r24, Z
    18f2:	88 60       	ori	r24, 0x08	; 8
    18f4:	80 83       	st	Z, r24
    18f6:	78 94       	sei
    18f8:	08 95       	ret

000018fa <_ZN6driver8watchdog15enableInterruptEPFvvE>:
    18fa:	00 97       	sbiw	r24, 0x00	; 0
    18fc:	a9 f0       	breq	.+42     	; 0x1928 <_ZN6driver8watchdog15enableInterruptEPFvvE+0x2e>
    18fe:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    1902:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    1906:	0e 94 66 0c 	call	0x18cc	; 0x18cc <_ZN6driver8watchdog5resetEv>
    190a:	f8 94       	cli
    190c:	e0 e6       	ldi	r30, 0x60	; 96
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	80 81       	ld	r24, Z
    1912:	80 61       	ori	r24, 0x10	; 16
    1914:	80 83       	st	Z, r24
    1916:	80 81       	ld	r24, Z
    1918:	88 60       	ori	r24, 0x08	; 8
    191a:	80 83       	st	Z, r24
    191c:	80 81       	ld	r24, Z
    191e:	80 64       	ori	r24, 0x40	; 64
    1920:	80 83       	st	Z, r24
    1922:	78 94       	sei
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	08 95       	ret
    1928:	80 e0       	ldi	r24, 0x00	; 0
    192a:	08 95       	ret

0000192c <__vector_6>:
   utils::globalInterruptEnable();
}

// -----------------------------------------------------------------------------
ISR (WDT_vect) 
{
    192c:	1f 92       	push	r1
    192e:	0f 92       	push	r0
    1930:	0f b6       	in	r0, 0x3f	; 63
    1932:	0f 92       	push	r0
    1934:	11 24       	eor	r1, r1
    1936:	2f 93       	push	r18
    1938:	3f 93       	push	r19
    193a:	4f 93       	push	r20
    193c:	5f 93       	push	r21
    193e:	6f 93       	push	r22
    1940:	7f 93       	push	r23
    1942:	8f 93       	push	r24
    1944:	9f 93       	push	r25
    1946:	af 93       	push	r26
    1948:	bf 93       	push	r27
    194a:	ef 93       	push	r30
    194c:	ff 93       	push	r31
    enableInterrupt(watchdogCallback);
    194e:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    1952:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    1956:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <_ZN6driver8watchdog15enableInterruptEPFvvE>
    if (watchdogCallback != nullptr) { watchdogCallback(); }
    195a:	e0 91 83 01 	lds	r30, 0x0183	; 0x800183 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE>
    195e:	f0 91 84 01 	lds	r31, 0x0184	; 0x800184 <_ZN6driver8watchdog12_GLOBAL__N_116watchdogCallbackE+0x1>
    1962:	30 97       	sbiw	r30, 0x00	; 0
    1964:	09 f0       	breq	.+2      	; 0x1968 <__vector_6+0x3c>
    1966:	09 95       	icall
}
    1968:	ff 91       	pop	r31
    196a:	ef 91       	pop	r30
    196c:	bf 91       	pop	r27
    196e:	af 91       	pop	r26
    1970:	9f 91       	pop	r25
    1972:	8f 91       	pop	r24
    1974:	7f 91       	pop	r23
    1976:	6f 91       	pop	r22
    1978:	5f 91       	pop	r21
    197a:	4f 91       	pop	r20
    197c:	3f 91       	pop	r19
    197e:	2f 91       	pop	r18
    1980:	0f 90       	pop	r0
    1982:	0f be       	out	0x3f, r0	; 63
    1984:	0f 90       	pop	r0
    1986:	1f 90       	pop	r1
    1988:	18 95       	reti

0000198a <__subsf3>:
    198a:	50 58       	subi	r21, 0x80	; 128

0000198c <__addsf3>:
    198c:	bb 27       	eor	r27, r27
    198e:	aa 27       	eor	r26, r26
    1990:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__addsf3x>
    1994:	0c 94 50 0e 	jmp	0x1ca0	; 0x1ca0 <__fp_round>
    1998:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_pscA>
    199c:	38 f0       	brcs	.+14     	; 0x19ac <__addsf3+0x20>
    199e:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <__fp_pscB>
    19a2:	20 f0       	brcs	.+8      	; 0x19ac <__addsf3+0x20>
    19a4:	39 f4       	brne	.+14     	; 0x19b4 <__addsf3+0x28>
    19a6:	9f 3f       	cpi	r25, 0xFF	; 255
    19a8:	19 f4       	brne	.+6      	; 0x19b0 <__addsf3+0x24>
    19aa:	26 f4       	brtc	.+8      	; 0x19b4 <__addsf3+0x28>
    19ac:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <__fp_nan>
    19b0:	0e f4       	brtc	.+2      	; 0x19b4 <__addsf3+0x28>
    19b2:	e0 95       	com	r30
    19b4:	e7 fb       	bst	r30, 7
    19b6:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <__fp_inf>

000019ba <__addsf3x>:
    19ba:	e9 2f       	mov	r30, r25
    19bc:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <__fp_split3>
    19c0:	58 f3       	brcs	.-42     	; 0x1998 <__addsf3+0xc>
    19c2:	ba 17       	cp	r27, r26
    19c4:	62 07       	cpc	r22, r18
    19c6:	73 07       	cpc	r23, r19
    19c8:	84 07       	cpc	r24, r20
    19ca:	95 07       	cpc	r25, r21
    19cc:	20 f0       	brcs	.+8      	; 0x19d6 <__addsf3x+0x1c>
    19ce:	79 f4       	brne	.+30     	; 0x19ee <__addsf3x+0x34>
    19d0:	a6 f5       	brtc	.+104    	; 0x1a3a <__addsf3x+0x80>
    19d2:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_zero>
    19d6:	0e f4       	brtc	.+2      	; 0x19da <__addsf3x+0x20>
    19d8:	e0 95       	com	r30
    19da:	0b 2e       	mov	r0, r27
    19dc:	ba 2f       	mov	r27, r26
    19de:	a0 2d       	mov	r26, r0
    19e0:	0b 01       	movw	r0, r22
    19e2:	b9 01       	movw	r22, r18
    19e4:	90 01       	movw	r18, r0
    19e6:	0c 01       	movw	r0, r24
    19e8:	ca 01       	movw	r24, r20
    19ea:	a0 01       	movw	r20, r0
    19ec:	11 24       	eor	r1, r1
    19ee:	ff 27       	eor	r31, r31
    19f0:	59 1b       	sub	r21, r25
    19f2:	99 f0       	breq	.+38     	; 0x1a1a <__addsf3x+0x60>
    19f4:	59 3f       	cpi	r21, 0xF9	; 249
    19f6:	50 f4       	brcc	.+20     	; 0x1a0c <__addsf3x+0x52>
    19f8:	50 3e       	cpi	r21, 0xE0	; 224
    19fa:	68 f1       	brcs	.+90     	; 0x1a56 <__addsf3x+0x9c>
    19fc:	1a 16       	cp	r1, r26
    19fe:	f0 40       	sbci	r31, 0x00	; 0
    1a00:	a2 2f       	mov	r26, r18
    1a02:	23 2f       	mov	r18, r19
    1a04:	34 2f       	mov	r19, r20
    1a06:	44 27       	eor	r20, r20
    1a08:	58 5f       	subi	r21, 0xF8	; 248
    1a0a:	f3 cf       	rjmp	.-26     	; 0x19f2 <__addsf3x+0x38>
    1a0c:	46 95       	lsr	r20
    1a0e:	37 95       	ror	r19
    1a10:	27 95       	ror	r18
    1a12:	a7 95       	ror	r26
    1a14:	f0 40       	sbci	r31, 0x00	; 0
    1a16:	53 95       	inc	r21
    1a18:	c9 f7       	brne	.-14     	; 0x1a0c <__addsf3x+0x52>
    1a1a:	7e f4       	brtc	.+30     	; 0x1a3a <__addsf3x+0x80>
    1a1c:	1f 16       	cp	r1, r31
    1a1e:	ba 0b       	sbc	r27, r26
    1a20:	62 0b       	sbc	r22, r18
    1a22:	73 0b       	sbc	r23, r19
    1a24:	84 0b       	sbc	r24, r20
    1a26:	ba f0       	brmi	.+46     	; 0x1a56 <__addsf3x+0x9c>
    1a28:	91 50       	subi	r25, 0x01	; 1
    1a2a:	a1 f0       	breq	.+40     	; 0x1a54 <__addsf3x+0x9a>
    1a2c:	ff 0f       	add	r31, r31
    1a2e:	bb 1f       	adc	r27, r27
    1a30:	66 1f       	adc	r22, r22
    1a32:	77 1f       	adc	r23, r23
    1a34:	88 1f       	adc	r24, r24
    1a36:	c2 f7       	brpl	.-16     	; 0x1a28 <__addsf3x+0x6e>
    1a38:	0e c0       	rjmp	.+28     	; 0x1a56 <__addsf3x+0x9c>
    1a3a:	ba 0f       	add	r27, r26
    1a3c:	62 1f       	adc	r22, r18
    1a3e:	73 1f       	adc	r23, r19
    1a40:	84 1f       	adc	r24, r20
    1a42:	48 f4       	brcc	.+18     	; 0x1a56 <__addsf3x+0x9c>
    1a44:	87 95       	ror	r24
    1a46:	77 95       	ror	r23
    1a48:	67 95       	ror	r22
    1a4a:	b7 95       	ror	r27
    1a4c:	f7 95       	ror	r31
    1a4e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a50:	08 f0       	brcs	.+2      	; 0x1a54 <__addsf3x+0x9a>
    1a52:	b0 cf       	rjmp	.-160    	; 0x19b4 <__addsf3+0x28>
    1a54:	93 95       	inc	r25
    1a56:	88 0f       	add	r24, r24
    1a58:	08 f0       	brcs	.+2      	; 0x1a5c <__addsf3x+0xa2>
    1a5a:	99 27       	eor	r25, r25
    1a5c:	ee 0f       	add	r30, r30
    1a5e:	97 95       	ror	r25
    1a60:	87 95       	ror	r24
    1a62:	08 95       	ret

00001a64 <__cmpsf2>:
    1a64:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <__fp_cmp>
    1a68:	08 f4       	brcc	.+2      	; 0x1a6c <__cmpsf2+0x8>
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	08 95       	ret

00001a6e <__divsf3>:
    1a6e:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <__divsf3x>
    1a72:	0c 94 50 0e 	jmp	0x1ca0	; 0x1ca0 <__fp_round>
    1a76:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <__fp_pscB>
    1a7a:	58 f0       	brcs	.+22     	; 0x1a92 <__divsf3+0x24>
    1a7c:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_pscA>
    1a80:	40 f0       	brcs	.+16     	; 0x1a92 <__divsf3+0x24>
    1a82:	29 f4       	brne	.+10     	; 0x1a8e <__divsf3+0x20>
    1a84:	5f 3f       	cpi	r21, 0xFF	; 255
    1a86:	29 f0       	breq	.+10     	; 0x1a92 <__divsf3+0x24>
    1a88:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <__fp_inf>
    1a8c:	51 11       	cpse	r21, r1
    1a8e:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__fp_szero>
    1a92:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <__fp_nan>

00001a96 <__divsf3x>:
    1a96:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <__fp_split3>
    1a9a:	68 f3       	brcs	.-38     	; 0x1a76 <__divsf3+0x8>

00001a9c <__divsf3_pse>:
    1a9c:	99 23       	and	r25, r25
    1a9e:	b1 f3       	breq	.-20     	; 0x1a8c <__divsf3+0x1e>
    1aa0:	55 23       	and	r21, r21
    1aa2:	91 f3       	breq	.-28     	; 0x1a88 <__divsf3+0x1a>
    1aa4:	95 1b       	sub	r25, r21
    1aa6:	55 0b       	sbc	r21, r21
    1aa8:	bb 27       	eor	r27, r27
    1aaa:	aa 27       	eor	r26, r26
    1aac:	62 17       	cp	r22, r18
    1aae:	73 07       	cpc	r23, r19
    1ab0:	84 07       	cpc	r24, r20
    1ab2:	38 f0       	brcs	.+14     	; 0x1ac2 <__divsf3_pse+0x26>
    1ab4:	9f 5f       	subi	r25, 0xFF	; 255
    1ab6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ab8:	22 0f       	add	r18, r18
    1aba:	33 1f       	adc	r19, r19
    1abc:	44 1f       	adc	r20, r20
    1abe:	aa 1f       	adc	r26, r26
    1ac0:	a9 f3       	breq	.-22     	; 0x1aac <__divsf3_pse+0x10>
    1ac2:	35 d0       	rcall	.+106    	; 0x1b2e <__divsf3_pse+0x92>
    1ac4:	0e 2e       	mov	r0, r30
    1ac6:	3a f0       	brmi	.+14     	; 0x1ad6 <__divsf3_pse+0x3a>
    1ac8:	e0 e8       	ldi	r30, 0x80	; 128
    1aca:	32 d0       	rcall	.+100    	; 0x1b30 <__divsf3_pse+0x94>
    1acc:	91 50       	subi	r25, 0x01	; 1
    1ace:	50 40       	sbci	r21, 0x00	; 0
    1ad0:	e6 95       	lsr	r30
    1ad2:	00 1c       	adc	r0, r0
    1ad4:	ca f7       	brpl	.-14     	; 0x1ac8 <__divsf3_pse+0x2c>
    1ad6:	2b d0       	rcall	.+86     	; 0x1b2e <__divsf3_pse+0x92>
    1ad8:	fe 2f       	mov	r31, r30
    1ada:	29 d0       	rcall	.+82     	; 0x1b2e <__divsf3_pse+0x92>
    1adc:	66 0f       	add	r22, r22
    1ade:	77 1f       	adc	r23, r23
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	bb 1f       	adc	r27, r27
    1ae4:	26 17       	cp	r18, r22
    1ae6:	37 07       	cpc	r19, r23
    1ae8:	48 07       	cpc	r20, r24
    1aea:	ab 07       	cpc	r26, r27
    1aec:	b0 e8       	ldi	r27, 0x80	; 128
    1aee:	09 f0       	breq	.+2      	; 0x1af2 <__divsf3_pse+0x56>
    1af0:	bb 0b       	sbc	r27, r27
    1af2:	80 2d       	mov	r24, r0
    1af4:	bf 01       	movw	r22, r30
    1af6:	ff 27       	eor	r31, r31
    1af8:	93 58       	subi	r25, 0x83	; 131
    1afa:	5f 4f       	sbci	r21, 0xFF	; 255
    1afc:	3a f0       	brmi	.+14     	; 0x1b0c <__divsf3_pse+0x70>
    1afe:	9e 3f       	cpi	r25, 0xFE	; 254
    1b00:	51 05       	cpc	r21, r1
    1b02:	78 f0       	brcs	.+30     	; 0x1b22 <__divsf3_pse+0x86>
    1b04:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <__fp_inf>
    1b08:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__fp_szero>
    1b0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b0e:	e4 f3       	brlt	.-8      	; 0x1b08 <__divsf3_pse+0x6c>
    1b10:	98 3e       	cpi	r25, 0xE8	; 232
    1b12:	d4 f3       	brlt	.-12     	; 0x1b08 <__divsf3_pse+0x6c>
    1b14:	86 95       	lsr	r24
    1b16:	77 95       	ror	r23
    1b18:	67 95       	ror	r22
    1b1a:	b7 95       	ror	r27
    1b1c:	f7 95       	ror	r31
    1b1e:	9f 5f       	subi	r25, 0xFF	; 255
    1b20:	c9 f7       	brne	.-14     	; 0x1b14 <__divsf3_pse+0x78>
    1b22:	88 0f       	add	r24, r24
    1b24:	91 1d       	adc	r25, r1
    1b26:	96 95       	lsr	r25
    1b28:	87 95       	ror	r24
    1b2a:	97 f9       	bld	r25, 7
    1b2c:	08 95       	ret
    1b2e:	e1 e0       	ldi	r30, 0x01	; 1
    1b30:	66 0f       	add	r22, r22
    1b32:	77 1f       	adc	r23, r23
    1b34:	88 1f       	adc	r24, r24
    1b36:	bb 1f       	adc	r27, r27
    1b38:	62 17       	cp	r22, r18
    1b3a:	73 07       	cpc	r23, r19
    1b3c:	84 07       	cpc	r24, r20
    1b3e:	ba 07       	cpc	r27, r26
    1b40:	20 f0       	brcs	.+8      	; 0x1b4a <__divsf3_pse+0xae>
    1b42:	62 1b       	sub	r22, r18
    1b44:	73 0b       	sbc	r23, r19
    1b46:	84 0b       	sbc	r24, r20
    1b48:	ba 0b       	sbc	r27, r26
    1b4a:	ee 1f       	adc	r30, r30
    1b4c:	88 f7       	brcc	.-30     	; 0x1b30 <__divsf3_pse+0x94>
    1b4e:	e0 95       	com	r30
    1b50:	08 95       	ret

00001b52 <__fixunssfsi>:
    1b52:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_splitA>
    1b56:	88 f0       	brcs	.+34     	; 0x1b7a <__fixunssfsi+0x28>
    1b58:	9f 57       	subi	r25, 0x7F	; 127
    1b5a:	98 f0       	brcs	.+38     	; 0x1b82 <__fixunssfsi+0x30>
    1b5c:	b9 2f       	mov	r27, r25
    1b5e:	99 27       	eor	r25, r25
    1b60:	b7 51       	subi	r27, 0x17	; 23
    1b62:	b0 f0       	brcs	.+44     	; 0x1b90 <__fixunssfsi+0x3e>
    1b64:	e1 f0       	breq	.+56     	; 0x1b9e <__fixunssfsi+0x4c>
    1b66:	66 0f       	add	r22, r22
    1b68:	77 1f       	adc	r23, r23
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	99 1f       	adc	r25, r25
    1b6e:	1a f0       	brmi	.+6      	; 0x1b76 <__fixunssfsi+0x24>
    1b70:	ba 95       	dec	r27
    1b72:	c9 f7       	brne	.-14     	; 0x1b66 <__fixunssfsi+0x14>
    1b74:	14 c0       	rjmp	.+40     	; 0x1b9e <__fixunssfsi+0x4c>
    1b76:	b1 30       	cpi	r27, 0x01	; 1
    1b78:	91 f0       	breq	.+36     	; 0x1b9e <__fixunssfsi+0x4c>
    1b7a:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <__fp_zero>
    1b7e:	b1 e0       	ldi	r27, 0x01	; 1
    1b80:	08 95       	ret
    1b82:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_zero>
    1b86:	67 2f       	mov	r22, r23
    1b88:	78 2f       	mov	r23, r24
    1b8a:	88 27       	eor	r24, r24
    1b8c:	b8 5f       	subi	r27, 0xF8	; 248
    1b8e:	39 f0       	breq	.+14     	; 0x1b9e <__fixunssfsi+0x4c>
    1b90:	b9 3f       	cpi	r27, 0xF9	; 249
    1b92:	cc f3       	brlt	.-14     	; 0x1b86 <__fixunssfsi+0x34>
    1b94:	86 95       	lsr	r24
    1b96:	77 95       	ror	r23
    1b98:	67 95       	ror	r22
    1b9a:	b3 95       	inc	r27
    1b9c:	d9 f7       	brne	.-10     	; 0x1b94 <__fixunssfsi+0x42>
    1b9e:	3e f4       	brtc	.+14     	; 0x1bae <__fixunssfsi+0x5c>
    1ba0:	90 95       	com	r25
    1ba2:	80 95       	com	r24
    1ba4:	70 95       	com	r23
    1ba6:	61 95       	neg	r22
    1ba8:	7f 4f       	sbci	r23, 0xFF	; 255
    1baa:	8f 4f       	sbci	r24, 0xFF	; 255
    1bac:	9f 4f       	sbci	r25, 0xFF	; 255
    1bae:	08 95       	ret

00001bb0 <__floatunsisf>:
    1bb0:	e8 94       	clt
    1bb2:	09 c0       	rjmp	.+18     	; 0x1bc6 <__floatsisf+0x12>

00001bb4 <__floatsisf>:
    1bb4:	97 fb       	bst	r25, 7
    1bb6:	3e f4       	brtc	.+14     	; 0x1bc6 <__floatsisf+0x12>
    1bb8:	90 95       	com	r25
    1bba:	80 95       	com	r24
    1bbc:	70 95       	com	r23
    1bbe:	61 95       	neg	r22
    1bc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc6:	99 23       	and	r25, r25
    1bc8:	a9 f0       	breq	.+42     	; 0x1bf4 <__floatsisf+0x40>
    1bca:	f9 2f       	mov	r31, r25
    1bcc:	96 e9       	ldi	r25, 0x96	; 150
    1bce:	bb 27       	eor	r27, r27
    1bd0:	93 95       	inc	r25
    1bd2:	f6 95       	lsr	r31
    1bd4:	87 95       	ror	r24
    1bd6:	77 95       	ror	r23
    1bd8:	67 95       	ror	r22
    1bda:	b7 95       	ror	r27
    1bdc:	f1 11       	cpse	r31, r1
    1bde:	f8 cf       	rjmp	.-16     	; 0x1bd0 <__floatsisf+0x1c>
    1be0:	fa f4       	brpl	.+62     	; 0x1c20 <__floatsisf+0x6c>
    1be2:	bb 0f       	add	r27, r27
    1be4:	11 f4       	brne	.+4      	; 0x1bea <__floatsisf+0x36>
    1be6:	60 ff       	sbrs	r22, 0
    1be8:	1b c0       	rjmp	.+54     	; 0x1c20 <__floatsisf+0x6c>
    1bea:	6f 5f       	subi	r22, 0xFF	; 255
    1bec:	7f 4f       	sbci	r23, 0xFF	; 255
    1bee:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf2:	16 c0       	rjmp	.+44     	; 0x1c20 <__floatsisf+0x6c>
    1bf4:	88 23       	and	r24, r24
    1bf6:	11 f0       	breq	.+4      	; 0x1bfc <__floatsisf+0x48>
    1bf8:	96 e9       	ldi	r25, 0x96	; 150
    1bfa:	11 c0       	rjmp	.+34     	; 0x1c1e <__floatsisf+0x6a>
    1bfc:	77 23       	and	r23, r23
    1bfe:	21 f0       	breq	.+8      	; 0x1c08 <__floatsisf+0x54>
    1c00:	9e e8       	ldi	r25, 0x8E	; 142
    1c02:	87 2f       	mov	r24, r23
    1c04:	76 2f       	mov	r23, r22
    1c06:	05 c0       	rjmp	.+10     	; 0x1c12 <__floatsisf+0x5e>
    1c08:	66 23       	and	r22, r22
    1c0a:	71 f0       	breq	.+28     	; 0x1c28 <__floatsisf+0x74>
    1c0c:	96 e8       	ldi	r25, 0x86	; 134
    1c0e:	86 2f       	mov	r24, r22
    1c10:	70 e0       	ldi	r23, 0x00	; 0
    1c12:	60 e0       	ldi	r22, 0x00	; 0
    1c14:	2a f0       	brmi	.+10     	; 0x1c20 <__floatsisf+0x6c>
    1c16:	9a 95       	dec	r25
    1c18:	66 0f       	add	r22, r22
    1c1a:	77 1f       	adc	r23, r23
    1c1c:	88 1f       	adc	r24, r24
    1c1e:	da f7       	brpl	.-10     	; 0x1c16 <__floatsisf+0x62>
    1c20:	88 0f       	add	r24, r24
    1c22:	96 95       	lsr	r25
    1c24:	87 95       	ror	r24
    1c26:	97 f9       	bld	r25, 7
    1c28:	08 95       	ret

00001c2a <__fp_cmp>:
    1c2a:	99 0f       	add	r25, r25
    1c2c:	00 08       	sbc	r0, r0
    1c2e:	55 0f       	add	r21, r21
    1c30:	aa 0b       	sbc	r26, r26
    1c32:	e0 e8       	ldi	r30, 0x80	; 128
    1c34:	fe ef       	ldi	r31, 0xFE	; 254
    1c36:	16 16       	cp	r1, r22
    1c38:	17 06       	cpc	r1, r23
    1c3a:	e8 07       	cpc	r30, r24
    1c3c:	f9 07       	cpc	r31, r25
    1c3e:	c0 f0       	brcs	.+48     	; 0x1c70 <__fp_cmp+0x46>
    1c40:	12 16       	cp	r1, r18
    1c42:	13 06       	cpc	r1, r19
    1c44:	e4 07       	cpc	r30, r20
    1c46:	f5 07       	cpc	r31, r21
    1c48:	98 f0       	brcs	.+38     	; 0x1c70 <__fp_cmp+0x46>
    1c4a:	62 1b       	sub	r22, r18
    1c4c:	73 0b       	sbc	r23, r19
    1c4e:	84 0b       	sbc	r24, r20
    1c50:	95 0b       	sbc	r25, r21
    1c52:	39 f4       	brne	.+14     	; 0x1c62 <__fp_cmp+0x38>
    1c54:	0a 26       	eor	r0, r26
    1c56:	61 f0       	breq	.+24     	; 0x1c70 <__fp_cmp+0x46>
    1c58:	23 2b       	or	r18, r19
    1c5a:	24 2b       	or	r18, r20
    1c5c:	25 2b       	or	r18, r21
    1c5e:	21 f4       	brne	.+8      	; 0x1c68 <__fp_cmp+0x3e>
    1c60:	08 95       	ret
    1c62:	0a 26       	eor	r0, r26
    1c64:	09 f4       	brne	.+2      	; 0x1c68 <__fp_cmp+0x3e>
    1c66:	a1 40       	sbci	r26, 0x01	; 1
    1c68:	a6 95       	lsr	r26
    1c6a:	8f ef       	ldi	r24, 0xFF	; 255
    1c6c:	81 1d       	adc	r24, r1
    1c6e:	81 1d       	adc	r24, r1
    1c70:	08 95       	ret

00001c72 <__fp_inf>:
    1c72:	97 f9       	bld	r25, 7
    1c74:	9f 67       	ori	r25, 0x7F	; 127
    1c76:	80 e8       	ldi	r24, 0x80	; 128
    1c78:	70 e0       	ldi	r23, 0x00	; 0
    1c7a:	60 e0       	ldi	r22, 0x00	; 0
    1c7c:	08 95       	ret

00001c7e <__fp_nan>:
    1c7e:	9f ef       	ldi	r25, 0xFF	; 255
    1c80:	80 ec       	ldi	r24, 0xC0	; 192
    1c82:	08 95       	ret

00001c84 <__fp_pscA>:
    1c84:	00 24       	eor	r0, r0
    1c86:	0a 94       	dec	r0
    1c88:	16 16       	cp	r1, r22
    1c8a:	17 06       	cpc	r1, r23
    1c8c:	18 06       	cpc	r1, r24
    1c8e:	09 06       	cpc	r0, r25
    1c90:	08 95       	ret

00001c92 <__fp_pscB>:
    1c92:	00 24       	eor	r0, r0
    1c94:	0a 94       	dec	r0
    1c96:	12 16       	cp	r1, r18
    1c98:	13 06       	cpc	r1, r19
    1c9a:	14 06       	cpc	r1, r20
    1c9c:	05 06       	cpc	r0, r21
    1c9e:	08 95       	ret

00001ca0 <__fp_round>:
    1ca0:	09 2e       	mov	r0, r25
    1ca2:	03 94       	inc	r0
    1ca4:	00 0c       	add	r0, r0
    1ca6:	11 f4       	brne	.+4      	; 0x1cac <__fp_round+0xc>
    1ca8:	88 23       	and	r24, r24
    1caa:	52 f0       	brmi	.+20     	; 0x1cc0 <__fp_round+0x20>
    1cac:	bb 0f       	add	r27, r27
    1cae:	40 f4       	brcc	.+16     	; 0x1cc0 <__fp_round+0x20>
    1cb0:	bf 2b       	or	r27, r31
    1cb2:	11 f4       	brne	.+4      	; 0x1cb8 <__fp_round+0x18>
    1cb4:	60 ff       	sbrs	r22, 0
    1cb6:	04 c0       	rjmp	.+8      	; 0x1cc0 <__fp_round+0x20>
    1cb8:	6f 5f       	subi	r22, 0xFF	; 255
    1cba:	7f 4f       	sbci	r23, 0xFF	; 255
    1cbc:	8f 4f       	sbci	r24, 0xFF	; 255
    1cbe:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc0:	08 95       	ret

00001cc2 <__fp_split3>:
    1cc2:	57 fd       	sbrc	r21, 7
    1cc4:	90 58       	subi	r25, 0x80	; 128
    1cc6:	44 0f       	add	r20, r20
    1cc8:	55 1f       	adc	r21, r21
    1cca:	59 f0       	breq	.+22     	; 0x1ce2 <__fp_splitA+0x10>
    1ccc:	5f 3f       	cpi	r21, 0xFF	; 255
    1cce:	71 f0       	breq	.+28     	; 0x1cec <__fp_splitA+0x1a>
    1cd0:	47 95       	ror	r20

00001cd2 <__fp_splitA>:
    1cd2:	88 0f       	add	r24, r24
    1cd4:	97 fb       	bst	r25, 7
    1cd6:	99 1f       	adc	r25, r25
    1cd8:	61 f0       	breq	.+24     	; 0x1cf2 <__fp_splitA+0x20>
    1cda:	9f 3f       	cpi	r25, 0xFF	; 255
    1cdc:	79 f0       	breq	.+30     	; 0x1cfc <__fp_splitA+0x2a>
    1cde:	87 95       	ror	r24
    1ce0:	08 95       	ret
    1ce2:	12 16       	cp	r1, r18
    1ce4:	13 06       	cpc	r1, r19
    1ce6:	14 06       	cpc	r1, r20
    1ce8:	55 1f       	adc	r21, r21
    1cea:	f2 cf       	rjmp	.-28     	; 0x1cd0 <__fp_split3+0xe>
    1cec:	46 95       	lsr	r20
    1cee:	f1 df       	rcall	.-30     	; 0x1cd2 <__fp_splitA>
    1cf0:	08 c0       	rjmp	.+16     	; 0x1d02 <__fp_splitA+0x30>
    1cf2:	16 16       	cp	r1, r22
    1cf4:	17 06       	cpc	r1, r23
    1cf6:	18 06       	cpc	r1, r24
    1cf8:	99 1f       	adc	r25, r25
    1cfa:	f1 cf       	rjmp	.-30     	; 0x1cde <__fp_splitA+0xc>
    1cfc:	86 95       	lsr	r24
    1cfe:	71 05       	cpc	r23, r1
    1d00:	61 05       	cpc	r22, r1
    1d02:	08 94       	sec
    1d04:	08 95       	ret

00001d06 <__fp_zero>:
    1d06:	e8 94       	clt

00001d08 <__fp_szero>:
    1d08:	bb 27       	eor	r27, r27
    1d0a:	66 27       	eor	r22, r22
    1d0c:	77 27       	eor	r23, r23
    1d0e:	cb 01       	movw	r24, r22
    1d10:	97 f9       	bld	r25, 7
    1d12:	08 95       	ret

00001d14 <__gesf2>:
    1d14:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <__fp_cmp>
    1d18:	08 f4       	brcc	.+2      	; 0x1d1c <__gesf2+0x8>
    1d1a:	8f ef       	ldi	r24, 0xFF	; 255
    1d1c:	08 95       	ret

00001d1e <__mulsf3>:
    1d1e:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__mulsf3x>
    1d22:	0c 94 50 0e 	jmp	0x1ca0	; 0x1ca0 <__fp_round>
    1d26:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_pscA>
    1d2a:	38 f0       	brcs	.+14     	; 0x1d3a <__mulsf3+0x1c>
    1d2c:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <__fp_pscB>
    1d30:	20 f0       	brcs	.+8      	; 0x1d3a <__mulsf3+0x1c>
    1d32:	95 23       	and	r25, r21
    1d34:	11 f0       	breq	.+4      	; 0x1d3a <__mulsf3+0x1c>
    1d36:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <__fp_inf>
    1d3a:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <__fp_nan>
    1d3e:	11 24       	eor	r1, r1
    1d40:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__fp_szero>

00001d44 <__mulsf3x>:
    1d44:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <__fp_split3>
    1d48:	70 f3       	brcs	.-36     	; 0x1d26 <__mulsf3+0x8>

00001d4a <__mulsf3_pse>:
    1d4a:	95 9f       	mul	r25, r21
    1d4c:	c1 f3       	breq	.-16     	; 0x1d3e <__mulsf3+0x20>
    1d4e:	95 0f       	add	r25, r21
    1d50:	50 e0       	ldi	r21, 0x00	; 0
    1d52:	55 1f       	adc	r21, r21
    1d54:	62 9f       	mul	r22, r18
    1d56:	f0 01       	movw	r30, r0
    1d58:	72 9f       	mul	r23, r18
    1d5a:	bb 27       	eor	r27, r27
    1d5c:	f0 0d       	add	r31, r0
    1d5e:	b1 1d       	adc	r27, r1
    1d60:	63 9f       	mul	r22, r19
    1d62:	aa 27       	eor	r26, r26
    1d64:	f0 0d       	add	r31, r0
    1d66:	b1 1d       	adc	r27, r1
    1d68:	aa 1f       	adc	r26, r26
    1d6a:	64 9f       	mul	r22, r20
    1d6c:	66 27       	eor	r22, r22
    1d6e:	b0 0d       	add	r27, r0
    1d70:	a1 1d       	adc	r26, r1
    1d72:	66 1f       	adc	r22, r22
    1d74:	82 9f       	mul	r24, r18
    1d76:	22 27       	eor	r18, r18
    1d78:	b0 0d       	add	r27, r0
    1d7a:	a1 1d       	adc	r26, r1
    1d7c:	62 1f       	adc	r22, r18
    1d7e:	73 9f       	mul	r23, r19
    1d80:	b0 0d       	add	r27, r0
    1d82:	a1 1d       	adc	r26, r1
    1d84:	62 1f       	adc	r22, r18
    1d86:	83 9f       	mul	r24, r19
    1d88:	a0 0d       	add	r26, r0
    1d8a:	61 1d       	adc	r22, r1
    1d8c:	22 1f       	adc	r18, r18
    1d8e:	74 9f       	mul	r23, r20
    1d90:	33 27       	eor	r19, r19
    1d92:	a0 0d       	add	r26, r0
    1d94:	61 1d       	adc	r22, r1
    1d96:	23 1f       	adc	r18, r19
    1d98:	84 9f       	mul	r24, r20
    1d9a:	60 0d       	add	r22, r0
    1d9c:	21 1d       	adc	r18, r1
    1d9e:	82 2f       	mov	r24, r18
    1da0:	76 2f       	mov	r23, r22
    1da2:	6a 2f       	mov	r22, r26
    1da4:	11 24       	eor	r1, r1
    1da6:	9f 57       	subi	r25, 0x7F	; 127
    1da8:	50 40       	sbci	r21, 0x00	; 0
    1daa:	9a f0       	brmi	.+38     	; 0x1dd2 <__mulsf3_pse+0x88>
    1dac:	f1 f0       	breq	.+60     	; 0x1dea <__mulsf3_pse+0xa0>
    1dae:	88 23       	and	r24, r24
    1db0:	4a f0       	brmi	.+18     	; 0x1dc4 <__mulsf3_pse+0x7a>
    1db2:	ee 0f       	add	r30, r30
    1db4:	ff 1f       	adc	r31, r31
    1db6:	bb 1f       	adc	r27, r27
    1db8:	66 1f       	adc	r22, r22
    1dba:	77 1f       	adc	r23, r23
    1dbc:	88 1f       	adc	r24, r24
    1dbe:	91 50       	subi	r25, 0x01	; 1
    1dc0:	50 40       	sbci	r21, 0x00	; 0
    1dc2:	a9 f7       	brne	.-22     	; 0x1dae <__mulsf3_pse+0x64>
    1dc4:	9e 3f       	cpi	r25, 0xFE	; 254
    1dc6:	51 05       	cpc	r21, r1
    1dc8:	80 f0       	brcs	.+32     	; 0x1dea <__mulsf3_pse+0xa0>
    1dca:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <__fp_inf>
    1dce:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__fp_szero>
    1dd2:	5f 3f       	cpi	r21, 0xFF	; 255
    1dd4:	e4 f3       	brlt	.-8      	; 0x1dce <__mulsf3_pse+0x84>
    1dd6:	98 3e       	cpi	r25, 0xE8	; 232
    1dd8:	d4 f3       	brlt	.-12     	; 0x1dce <__mulsf3_pse+0x84>
    1dda:	86 95       	lsr	r24
    1ddc:	77 95       	ror	r23
    1dde:	67 95       	ror	r22
    1de0:	b7 95       	ror	r27
    1de2:	f7 95       	ror	r31
    1de4:	e7 95       	ror	r30
    1de6:	9f 5f       	subi	r25, 0xFF	; 255
    1de8:	c1 f7       	brne	.-16     	; 0x1dda <__mulsf3_pse+0x90>
    1dea:	fe 2b       	or	r31, r30
    1dec:	88 0f       	add	r24, r24
    1dee:	91 1d       	adc	r25, r1
    1df0:	96 95       	lsr	r25
    1df2:	87 95       	ror	r24
    1df4:	97 f9       	bld	r25, 7
    1df6:	08 95       	ret

00001df8 <__ashldi3>:
    1df8:	0f 93       	push	r16
    1dfa:	08 30       	cpi	r16, 0x08	; 8
    1dfc:	90 f0       	brcs	.+36     	; 0x1e22 <__ashldi3+0x2a>
    1dfe:	98 2f       	mov	r25, r24
    1e00:	87 2f       	mov	r24, r23
    1e02:	76 2f       	mov	r23, r22
    1e04:	65 2f       	mov	r22, r21
    1e06:	54 2f       	mov	r21, r20
    1e08:	43 2f       	mov	r20, r19
    1e0a:	32 2f       	mov	r19, r18
    1e0c:	22 27       	eor	r18, r18
    1e0e:	08 50       	subi	r16, 0x08	; 8
    1e10:	f4 cf       	rjmp	.-24     	; 0x1dfa <__ashldi3+0x2>
    1e12:	22 0f       	add	r18, r18
    1e14:	33 1f       	adc	r19, r19
    1e16:	44 1f       	adc	r20, r20
    1e18:	55 1f       	adc	r21, r21
    1e1a:	66 1f       	adc	r22, r22
    1e1c:	77 1f       	adc	r23, r23
    1e1e:	88 1f       	adc	r24, r24
    1e20:	99 1f       	adc	r25, r25
    1e22:	0a 95       	dec	r16
    1e24:	b2 f7       	brpl	.-20     	; 0x1e12 <__ashldi3+0x1a>
    1e26:	0f 91       	pop	r16
    1e28:	08 95       	ret

00001e2a <__ashrdi3>:
    1e2a:	97 fb       	bst	r25, 7
    1e2c:	10 f8       	bld	r1, 0

00001e2e <__lshrdi3>:
    1e2e:	16 94       	lsr	r1
    1e30:	00 08       	sbc	r0, r0
    1e32:	0f 93       	push	r16
    1e34:	08 30       	cpi	r16, 0x08	; 8
    1e36:	98 f0       	brcs	.+38     	; 0x1e5e <__lshrdi3+0x30>
    1e38:	08 50       	subi	r16, 0x08	; 8
    1e3a:	23 2f       	mov	r18, r19
    1e3c:	34 2f       	mov	r19, r20
    1e3e:	45 2f       	mov	r20, r21
    1e40:	56 2f       	mov	r21, r22
    1e42:	67 2f       	mov	r22, r23
    1e44:	78 2f       	mov	r23, r24
    1e46:	89 2f       	mov	r24, r25
    1e48:	90 2d       	mov	r25, r0
    1e4a:	f4 cf       	rjmp	.-24     	; 0x1e34 <__lshrdi3+0x6>
    1e4c:	05 94       	asr	r0
    1e4e:	97 95       	ror	r25
    1e50:	87 95       	ror	r24
    1e52:	77 95       	ror	r23
    1e54:	67 95       	ror	r22
    1e56:	57 95       	ror	r21
    1e58:	47 95       	ror	r20
    1e5a:	37 95       	ror	r19
    1e5c:	27 95       	ror	r18
    1e5e:	0a 95       	dec	r16
    1e60:	aa f7       	brpl	.-22     	; 0x1e4c <__lshrdi3+0x1e>
    1e62:	0f 91       	pop	r16
    1e64:	08 95       	ret

00001e66 <__cmpdi2_s8>:
    1e66:	00 24       	eor	r0, r0
    1e68:	a7 fd       	sbrc	r26, 7
    1e6a:	00 94       	com	r0
    1e6c:	2a 17       	cp	r18, r26
    1e6e:	30 05       	cpc	r19, r0
    1e70:	40 05       	cpc	r20, r0
    1e72:	50 05       	cpc	r21, r0
    1e74:	60 05       	cpc	r22, r0
    1e76:	70 05       	cpc	r23, r0
    1e78:	80 05       	cpc	r24, r0
    1e7a:	90 05       	cpc	r25, r0
    1e7c:	08 95       	ret

00001e7e <__tablejump2__>:
    1e7e:	ee 0f       	add	r30, r30
    1e80:	ff 1f       	adc	r31, r31
    1e82:	05 90       	lpm	r0, Z+
    1e84:	f4 91       	lpm	r31, Z
    1e86:	e0 2d       	mov	r30, r0
    1e88:	09 94       	ijmp

00001e8a <malloc>:
    1e8a:	0f 93       	push	r16
    1e8c:	1f 93       	push	r17
    1e8e:	cf 93       	push	r28
    1e90:	df 93       	push	r29
    1e92:	82 30       	cpi	r24, 0x02	; 2
    1e94:	91 05       	cpc	r25, r1
    1e96:	10 f4       	brcc	.+4      	; 0x1e9c <malloc+0x12>
    1e98:	82 e0       	ldi	r24, 0x02	; 2
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	e0 91 87 01 	lds	r30, 0x0187	; 0x800187 <__flp>
    1ea0:	f0 91 88 01 	lds	r31, 0x0188	; 0x800188 <__flp+0x1>
    1ea4:	20 e0       	ldi	r18, 0x00	; 0
    1ea6:	30 e0       	ldi	r19, 0x00	; 0
    1ea8:	a0 e0       	ldi	r26, 0x00	; 0
    1eaa:	b0 e0       	ldi	r27, 0x00	; 0
    1eac:	30 97       	sbiw	r30, 0x00	; 0
    1eae:	19 f1       	breq	.+70     	; 0x1ef6 <malloc+0x6c>
    1eb0:	40 81       	ld	r20, Z
    1eb2:	51 81       	ldd	r21, Z+1	; 0x01
    1eb4:	02 81       	ldd	r16, Z+2	; 0x02
    1eb6:	13 81       	ldd	r17, Z+3	; 0x03
    1eb8:	48 17       	cp	r20, r24
    1eba:	59 07       	cpc	r21, r25
    1ebc:	c8 f0       	brcs	.+50     	; 0x1ef0 <malloc+0x66>
    1ebe:	84 17       	cp	r24, r20
    1ec0:	95 07       	cpc	r25, r21
    1ec2:	69 f4       	brne	.+26     	; 0x1ede <malloc+0x54>
    1ec4:	10 97       	sbiw	r26, 0x00	; 0
    1ec6:	31 f0       	breq	.+12     	; 0x1ed4 <malloc+0x4a>
    1ec8:	12 96       	adiw	r26, 0x02	; 2
    1eca:	0c 93       	st	X, r16
    1ecc:	12 97       	sbiw	r26, 0x02	; 2
    1ece:	13 96       	adiw	r26, 0x03	; 3
    1ed0:	1c 93       	st	X, r17
    1ed2:	27 c0       	rjmp	.+78     	; 0x1f22 <malloc+0x98>
    1ed4:	00 93 87 01 	sts	0x0187, r16	; 0x800187 <__flp>
    1ed8:	10 93 88 01 	sts	0x0188, r17	; 0x800188 <__flp+0x1>
    1edc:	22 c0       	rjmp	.+68     	; 0x1f22 <malloc+0x98>
    1ede:	21 15       	cp	r18, r1
    1ee0:	31 05       	cpc	r19, r1
    1ee2:	19 f0       	breq	.+6      	; 0x1eea <malloc+0x60>
    1ee4:	42 17       	cp	r20, r18
    1ee6:	53 07       	cpc	r21, r19
    1ee8:	18 f4       	brcc	.+6      	; 0x1ef0 <malloc+0x66>
    1eea:	9a 01       	movw	r18, r20
    1eec:	bd 01       	movw	r22, r26
    1eee:	ef 01       	movw	r28, r30
    1ef0:	df 01       	movw	r26, r30
    1ef2:	f8 01       	movw	r30, r16
    1ef4:	db cf       	rjmp	.-74     	; 0x1eac <malloc+0x22>
    1ef6:	21 15       	cp	r18, r1
    1ef8:	31 05       	cpc	r19, r1
    1efa:	f9 f0       	breq	.+62     	; 0x1f3a <malloc+0xb0>
    1efc:	28 1b       	sub	r18, r24
    1efe:	39 0b       	sbc	r19, r25
    1f00:	24 30       	cpi	r18, 0x04	; 4
    1f02:	31 05       	cpc	r19, r1
    1f04:	80 f4       	brcc	.+32     	; 0x1f26 <malloc+0x9c>
    1f06:	8a 81       	ldd	r24, Y+2	; 0x02
    1f08:	9b 81       	ldd	r25, Y+3	; 0x03
    1f0a:	61 15       	cp	r22, r1
    1f0c:	71 05       	cpc	r23, r1
    1f0e:	21 f0       	breq	.+8      	; 0x1f18 <malloc+0x8e>
    1f10:	fb 01       	movw	r30, r22
    1f12:	93 83       	std	Z+3, r25	; 0x03
    1f14:	82 83       	std	Z+2, r24	; 0x02
    1f16:	04 c0       	rjmp	.+8      	; 0x1f20 <malloc+0x96>
    1f18:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <__flp+0x1>
    1f1c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <__flp>
    1f20:	fe 01       	movw	r30, r28
    1f22:	32 96       	adiw	r30, 0x02	; 2
    1f24:	44 c0       	rjmp	.+136    	; 0x1fae <malloc+0x124>
    1f26:	fe 01       	movw	r30, r28
    1f28:	e2 0f       	add	r30, r18
    1f2a:	f3 1f       	adc	r31, r19
    1f2c:	81 93       	st	Z+, r24
    1f2e:	91 93       	st	Z+, r25
    1f30:	22 50       	subi	r18, 0x02	; 2
    1f32:	31 09       	sbc	r19, r1
    1f34:	39 83       	std	Y+1, r19	; 0x01
    1f36:	28 83       	st	Y, r18
    1f38:	3a c0       	rjmp	.+116    	; 0x1fae <malloc+0x124>
    1f3a:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    1f3e:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    1f42:	23 2b       	or	r18, r19
    1f44:	41 f4       	brne	.+16     	; 0x1f56 <malloc+0xcc>
    1f46:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1f4a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1f4e:	30 93 86 01 	sts	0x0186, r19	; 0x800186 <__brkval+0x1>
    1f52:	20 93 85 01 	sts	0x0185, r18	; 0x800185 <__brkval>
    1f56:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f5a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f5e:	21 15       	cp	r18, r1
    1f60:	31 05       	cpc	r19, r1
    1f62:	41 f4       	brne	.+16     	; 0x1f74 <malloc+0xea>
    1f64:	2d b7       	in	r18, 0x3d	; 61
    1f66:	3e b7       	in	r19, 0x3e	; 62
    1f68:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1f6c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1f70:	24 1b       	sub	r18, r20
    1f72:	35 0b       	sbc	r19, r21
    1f74:	e0 91 85 01 	lds	r30, 0x0185	; 0x800185 <__brkval>
    1f78:	f0 91 86 01 	lds	r31, 0x0186	; 0x800186 <__brkval+0x1>
    1f7c:	e2 17       	cp	r30, r18
    1f7e:	f3 07       	cpc	r31, r19
    1f80:	a0 f4       	brcc	.+40     	; 0x1faa <malloc+0x120>
    1f82:	2e 1b       	sub	r18, r30
    1f84:	3f 0b       	sbc	r19, r31
    1f86:	28 17       	cp	r18, r24
    1f88:	39 07       	cpc	r19, r25
    1f8a:	78 f0       	brcs	.+30     	; 0x1faa <malloc+0x120>
    1f8c:	ac 01       	movw	r20, r24
    1f8e:	4e 5f       	subi	r20, 0xFE	; 254
    1f90:	5f 4f       	sbci	r21, 0xFF	; 255
    1f92:	24 17       	cp	r18, r20
    1f94:	35 07       	cpc	r19, r21
    1f96:	48 f0       	brcs	.+18     	; 0x1faa <malloc+0x120>
    1f98:	4e 0f       	add	r20, r30
    1f9a:	5f 1f       	adc	r21, r31
    1f9c:	50 93 86 01 	sts	0x0186, r21	; 0x800186 <__brkval+0x1>
    1fa0:	40 93 85 01 	sts	0x0185, r20	; 0x800185 <__brkval>
    1fa4:	81 93       	st	Z+, r24
    1fa6:	91 93       	st	Z+, r25
    1fa8:	02 c0       	rjmp	.+4      	; 0x1fae <malloc+0x124>
    1faa:	e0 e0       	ldi	r30, 0x00	; 0
    1fac:	f0 e0       	ldi	r31, 0x00	; 0
    1fae:	cf 01       	movw	r24, r30
    1fb0:	df 91       	pop	r29
    1fb2:	cf 91       	pop	r28
    1fb4:	1f 91       	pop	r17
    1fb6:	0f 91       	pop	r16
    1fb8:	08 95       	ret

00001fba <free>:
    1fba:	cf 93       	push	r28
    1fbc:	df 93       	push	r29
    1fbe:	00 97       	sbiw	r24, 0x00	; 0
    1fc0:	09 f4       	brne	.+2      	; 0x1fc4 <free+0xa>
    1fc2:	81 c0       	rjmp	.+258    	; 0x20c6 <free+0x10c>
    1fc4:	fc 01       	movw	r30, r24
    1fc6:	32 97       	sbiw	r30, 0x02	; 2
    1fc8:	13 82       	std	Z+3, r1	; 0x03
    1fca:	12 82       	std	Z+2, r1	; 0x02
    1fcc:	a0 91 87 01 	lds	r26, 0x0187	; 0x800187 <__flp>
    1fd0:	b0 91 88 01 	lds	r27, 0x0188	; 0x800188 <__flp+0x1>
    1fd4:	10 97       	sbiw	r26, 0x00	; 0
    1fd6:	81 f4       	brne	.+32     	; 0x1ff8 <free+0x3e>
    1fd8:	20 81       	ld	r18, Z
    1fda:	31 81       	ldd	r19, Z+1	; 0x01
    1fdc:	82 0f       	add	r24, r18
    1fde:	93 1f       	adc	r25, r19
    1fe0:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    1fe4:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    1fe8:	28 17       	cp	r18, r24
    1fea:	39 07       	cpc	r19, r25
    1fec:	51 f5       	brne	.+84     	; 0x2042 <free+0x88>
    1fee:	f0 93 86 01 	sts	0x0186, r31	; 0x800186 <__brkval+0x1>
    1ff2:	e0 93 85 01 	sts	0x0185, r30	; 0x800185 <__brkval>
    1ff6:	67 c0       	rjmp	.+206    	; 0x20c6 <free+0x10c>
    1ff8:	ed 01       	movw	r28, r26
    1ffa:	20 e0       	ldi	r18, 0x00	; 0
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	ce 17       	cp	r28, r30
    2000:	df 07       	cpc	r29, r31
    2002:	40 f4       	brcc	.+16     	; 0x2014 <free+0x5a>
    2004:	4a 81       	ldd	r20, Y+2	; 0x02
    2006:	5b 81       	ldd	r21, Y+3	; 0x03
    2008:	9e 01       	movw	r18, r28
    200a:	41 15       	cp	r20, r1
    200c:	51 05       	cpc	r21, r1
    200e:	f1 f0       	breq	.+60     	; 0x204c <free+0x92>
    2010:	ea 01       	movw	r28, r20
    2012:	f5 cf       	rjmp	.-22     	; 0x1ffe <free+0x44>
    2014:	d3 83       	std	Z+3, r29	; 0x03
    2016:	c2 83       	std	Z+2, r28	; 0x02
    2018:	40 81       	ld	r20, Z
    201a:	51 81       	ldd	r21, Z+1	; 0x01
    201c:	84 0f       	add	r24, r20
    201e:	95 1f       	adc	r25, r21
    2020:	c8 17       	cp	r28, r24
    2022:	d9 07       	cpc	r29, r25
    2024:	59 f4       	brne	.+22     	; 0x203c <free+0x82>
    2026:	88 81       	ld	r24, Y
    2028:	99 81       	ldd	r25, Y+1	; 0x01
    202a:	84 0f       	add	r24, r20
    202c:	95 1f       	adc	r25, r21
    202e:	02 96       	adiw	r24, 0x02	; 2
    2030:	91 83       	std	Z+1, r25	; 0x01
    2032:	80 83       	st	Z, r24
    2034:	8a 81       	ldd	r24, Y+2	; 0x02
    2036:	9b 81       	ldd	r25, Y+3	; 0x03
    2038:	93 83       	std	Z+3, r25	; 0x03
    203a:	82 83       	std	Z+2, r24	; 0x02
    203c:	21 15       	cp	r18, r1
    203e:	31 05       	cpc	r19, r1
    2040:	29 f4       	brne	.+10     	; 0x204c <free+0x92>
    2042:	f0 93 88 01 	sts	0x0188, r31	; 0x800188 <__flp+0x1>
    2046:	e0 93 87 01 	sts	0x0187, r30	; 0x800187 <__flp>
    204a:	3d c0       	rjmp	.+122    	; 0x20c6 <free+0x10c>
    204c:	e9 01       	movw	r28, r18
    204e:	fb 83       	std	Y+3, r31	; 0x03
    2050:	ea 83       	std	Y+2, r30	; 0x02
    2052:	49 91       	ld	r20, Y+
    2054:	59 91       	ld	r21, Y+
    2056:	c4 0f       	add	r28, r20
    2058:	d5 1f       	adc	r29, r21
    205a:	ec 17       	cp	r30, r28
    205c:	fd 07       	cpc	r31, r29
    205e:	61 f4       	brne	.+24     	; 0x2078 <free+0xbe>
    2060:	80 81       	ld	r24, Z
    2062:	91 81       	ldd	r25, Z+1	; 0x01
    2064:	84 0f       	add	r24, r20
    2066:	95 1f       	adc	r25, r21
    2068:	02 96       	adiw	r24, 0x02	; 2
    206a:	e9 01       	movw	r28, r18
    206c:	99 83       	std	Y+1, r25	; 0x01
    206e:	88 83       	st	Y, r24
    2070:	82 81       	ldd	r24, Z+2	; 0x02
    2072:	93 81       	ldd	r25, Z+3	; 0x03
    2074:	9b 83       	std	Y+3, r25	; 0x03
    2076:	8a 83       	std	Y+2, r24	; 0x02
    2078:	e0 e0       	ldi	r30, 0x00	; 0
    207a:	f0 e0       	ldi	r31, 0x00	; 0
    207c:	12 96       	adiw	r26, 0x02	; 2
    207e:	8d 91       	ld	r24, X+
    2080:	9c 91       	ld	r25, X
    2082:	13 97       	sbiw	r26, 0x03	; 3
    2084:	00 97       	sbiw	r24, 0x00	; 0
    2086:	19 f0       	breq	.+6      	; 0x208e <free+0xd4>
    2088:	fd 01       	movw	r30, r26
    208a:	dc 01       	movw	r26, r24
    208c:	f7 cf       	rjmp	.-18     	; 0x207c <free+0xc2>
    208e:	8d 91       	ld	r24, X+
    2090:	9c 91       	ld	r25, X
    2092:	11 97       	sbiw	r26, 0x01	; 1
    2094:	9d 01       	movw	r18, r26
    2096:	2e 5f       	subi	r18, 0xFE	; 254
    2098:	3f 4f       	sbci	r19, 0xFF	; 255
    209a:	82 0f       	add	r24, r18
    209c:	93 1f       	adc	r25, r19
    209e:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <__brkval>
    20a2:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <__brkval+0x1>
    20a6:	28 17       	cp	r18, r24
    20a8:	39 07       	cpc	r19, r25
    20aa:	69 f4       	brne	.+26     	; 0x20c6 <free+0x10c>
    20ac:	30 97       	sbiw	r30, 0x00	; 0
    20ae:	29 f4       	brne	.+10     	; 0x20ba <free+0x100>
    20b0:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <__flp+0x1>
    20b4:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <__flp>
    20b8:	02 c0       	rjmp	.+4      	; 0x20be <free+0x104>
    20ba:	13 82       	std	Z+3, r1	; 0x03
    20bc:	12 82       	std	Z+2, r1	; 0x02
    20be:	b0 93 86 01 	sts	0x0186, r27	; 0x800186 <__brkval+0x1>
    20c2:	a0 93 85 01 	sts	0x0185, r26	; 0x800185 <__brkval>
    20c6:	df 91       	pop	r29
    20c8:	cf 91       	pop	r28
    20ca:	08 95       	ret

000020cc <realloc>:
    20cc:	a0 e0       	ldi	r26, 0x00	; 0
    20ce:	b0 e0       	ldi	r27, 0x00	; 0
    20d0:	ec e6       	ldi	r30, 0x6C	; 108
    20d2:	f0 e1       	ldi	r31, 0x10	; 16
    20d4:	0c 94 1c 14 	jmp	0x2838	; 0x2838 <__prologue_saves__+0x8>
    20d8:	ec 01       	movw	r28, r24
    20da:	00 97       	sbiw	r24, 0x00	; 0
    20dc:	21 f4       	brne	.+8      	; 0x20e6 <realloc+0x1a>
    20de:	cb 01       	movw	r24, r22
    20e0:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <malloc>
    20e4:	b4 c0       	rjmp	.+360    	; 0x224e <realloc+0x182>
    20e6:	fc 01       	movw	r30, r24
    20e8:	e6 0f       	add	r30, r22
    20ea:	f7 1f       	adc	r31, r23
    20ec:	9c 01       	movw	r18, r24
    20ee:	22 50       	subi	r18, 0x02	; 2
    20f0:	31 09       	sbc	r19, r1
    20f2:	e2 17       	cp	r30, r18
    20f4:	f3 07       	cpc	r31, r19
    20f6:	08 f4       	brcc	.+2      	; 0x20fa <realloc+0x2e>
    20f8:	a8 c0       	rjmp	.+336    	; 0x224a <realloc+0x17e>
    20fa:	d9 01       	movw	r26, r18
    20fc:	0d 91       	ld	r16, X+
    20fe:	1c 91       	ld	r17, X
    2100:	11 97       	sbiw	r26, 0x01	; 1
    2102:	06 17       	cp	r16, r22
    2104:	17 07       	cpc	r17, r23
    2106:	b0 f0       	brcs	.+44     	; 0x2134 <realloc+0x68>
    2108:	05 30       	cpi	r16, 0x05	; 5
    210a:	11 05       	cpc	r17, r1
    210c:	08 f4       	brcc	.+2      	; 0x2110 <realloc+0x44>
    210e:	9b c0       	rjmp	.+310    	; 0x2246 <realloc+0x17a>
    2110:	c8 01       	movw	r24, r16
    2112:	04 97       	sbiw	r24, 0x04	; 4
    2114:	86 17       	cp	r24, r22
    2116:	97 07       	cpc	r25, r23
    2118:	08 f4       	brcc	.+2      	; 0x211c <realloc+0x50>
    211a:	95 c0       	rjmp	.+298    	; 0x2246 <realloc+0x17a>
    211c:	02 50       	subi	r16, 0x02	; 2
    211e:	11 09       	sbc	r17, r1
    2120:	06 1b       	sub	r16, r22
    2122:	17 0b       	sbc	r17, r23
    2124:	01 93       	st	Z+, r16
    2126:	11 93       	st	Z+, r17
    2128:	6d 93       	st	X+, r22
    212a:	7c 93       	st	X, r23
    212c:	cf 01       	movw	r24, r30
    212e:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <free>
    2132:	89 c0       	rjmp	.+274    	; 0x2246 <realloc+0x17a>
    2134:	5b 01       	movw	r10, r22
    2136:	a0 1a       	sub	r10, r16
    2138:	b1 0a       	sbc	r11, r17
    213a:	4c 01       	movw	r8, r24
    213c:	80 0e       	add	r8, r16
    213e:	91 1e       	adc	r9, r17
    2140:	a0 91 87 01 	lds	r26, 0x0187	; 0x800187 <__flp>
    2144:	b0 91 88 01 	lds	r27, 0x0188	; 0x800188 <__flp+0x1>
    2148:	61 2c       	mov	r6, r1
    214a:	71 2c       	mov	r7, r1
    214c:	e1 2c       	mov	r14, r1
    214e:	f1 2c       	mov	r15, r1
    2150:	10 97       	sbiw	r26, 0x00	; 0
    2152:	09 f4       	brne	.+2      	; 0x2156 <realloc+0x8a>
    2154:	46 c0       	rjmp	.+140    	; 0x21e2 <realloc+0x116>
    2156:	8d 91       	ld	r24, X+
    2158:	9c 91       	ld	r25, X
    215a:	11 97       	sbiw	r26, 0x01	; 1
    215c:	a8 15       	cp	r26, r8
    215e:	b9 05       	cpc	r27, r9
    2160:	b1 f5       	brne	.+108    	; 0x21ce <realloc+0x102>
    2162:	6c 01       	movw	r12, r24
    2164:	42 e0       	ldi	r20, 0x02	; 2
    2166:	c4 0e       	add	r12, r20
    2168:	d1 1c       	adc	r13, r1
    216a:	ca 14       	cp	r12, r10
    216c:	db 04       	cpc	r13, r11
    216e:	78 f1       	brcs	.+94     	; 0x21ce <realloc+0x102>
    2170:	4c 01       	movw	r8, r24
    2172:	8a 18       	sub	r8, r10
    2174:	9b 08       	sbc	r9, r11
    2176:	64 01       	movw	r12, r8
    2178:	42 e0       	ldi	r20, 0x02	; 2
    217a:	c4 0e       	add	r12, r20
    217c:	d1 1c       	adc	r13, r1
    217e:	12 96       	adiw	r26, 0x02	; 2
    2180:	bc 90       	ld	r11, X
    2182:	12 97       	sbiw	r26, 0x02	; 2
    2184:	13 96       	adiw	r26, 0x03	; 3
    2186:	ac 91       	ld	r26, X
    2188:	b5 e0       	ldi	r27, 0x05	; 5
    218a:	cb 16       	cp	r12, r27
    218c:	d1 04       	cpc	r13, r1
    218e:	40 f0       	brcs	.+16     	; 0x21a0 <realloc+0xd4>
    2190:	b2 82       	std	Z+2, r11	; 0x02
    2192:	a3 83       	std	Z+3, r26	; 0x03
    2194:	91 82       	std	Z+1, r9	; 0x01
    2196:	80 82       	st	Z, r8
    2198:	d9 01       	movw	r26, r18
    219a:	6d 93       	st	X+, r22
    219c:	7c 93       	st	X, r23
    219e:	09 c0       	rjmp	.+18     	; 0x21b2 <realloc+0xe6>
    21a0:	0e 5f       	subi	r16, 0xFE	; 254
    21a2:	1f 4f       	sbci	r17, 0xFF	; 255
    21a4:	80 0f       	add	r24, r16
    21a6:	91 1f       	adc	r25, r17
    21a8:	f9 01       	movw	r30, r18
    21aa:	91 83       	std	Z+1, r25	; 0x01
    21ac:	80 83       	st	Z, r24
    21ae:	eb 2d       	mov	r30, r11
    21b0:	fa 2f       	mov	r31, r26
    21b2:	e1 14       	cp	r14, r1
    21b4:	f1 04       	cpc	r15, r1
    21b6:	31 f0       	breq	.+12     	; 0x21c4 <realloc+0xf8>
    21b8:	d7 01       	movw	r26, r14
    21ba:	13 96       	adiw	r26, 0x03	; 3
    21bc:	fc 93       	st	X, r31
    21be:	ee 93       	st	-X, r30
    21c0:	12 97       	sbiw	r26, 0x02	; 2
    21c2:	41 c0       	rjmp	.+130    	; 0x2246 <realloc+0x17a>
    21c4:	f0 93 88 01 	sts	0x0188, r31	; 0x800188 <__flp+0x1>
    21c8:	e0 93 87 01 	sts	0x0187, r30	; 0x800187 <__flp>
    21cc:	3c c0       	rjmp	.+120    	; 0x2246 <realloc+0x17a>
    21ce:	68 16       	cp	r6, r24
    21d0:	79 06       	cpc	r7, r25
    21d2:	08 f4       	brcc	.+2      	; 0x21d6 <realloc+0x10a>
    21d4:	3c 01       	movw	r6, r24
    21d6:	7d 01       	movw	r14, r26
    21d8:	12 96       	adiw	r26, 0x02	; 2
    21da:	0d 90       	ld	r0, X+
    21dc:	bc 91       	ld	r27, X
    21de:	a0 2d       	mov	r26, r0
    21e0:	b7 cf       	rjmp	.-146    	; 0x2150 <realloc+0x84>
    21e2:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <__brkval>
    21e6:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <__brkval+0x1>
    21ea:	88 16       	cp	r8, r24
    21ec:	99 06       	cpc	r9, r25
    21ee:	e1 f4       	brne	.+56     	; 0x2228 <realloc+0x15c>
    21f0:	66 16       	cp	r6, r22
    21f2:	77 06       	cpc	r7, r23
    21f4:	c8 f4       	brcc	.+50     	; 0x2228 <realloc+0x15c>
    21f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21fa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21fe:	00 97       	sbiw	r24, 0x00	; 0
    2200:	41 f4       	brne	.+16     	; 0x2212 <realloc+0x146>
    2202:	8d b7       	in	r24, 0x3d	; 61
    2204:	9e b7       	in	r25, 0x3e	; 62
    2206:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    220a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    220e:	84 1b       	sub	r24, r20
    2210:	95 0b       	sbc	r25, r21
    2212:	e8 17       	cp	r30, r24
    2214:	f9 07       	cpc	r31, r25
    2216:	c8 f4       	brcc	.+50     	; 0x224a <realloc+0x17e>
    2218:	f0 93 86 01 	sts	0x0186, r31	; 0x800186 <__brkval+0x1>
    221c:	e0 93 85 01 	sts	0x0185, r30	; 0x800185 <__brkval>
    2220:	f9 01       	movw	r30, r18
    2222:	71 83       	std	Z+1, r23	; 0x01
    2224:	60 83       	st	Z, r22
    2226:	0f c0       	rjmp	.+30     	; 0x2246 <realloc+0x17a>
    2228:	cb 01       	movw	r24, r22
    222a:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <malloc>
    222e:	7c 01       	movw	r14, r24
    2230:	00 97       	sbiw	r24, 0x00	; 0
    2232:	59 f0       	breq	.+22     	; 0x224a <realloc+0x17e>
    2234:	a8 01       	movw	r20, r16
    2236:	be 01       	movw	r22, r28
    2238:	0e 94 2c 11 	call	0x2258	; 0x2258 <memcpy>
    223c:	ce 01       	movw	r24, r28
    223e:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <free>
    2242:	c7 01       	movw	r24, r14
    2244:	04 c0       	rjmp	.+8      	; 0x224e <realloc+0x182>
    2246:	ce 01       	movw	r24, r28
    2248:	02 c0       	rjmp	.+4      	; 0x224e <realloc+0x182>
    224a:	80 e0       	ldi	r24, 0x00	; 0
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	cd b7       	in	r28, 0x3d	; 61
    2250:	de b7       	in	r29, 0x3e	; 62
    2252:	ee e0       	ldi	r30, 0x0E	; 14
    2254:	0c 94 38 14 	jmp	0x2870	; 0x2870 <__epilogue_restores__+0x8>

00002258 <memcpy>:
    2258:	fb 01       	movw	r30, r22
    225a:	dc 01       	movw	r26, r24
    225c:	02 c0       	rjmp	.+4      	; 0x2262 <memcpy+0xa>
    225e:	01 90       	ld	r0, Z+
    2260:	0d 92       	st	X+, r0
    2262:	41 50       	subi	r20, 0x01	; 1
    2264:	50 40       	sbci	r21, 0x00	; 0
    2266:	d8 f7       	brcc	.-10     	; 0x225e <memcpy+0x6>
    2268:	08 95       	ret

0000226a <snprintf>:
    226a:	ae e0       	ldi	r26, 0x0E	; 14
    226c:	b0 e0       	ldi	r27, 0x00	; 0
    226e:	eb e3       	ldi	r30, 0x3B	; 59
    2270:	f1 e1       	ldi	r31, 0x11	; 17
    2272:	0c 94 26 14 	jmp	0x284c	; 0x284c <__prologue_saves__+0x1c>
    2276:	0d 89       	ldd	r16, Y+21	; 0x15
    2278:	1e 89       	ldd	r17, Y+22	; 0x16
    227a:	8f 89       	ldd	r24, Y+23	; 0x17
    227c:	98 8d       	ldd	r25, Y+24	; 0x18
    227e:	26 e0       	ldi	r18, 0x06	; 6
    2280:	2c 83       	std	Y+4, r18	; 0x04
    2282:	1a 83       	std	Y+2, r17	; 0x02
    2284:	09 83       	std	Y+1, r16	; 0x01
    2286:	97 ff       	sbrs	r25, 7
    2288:	02 c0       	rjmp	.+4      	; 0x228e <snprintf+0x24>
    228a:	80 e0       	ldi	r24, 0x00	; 0
    228c:	90 e8       	ldi	r25, 0x80	; 128
    228e:	01 97       	sbiw	r24, 0x01	; 1
    2290:	9e 83       	std	Y+6, r25	; 0x06
    2292:	8d 83       	std	Y+5, r24	; 0x05
    2294:	ae 01       	movw	r20, r28
    2296:	45 5e       	subi	r20, 0xE5	; 229
    2298:	5f 4f       	sbci	r21, 0xFF	; 255
    229a:	69 8d       	ldd	r22, Y+25	; 0x19
    229c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    229e:	ce 01       	movw	r24, r28
    22a0:	01 96       	adiw	r24, 0x01	; 1
    22a2:	0e 94 87 11 	call	0x230e	; 0x230e <vfprintf>
    22a6:	4d 81       	ldd	r20, Y+5	; 0x05
    22a8:	5e 81       	ldd	r21, Y+6	; 0x06
    22aa:	57 fd       	sbrc	r21, 7
    22ac:	0a c0       	rjmp	.+20     	; 0x22c2 <snprintf+0x58>
    22ae:	2f 81       	ldd	r18, Y+7	; 0x07
    22b0:	38 85       	ldd	r19, Y+8	; 0x08
    22b2:	42 17       	cp	r20, r18
    22b4:	53 07       	cpc	r21, r19
    22b6:	0c f4       	brge	.+2      	; 0x22ba <snprintf+0x50>
    22b8:	9a 01       	movw	r18, r20
    22ba:	f8 01       	movw	r30, r16
    22bc:	e2 0f       	add	r30, r18
    22be:	f3 1f       	adc	r31, r19
    22c0:	10 82       	st	Z, r1
    22c2:	2e 96       	adiw	r28, 0x0e	; 14
    22c4:	e4 e0       	ldi	r30, 0x04	; 4
    22c6:	0c 94 42 14 	jmp	0x2884	; 0x2884 <__epilogue_restores__+0x1c>

000022ca <sprintf>:
    22ca:	ae e0       	ldi	r26, 0x0E	; 14
    22cc:	b0 e0       	ldi	r27, 0x00	; 0
    22ce:	eb e6       	ldi	r30, 0x6B	; 107
    22d0:	f1 e1       	ldi	r31, 0x11	; 17
    22d2:	0c 94 26 14 	jmp	0x284c	; 0x284c <__prologue_saves__+0x1c>
    22d6:	0d 89       	ldd	r16, Y+21	; 0x15
    22d8:	1e 89       	ldd	r17, Y+22	; 0x16
    22da:	86 e0       	ldi	r24, 0x06	; 6
    22dc:	8c 83       	std	Y+4, r24	; 0x04
    22de:	1a 83       	std	Y+2, r17	; 0x02
    22e0:	09 83       	std	Y+1, r16	; 0x01
    22e2:	8f ef       	ldi	r24, 0xFF	; 255
    22e4:	9f e7       	ldi	r25, 0x7F	; 127
    22e6:	9e 83       	std	Y+6, r25	; 0x06
    22e8:	8d 83       	std	Y+5, r24	; 0x05
    22ea:	ae 01       	movw	r20, r28
    22ec:	47 5e       	subi	r20, 0xE7	; 231
    22ee:	5f 4f       	sbci	r21, 0xFF	; 255
    22f0:	6f 89       	ldd	r22, Y+23	; 0x17
    22f2:	78 8d       	ldd	r23, Y+24	; 0x18
    22f4:	ce 01       	movw	r24, r28
    22f6:	01 96       	adiw	r24, 0x01	; 1
    22f8:	0e 94 87 11 	call	0x230e	; 0x230e <vfprintf>
    22fc:	ef 81       	ldd	r30, Y+7	; 0x07
    22fe:	f8 85       	ldd	r31, Y+8	; 0x08
    2300:	e0 0f       	add	r30, r16
    2302:	f1 1f       	adc	r31, r17
    2304:	10 82       	st	Z, r1
    2306:	2e 96       	adiw	r28, 0x0e	; 14
    2308:	e4 e0       	ldi	r30, 0x04	; 4
    230a:	0c 94 42 14 	jmp	0x2884	; 0x2884 <__epilogue_restores__+0x1c>

0000230e <vfprintf>:
    230e:	ab e0       	ldi	r26, 0x0B	; 11
    2310:	b0 e0       	ldi	r27, 0x00	; 0
    2312:	ed e8       	ldi	r30, 0x8D	; 141
    2314:	f1 e1       	ldi	r31, 0x11	; 17
    2316:	0c 94 18 14 	jmp	0x2830	; 0x2830 <__prologue_saves__>
    231a:	6c 01       	movw	r12, r24
    231c:	7b 01       	movw	r14, r22
    231e:	8a 01       	movw	r16, r20
    2320:	fc 01       	movw	r30, r24
    2322:	17 82       	std	Z+7, r1	; 0x07
    2324:	16 82       	std	Z+6, r1	; 0x06
    2326:	83 81       	ldd	r24, Z+3	; 0x03
    2328:	81 ff       	sbrs	r24, 1
    232a:	cc c1       	rjmp	.+920    	; 0x26c4 <vfprintf+0x3b6>
    232c:	ce 01       	movw	r24, r28
    232e:	01 96       	adiw	r24, 0x01	; 1
    2330:	3c 01       	movw	r6, r24
    2332:	f6 01       	movw	r30, r12
    2334:	93 81       	ldd	r25, Z+3	; 0x03
    2336:	f7 01       	movw	r30, r14
    2338:	93 fd       	sbrc	r25, 3
    233a:	85 91       	lpm	r24, Z+
    233c:	93 ff       	sbrs	r25, 3
    233e:	81 91       	ld	r24, Z+
    2340:	7f 01       	movw	r14, r30
    2342:	88 23       	and	r24, r24
    2344:	09 f4       	brne	.+2      	; 0x2348 <vfprintf+0x3a>
    2346:	ba c1       	rjmp	.+884    	; 0x26bc <vfprintf+0x3ae>
    2348:	85 32       	cpi	r24, 0x25	; 37
    234a:	39 f4       	brne	.+14     	; 0x235a <vfprintf+0x4c>
    234c:	93 fd       	sbrc	r25, 3
    234e:	85 91       	lpm	r24, Z+
    2350:	93 ff       	sbrs	r25, 3
    2352:	81 91       	ld	r24, Z+
    2354:	7f 01       	movw	r14, r30
    2356:	85 32       	cpi	r24, 0x25	; 37
    2358:	29 f4       	brne	.+10     	; 0x2364 <vfprintf+0x56>
    235a:	b6 01       	movw	r22, r12
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    2362:	e7 cf       	rjmp	.-50     	; 0x2332 <vfprintf+0x24>
    2364:	91 2c       	mov	r9, r1
    2366:	21 2c       	mov	r2, r1
    2368:	31 2c       	mov	r3, r1
    236a:	ff e1       	ldi	r31, 0x1F	; 31
    236c:	f3 15       	cp	r31, r3
    236e:	d8 f0       	brcs	.+54     	; 0x23a6 <vfprintf+0x98>
    2370:	8b 32       	cpi	r24, 0x2B	; 43
    2372:	79 f0       	breq	.+30     	; 0x2392 <vfprintf+0x84>
    2374:	38 f4       	brcc	.+14     	; 0x2384 <vfprintf+0x76>
    2376:	80 32       	cpi	r24, 0x20	; 32
    2378:	79 f0       	breq	.+30     	; 0x2398 <vfprintf+0x8a>
    237a:	83 32       	cpi	r24, 0x23	; 35
    237c:	a1 f4       	brne	.+40     	; 0x23a6 <vfprintf+0x98>
    237e:	23 2d       	mov	r18, r3
    2380:	20 61       	ori	r18, 0x10	; 16
    2382:	1d c0       	rjmp	.+58     	; 0x23be <vfprintf+0xb0>
    2384:	8d 32       	cpi	r24, 0x2D	; 45
    2386:	61 f0       	breq	.+24     	; 0x23a0 <vfprintf+0x92>
    2388:	80 33       	cpi	r24, 0x30	; 48
    238a:	69 f4       	brne	.+26     	; 0x23a6 <vfprintf+0x98>
    238c:	23 2d       	mov	r18, r3
    238e:	21 60       	ori	r18, 0x01	; 1
    2390:	16 c0       	rjmp	.+44     	; 0x23be <vfprintf+0xb0>
    2392:	83 2d       	mov	r24, r3
    2394:	82 60       	ori	r24, 0x02	; 2
    2396:	38 2e       	mov	r3, r24
    2398:	e3 2d       	mov	r30, r3
    239a:	e4 60       	ori	r30, 0x04	; 4
    239c:	3e 2e       	mov	r3, r30
    239e:	2a c0       	rjmp	.+84     	; 0x23f4 <vfprintf+0xe6>
    23a0:	f3 2d       	mov	r31, r3
    23a2:	f8 60       	ori	r31, 0x08	; 8
    23a4:	1d c0       	rjmp	.+58     	; 0x23e0 <vfprintf+0xd2>
    23a6:	37 fc       	sbrc	r3, 7
    23a8:	2d c0       	rjmp	.+90     	; 0x2404 <vfprintf+0xf6>
    23aa:	20 ed       	ldi	r18, 0xD0	; 208
    23ac:	28 0f       	add	r18, r24
    23ae:	2a 30       	cpi	r18, 0x0A	; 10
    23b0:	40 f0       	brcs	.+16     	; 0x23c2 <vfprintf+0xb4>
    23b2:	8e 32       	cpi	r24, 0x2E	; 46
    23b4:	b9 f4       	brne	.+46     	; 0x23e4 <vfprintf+0xd6>
    23b6:	36 fc       	sbrc	r3, 6
    23b8:	81 c1       	rjmp	.+770    	; 0x26bc <vfprintf+0x3ae>
    23ba:	23 2d       	mov	r18, r3
    23bc:	20 64       	ori	r18, 0x40	; 64
    23be:	32 2e       	mov	r3, r18
    23c0:	19 c0       	rjmp	.+50     	; 0x23f4 <vfprintf+0xe6>
    23c2:	36 fe       	sbrs	r3, 6
    23c4:	06 c0       	rjmp	.+12     	; 0x23d2 <vfprintf+0xc4>
    23c6:	8a e0       	ldi	r24, 0x0A	; 10
    23c8:	98 9e       	mul	r9, r24
    23ca:	20 0d       	add	r18, r0
    23cc:	11 24       	eor	r1, r1
    23ce:	92 2e       	mov	r9, r18
    23d0:	11 c0       	rjmp	.+34     	; 0x23f4 <vfprintf+0xe6>
    23d2:	ea e0       	ldi	r30, 0x0A	; 10
    23d4:	2e 9e       	mul	r2, r30
    23d6:	20 0d       	add	r18, r0
    23d8:	11 24       	eor	r1, r1
    23da:	22 2e       	mov	r2, r18
    23dc:	f3 2d       	mov	r31, r3
    23de:	f0 62       	ori	r31, 0x20	; 32
    23e0:	3f 2e       	mov	r3, r31
    23e2:	08 c0       	rjmp	.+16     	; 0x23f4 <vfprintf+0xe6>
    23e4:	8c 36       	cpi	r24, 0x6C	; 108
    23e6:	21 f4       	brne	.+8      	; 0x23f0 <vfprintf+0xe2>
    23e8:	83 2d       	mov	r24, r3
    23ea:	80 68       	ori	r24, 0x80	; 128
    23ec:	38 2e       	mov	r3, r24
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <vfprintf+0xe6>
    23f0:	88 36       	cpi	r24, 0x68	; 104
    23f2:	41 f4       	brne	.+16     	; 0x2404 <vfprintf+0xf6>
    23f4:	f7 01       	movw	r30, r14
    23f6:	93 fd       	sbrc	r25, 3
    23f8:	85 91       	lpm	r24, Z+
    23fa:	93 ff       	sbrs	r25, 3
    23fc:	81 91       	ld	r24, Z+
    23fe:	7f 01       	movw	r14, r30
    2400:	81 11       	cpse	r24, r1
    2402:	b3 cf       	rjmp	.-154    	; 0x236a <vfprintf+0x5c>
    2404:	98 2f       	mov	r25, r24
    2406:	9f 7d       	andi	r25, 0xDF	; 223
    2408:	95 54       	subi	r25, 0x45	; 69
    240a:	93 30       	cpi	r25, 0x03	; 3
    240c:	28 f4       	brcc	.+10     	; 0x2418 <vfprintf+0x10a>
    240e:	0c 5f       	subi	r16, 0xFC	; 252
    2410:	1f 4f       	sbci	r17, 0xFF	; 255
    2412:	9f e3       	ldi	r25, 0x3F	; 63
    2414:	99 83       	std	Y+1, r25	; 0x01
    2416:	0d c0       	rjmp	.+26     	; 0x2432 <vfprintf+0x124>
    2418:	83 36       	cpi	r24, 0x63	; 99
    241a:	31 f0       	breq	.+12     	; 0x2428 <vfprintf+0x11a>
    241c:	83 37       	cpi	r24, 0x73	; 115
    241e:	71 f0       	breq	.+28     	; 0x243c <vfprintf+0x12e>
    2420:	83 35       	cpi	r24, 0x53	; 83
    2422:	09 f0       	breq	.+2      	; 0x2426 <vfprintf+0x118>
    2424:	59 c0       	rjmp	.+178    	; 0x24d8 <vfprintf+0x1ca>
    2426:	21 c0       	rjmp	.+66     	; 0x246a <vfprintf+0x15c>
    2428:	f8 01       	movw	r30, r16
    242a:	80 81       	ld	r24, Z
    242c:	89 83       	std	Y+1, r24	; 0x01
    242e:	0e 5f       	subi	r16, 0xFE	; 254
    2430:	1f 4f       	sbci	r17, 0xFF	; 255
    2432:	88 24       	eor	r8, r8
    2434:	83 94       	inc	r8
    2436:	91 2c       	mov	r9, r1
    2438:	53 01       	movw	r10, r6
    243a:	13 c0       	rjmp	.+38     	; 0x2462 <vfprintf+0x154>
    243c:	28 01       	movw	r4, r16
    243e:	f2 e0       	ldi	r31, 0x02	; 2
    2440:	4f 0e       	add	r4, r31
    2442:	51 1c       	adc	r5, r1
    2444:	f8 01       	movw	r30, r16
    2446:	a0 80       	ld	r10, Z
    2448:	b1 80       	ldd	r11, Z+1	; 0x01
    244a:	36 fe       	sbrs	r3, 6
    244c:	03 c0       	rjmp	.+6      	; 0x2454 <vfprintf+0x146>
    244e:	69 2d       	mov	r22, r9
    2450:	70 e0       	ldi	r23, 0x00	; 0
    2452:	02 c0       	rjmp	.+4      	; 0x2458 <vfprintf+0x14a>
    2454:	6f ef       	ldi	r22, 0xFF	; 255
    2456:	7f ef       	ldi	r23, 0xFF	; 255
    2458:	c5 01       	movw	r24, r10
    245a:	0e 94 73 13 	call	0x26e6	; 0x26e6 <strnlen>
    245e:	4c 01       	movw	r8, r24
    2460:	82 01       	movw	r16, r4
    2462:	f3 2d       	mov	r31, r3
    2464:	ff 77       	andi	r31, 0x7F	; 127
    2466:	3f 2e       	mov	r3, r31
    2468:	16 c0       	rjmp	.+44     	; 0x2496 <vfprintf+0x188>
    246a:	28 01       	movw	r4, r16
    246c:	22 e0       	ldi	r18, 0x02	; 2
    246e:	42 0e       	add	r4, r18
    2470:	51 1c       	adc	r5, r1
    2472:	f8 01       	movw	r30, r16
    2474:	a0 80       	ld	r10, Z
    2476:	b1 80       	ldd	r11, Z+1	; 0x01
    2478:	36 fe       	sbrs	r3, 6
    247a:	03 c0       	rjmp	.+6      	; 0x2482 <vfprintf+0x174>
    247c:	69 2d       	mov	r22, r9
    247e:	70 e0       	ldi	r23, 0x00	; 0
    2480:	02 c0       	rjmp	.+4      	; 0x2486 <vfprintf+0x178>
    2482:	6f ef       	ldi	r22, 0xFF	; 255
    2484:	7f ef       	ldi	r23, 0xFF	; 255
    2486:	c5 01       	movw	r24, r10
    2488:	0e 94 68 13 	call	0x26d0	; 0x26d0 <strnlen_P>
    248c:	4c 01       	movw	r8, r24
    248e:	f3 2d       	mov	r31, r3
    2490:	f0 68       	ori	r31, 0x80	; 128
    2492:	3f 2e       	mov	r3, r31
    2494:	82 01       	movw	r16, r4
    2496:	33 fc       	sbrc	r3, 3
    2498:	1b c0       	rjmp	.+54     	; 0x24d0 <vfprintf+0x1c2>
    249a:	82 2d       	mov	r24, r2
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	88 16       	cp	r8, r24
    24a0:	99 06       	cpc	r9, r25
    24a2:	b0 f4       	brcc	.+44     	; 0x24d0 <vfprintf+0x1c2>
    24a4:	b6 01       	movw	r22, r12
    24a6:	80 e2       	ldi	r24, 0x20	; 32
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    24ae:	2a 94       	dec	r2
    24b0:	f4 cf       	rjmp	.-24     	; 0x249a <vfprintf+0x18c>
    24b2:	f5 01       	movw	r30, r10
    24b4:	37 fc       	sbrc	r3, 7
    24b6:	85 91       	lpm	r24, Z+
    24b8:	37 fe       	sbrs	r3, 7
    24ba:	81 91       	ld	r24, Z+
    24bc:	5f 01       	movw	r10, r30
    24be:	b6 01       	movw	r22, r12
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    24c6:	21 10       	cpse	r2, r1
    24c8:	2a 94       	dec	r2
    24ca:	21 e0       	ldi	r18, 0x01	; 1
    24cc:	82 1a       	sub	r8, r18
    24ce:	91 08       	sbc	r9, r1
    24d0:	81 14       	cp	r8, r1
    24d2:	91 04       	cpc	r9, r1
    24d4:	71 f7       	brne	.-36     	; 0x24b2 <vfprintf+0x1a4>
    24d6:	e8 c0       	rjmp	.+464    	; 0x26a8 <vfprintf+0x39a>
    24d8:	84 36       	cpi	r24, 0x64	; 100
    24da:	11 f0       	breq	.+4      	; 0x24e0 <vfprintf+0x1d2>
    24dc:	89 36       	cpi	r24, 0x69	; 105
    24de:	41 f5       	brne	.+80     	; 0x2530 <vfprintf+0x222>
    24e0:	f8 01       	movw	r30, r16
    24e2:	37 fe       	sbrs	r3, 7
    24e4:	07 c0       	rjmp	.+14     	; 0x24f4 <vfprintf+0x1e6>
    24e6:	60 81       	ld	r22, Z
    24e8:	71 81       	ldd	r23, Z+1	; 0x01
    24ea:	82 81       	ldd	r24, Z+2	; 0x02
    24ec:	93 81       	ldd	r25, Z+3	; 0x03
    24ee:	0c 5f       	subi	r16, 0xFC	; 252
    24f0:	1f 4f       	sbci	r17, 0xFF	; 255
    24f2:	08 c0       	rjmp	.+16     	; 0x2504 <vfprintf+0x1f6>
    24f4:	60 81       	ld	r22, Z
    24f6:	71 81       	ldd	r23, Z+1	; 0x01
    24f8:	07 2e       	mov	r0, r23
    24fa:	00 0c       	add	r0, r0
    24fc:	88 0b       	sbc	r24, r24
    24fe:	99 0b       	sbc	r25, r25
    2500:	0e 5f       	subi	r16, 0xFE	; 254
    2502:	1f 4f       	sbci	r17, 0xFF	; 255
    2504:	f3 2d       	mov	r31, r3
    2506:	ff 76       	andi	r31, 0x6F	; 111
    2508:	3f 2e       	mov	r3, r31
    250a:	97 ff       	sbrs	r25, 7
    250c:	09 c0       	rjmp	.+18     	; 0x2520 <vfprintf+0x212>
    250e:	90 95       	com	r25
    2510:	80 95       	com	r24
    2512:	70 95       	com	r23
    2514:	61 95       	neg	r22
    2516:	7f 4f       	sbci	r23, 0xFF	; 255
    2518:	8f 4f       	sbci	r24, 0xFF	; 255
    251a:	9f 4f       	sbci	r25, 0xFF	; 255
    251c:	f0 68       	ori	r31, 0x80	; 128
    251e:	3f 2e       	mov	r3, r31
    2520:	2a e0       	ldi	r18, 0x0A	; 10
    2522:	30 e0       	ldi	r19, 0x00	; 0
    2524:	a3 01       	movw	r20, r6
    2526:	0e 94 ba 13 	call	0x2774	; 0x2774 <__ultoa_invert>
    252a:	88 2e       	mov	r8, r24
    252c:	86 18       	sub	r8, r6
    252e:	45 c0       	rjmp	.+138    	; 0x25ba <vfprintf+0x2ac>
    2530:	85 37       	cpi	r24, 0x75	; 117
    2532:	31 f4       	brne	.+12     	; 0x2540 <vfprintf+0x232>
    2534:	23 2d       	mov	r18, r3
    2536:	2f 7e       	andi	r18, 0xEF	; 239
    2538:	b2 2e       	mov	r11, r18
    253a:	2a e0       	ldi	r18, 0x0A	; 10
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	25 c0       	rjmp	.+74     	; 0x258a <vfprintf+0x27c>
    2540:	93 2d       	mov	r25, r3
    2542:	99 7f       	andi	r25, 0xF9	; 249
    2544:	b9 2e       	mov	r11, r25
    2546:	8f 36       	cpi	r24, 0x6F	; 111
    2548:	c1 f0       	breq	.+48     	; 0x257a <vfprintf+0x26c>
    254a:	18 f4       	brcc	.+6      	; 0x2552 <vfprintf+0x244>
    254c:	88 35       	cpi	r24, 0x58	; 88
    254e:	79 f0       	breq	.+30     	; 0x256e <vfprintf+0x260>
    2550:	b5 c0       	rjmp	.+362    	; 0x26bc <vfprintf+0x3ae>
    2552:	80 37       	cpi	r24, 0x70	; 112
    2554:	19 f0       	breq	.+6      	; 0x255c <vfprintf+0x24e>
    2556:	88 37       	cpi	r24, 0x78	; 120
    2558:	21 f0       	breq	.+8      	; 0x2562 <vfprintf+0x254>
    255a:	b0 c0       	rjmp	.+352    	; 0x26bc <vfprintf+0x3ae>
    255c:	e9 2f       	mov	r30, r25
    255e:	e0 61       	ori	r30, 0x10	; 16
    2560:	be 2e       	mov	r11, r30
    2562:	b4 fe       	sbrs	r11, 4
    2564:	0d c0       	rjmp	.+26     	; 0x2580 <vfprintf+0x272>
    2566:	fb 2d       	mov	r31, r11
    2568:	f4 60       	ori	r31, 0x04	; 4
    256a:	bf 2e       	mov	r11, r31
    256c:	09 c0       	rjmp	.+18     	; 0x2580 <vfprintf+0x272>
    256e:	34 fe       	sbrs	r3, 4
    2570:	0a c0       	rjmp	.+20     	; 0x2586 <vfprintf+0x278>
    2572:	29 2f       	mov	r18, r25
    2574:	26 60       	ori	r18, 0x06	; 6
    2576:	b2 2e       	mov	r11, r18
    2578:	06 c0       	rjmp	.+12     	; 0x2586 <vfprintf+0x278>
    257a:	28 e0       	ldi	r18, 0x08	; 8
    257c:	30 e0       	ldi	r19, 0x00	; 0
    257e:	05 c0       	rjmp	.+10     	; 0x258a <vfprintf+0x27c>
    2580:	20 e1       	ldi	r18, 0x10	; 16
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	02 c0       	rjmp	.+4      	; 0x258a <vfprintf+0x27c>
    2586:	20 e1       	ldi	r18, 0x10	; 16
    2588:	32 e0       	ldi	r19, 0x02	; 2
    258a:	f8 01       	movw	r30, r16
    258c:	b7 fe       	sbrs	r11, 7
    258e:	07 c0       	rjmp	.+14     	; 0x259e <vfprintf+0x290>
    2590:	60 81       	ld	r22, Z
    2592:	71 81       	ldd	r23, Z+1	; 0x01
    2594:	82 81       	ldd	r24, Z+2	; 0x02
    2596:	93 81       	ldd	r25, Z+3	; 0x03
    2598:	0c 5f       	subi	r16, 0xFC	; 252
    259a:	1f 4f       	sbci	r17, 0xFF	; 255
    259c:	06 c0       	rjmp	.+12     	; 0x25aa <vfprintf+0x29c>
    259e:	60 81       	ld	r22, Z
    25a0:	71 81       	ldd	r23, Z+1	; 0x01
    25a2:	80 e0       	ldi	r24, 0x00	; 0
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	0e 5f       	subi	r16, 0xFE	; 254
    25a8:	1f 4f       	sbci	r17, 0xFF	; 255
    25aa:	a3 01       	movw	r20, r6
    25ac:	0e 94 ba 13 	call	0x2774	; 0x2774 <__ultoa_invert>
    25b0:	88 2e       	mov	r8, r24
    25b2:	86 18       	sub	r8, r6
    25b4:	fb 2d       	mov	r31, r11
    25b6:	ff 77       	andi	r31, 0x7F	; 127
    25b8:	3f 2e       	mov	r3, r31
    25ba:	36 fe       	sbrs	r3, 6
    25bc:	0d c0       	rjmp	.+26     	; 0x25d8 <vfprintf+0x2ca>
    25be:	23 2d       	mov	r18, r3
    25c0:	2e 7f       	andi	r18, 0xFE	; 254
    25c2:	a2 2e       	mov	r10, r18
    25c4:	89 14       	cp	r8, r9
    25c6:	58 f4       	brcc	.+22     	; 0x25de <vfprintf+0x2d0>
    25c8:	34 fe       	sbrs	r3, 4
    25ca:	0b c0       	rjmp	.+22     	; 0x25e2 <vfprintf+0x2d4>
    25cc:	32 fc       	sbrc	r3, 2
    25ce:	09 c0       	rjmp	.+18     	; 0x25e2 <vfprintf+0x2d4>
    25d0:	83 2d       	mov	r24, r3
    25d2:	8e 7e       	andi	r24, 0xEE	; 238
    25d4:	a8 2e       	mov	r10, r24
    25d6:	05 c0       	rjmp	.+10     	; 0x25e2 <vfprintf+0x2d4>
    25d8:	b8 2c       	mov	r11, r8
    25da:	a3 2c       	mov	r10, r3
    25dc:	03 c0       	rjmp	.+6      	; 0x25e4 <vfprintf+0x2d6>
    25de:	b8 2c       	mov	r11, r8
    25e0:	01 c0       	rjmp	.+2      	; 0x25e4 <vfprintf+0x2d6>
    25e2:	b9 2c       	mov	r11, r9
    25e4:	a4 fe       	sbrs	r10, 4
    25e6:	0f c0       	rjmp	.+30     	; 0x2606 <vfprintf+0x2f8>
    25e8:	fe 01       	movw	r30, r28
    25ea:	e8 0d       	add	r30, r8
    25ec:	f1 1d       	adc	r31, r1
    25ee:	80 81       	ld	r24, Z
    25f0:	80 33       	cpi	r24, 0x30	; 48
    25f2:	21 f4       	brne	.+8      	; 0x25fc <vfprintf+0x2ee>
    25f4:	9a 2d       	mov	r25, r10
    25f6:	99 7e       	andi	r25, 0xE9	; 233
    25f8:	a9 2e       	mov	r10, r25
    25fa:	09 c0       	rjmp	.+18     	; 0x260e <vfprintf+0x300>
    25fc:	a2 fe       	sbrs	r10, 2
    25fe:	06 c0       	rjmp	.+12     	; 0x260c <vfprintf+0x2fe>
    2600:	b3 94       	inc	r11
    2602:	b3 94       	inc	r11
    2604:	04 c0       	rjmp	.+8      	; 0x260e <vfprintf+0x300>
    2606:	8a 2d       	mov	r24, r10
    2608:	86 78       	andi	r24, 0x86	; 134
    260a:	09 f0       	breq	.+2      	; 0x260e <vfprintf+0x300>
    260c:	b3 94       	inc	r11
    260e:	a3 fc       	sbrc	r10, 3
    2610:	11 c0       	rjmp	.+34     	; 0x2634 <vfprintf+0x326>
    2612:	a0 fe       	sbrs	r10, 0
    2614:	06 c0       	rjmp	.+12     	; 0x2622 <vfprintf+0x314>
    2616:	b2 14       	cp	r11, r2
    2618:	88 f4       	brcc	.+34     	; 0x263c <vfprintf+0x32e>
    261a:	28 0c       	add	r2, r8
    261c:	92 2c       	mov	r9, r2
    261e:	9b 18       	sub	r9, r11
    2620:	0e c0       	rjmp	.+28     	; 0x263e <vfprintf+0x330>
    2622:	b2 14       	cp	r11, r2
    2624:	60 f4       	brcc	.+24     	; 0x263e <vfprintf+0x330>
    2626:	b6 01       	movw	r22, r12
    2628:	80 e2       	ldi	r24, 0x20	; 32
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    2630:	b3 94       	inc	r11
    2632:	f7 cf       	rjmp	.-18     	; 0x2622 <vfprintf+0x314>
    2634:	b2 14       	cp	r11, r2
    2636:	18 f4       	brcc	.+6      	; 0x263e <vfprintf+0x330>
    2638:	2b 18       	sub	r2, r11
    263a:	02 c0       	rjmp	.+4      	; 0x2640 <vfprintf+0x332>
    263c:	98 2c       	mov	r9, r8
    263e:	21 2c       	mov	r2, r1
    2640:	a4 fe       	sbrs	r10, 4
    2642:	10 c0       	rjmp	.+32     	; 0x2664 <vfprintf+0x356>
    2644:	b6 01       	movw	r22, r12
    2646:	80 e3       	ldi	r24, 0x30	; 48
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    264e:	a2 fe       	sbrs	r10, 2
    2650:	17 c0       	rjmp	.+46     	; 0x2680 <vfprintf+0x372>
    2652:	a1 fc       	sbrc	r10, 1
    2654:	03 c0       	rjmp	.+6      	; 0x265c <vfprintf+0x34e>
    2656:	88 e7       	ldi	r24, 0x78	; 120
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	02 c0       	rjmp	.+4      	; 0x2660 <vfprintf+0x352>
    265c:	88 e5       	ldi	r24, 0x58	; 88
    265e:	90 e0       	ldi	r25, 0x00	; 0
    2660:	b6 01       	movw	r22, r12
    2662:	0c c0       	rjmp	.+24     	; 0x267c <vfprintf+0x36e>
    2664:	8a 2d       	mov	r24, r10
    2666:	86 78       	andi	r24, 0x86	; 134
    2668:	59 f0       	breq	.+22     	; 0x2680 <vfprintf+0x372>
    266a:	a1 fe       	sbrs	r10, 1
    266c:	02 c0       	rjmp	.+4      	; 0x2672 <vfprintf+0x364>
    266e:	8b e2       	ldi	r24, 0x2B	; 43
    2670:	01 c0       	rjmp	.+2      	; 0x2674 <vfprintf+0x366>
    2672:	80 e2       	ldi	r24, 0x20	; 32
    2674:	a7 fc       	sbrc	r10, 7
    2676:	8d e2       	ldi	r24, 0x2D	; 45
    2678:	b6 01       	movw	r22, r12
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    2680:	89 14       	cp	r8, r9
    2682:	38 f4       	brcc	.+14     	; 0x2692 <vfprintf+0x384>
    2684:	b6 01       	movw	r22, r12
    2686:	80 e3       	ldi	r24, 0x30	; 48
    2688:	90 e0       	ldi	r25, 0x00	; 0
    268a:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    268e:	9a 94       	dec	r9
    2690:	f7 cf       	rjmp	.-18     	; 0x2680 <vfprintf+0x372>
    2692:	8a 94       	dec	r8
    2694:	f3 01       	movw	r30, r6
    2696:	e8 0d       	add	r30, r8
    2698:	f1 1d       	adc	r31, r1
    269a:	80 81       	ld	r24, Z
    269c:	b6 01       	movw	r22, r12
    269e:	90 e0       	ldi	r25, 0x00	; 0
    26a0:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    26a4:	81 10       	cpse	r8, r1
    26a6:	f5 cf       	rjmp	.-22     	; 0x2692 <vfprintf+0x384>
    26a8:	22 20       	and	r2, r2
    26aa:	09 f4       	brne	.+2      	; 0x26ae <vfprintf+0x3a0>
    26ac:	42 ce       	rjmp	.-892    	; 0x2332 <vfprintf+0x24>
    26ae:	b6 01       	movw	r22, r12
    26b0:	80 e2       	ldi	r24, 0x20	; 32
    26b2:	90 e0       	ldi	r25, 0x00	; 0
    26b4:	0e 94 7e 13 	call	0x26fc	; 0x26fc <fputc>
    26b8:	2a 94       	dec	r2
    26ba:	f6 cf       	rjmp	.-20     	; 0x26a8 <vfprintf+0x39a>
    26bc:	f6 01       	movw	r30, r12
    26be:	86 81       	ldd	r24, Z+6	; 0x06
    26c0:	97 81       	ldd	r25, Z+7	; 0x07
    26c2:	02 c0       	rjmp	.+4      	; 0x26c8 <vfprintf+0x3ba>
    26c4:	8f ef       	ldi	r24, 0xFF	; 255
    26c6:	9f ef       	ldi	r25, 0xFF	; 255
    26c8:	2b 96       	adiw	r28, 0x0b	; 11
    26ca:	e2 e1       	ldi	r30, 0x12	; 18
    26cc:	0c 94 34 14 	jmp	0x2868	; 0x2868 <__epilogue_restores__>

000026d0 <strnlen_P>:
    26d0:	fc 01       	movw	r30, r24
    26d2:	05 90       	lpm	r0, Z+
    26d4:	61 50       	subi	r22, 0x01	; 1
    26d6:	70 40       	sbci	r23, 0x00	; 0
    26d8:	01 10       	cpse	r0, r1
    26da:	d8 f7       	brcc	.-10     	; 0x26d2 <strnlen_P+0x2>
    26dc:	80 95       	com	r24
    26de:	90 95       	com	r25
    26e0:	8e 0f       	add	r24, r30
    26e2:	9f 1f       	adc	r25, r31
    26e4:	08 95       	ret

000026e6 <strnlen>:
    26e6:	fc 01       	movw	r30, r24
    26e8:	61 50       	subi	r22, 0x01	; 1
    26ea:	70 40       	sbci	r23, 0x00	; 0
    26ec:	01 90       	ld	r0, Z+
    26ee:	01 10       	cpse	r0, r1
    26f0:	d8 f7       	brcc	.-10     	; 0x26e8 <strnlen+0x2>
    26f2:	80 95       	com	r24
    26f4:	90 95       	com	r25
    26f6:	8e 0f       	add	r24, r30
    26f8:	9f 1f       	adc	r25, r31
    26fa:	08 95       	ret

000026fc <fputc>:
    26fc:	0f 93       	push	r16
    26fe:	1f 93       	push	r17
    2700:	cf 93       	push	r28
    2702:	df 93       	push	r29
    2704:	fb 01       	movw	r30, r22
    2706:	23 81       	ldd	r18, Z+3	; 0x03
    2708:	21 fd       	sbrc	r18, 1
    270a:	03 c0       	rjmp	.+6      	; 0x2712 <fputc+0x16>
    270c:	8f ef       	ldi	r24, 0xFF	; 255
    270e:	9f ef       	ldi	r25, 0xFF	; 255
    2710:	2c c0       	rjmp	.+88     	; 0x276a <fputc+0x6e>
    2712:	22 ff       	sbrs	r18, 2
    2714:	16 c0       	rjmp	.+44     	; 0x2742 <fputc+0x46>
    2716:	46 81       	ldd	r20, Z+6	; 0x06
    2718:	57 81       	ldd	r21, Z+7	; 0x07
    271a:	24 81       	ldd	r18, Z+4	; 0x04
    271c:	35 81       	ldd	r19, Z+5	; 0x05
    271e:	42 17       	cp	r20, r18
    2720:	53 07       	cpc	r21, r19
    2722:	44 f4       	brge	.+16     	; 0x2734 <fputc+0x38>
    2724:	a0 81       	ld	r26, Z
    2726:	b1 81       	ldd	r27, Z+1	; 0x01
    2728:	9d 01       	movw	r18, r26
    272a:	2f 5f       	subi	r18, 0xFF	; 255
    272c:	3f 4f       	sbci	r19, 0xFF	; 255
    272e:	31 83       	std	Z+1, r19	; 0x01
    2730:	20 83       	st	Z, r18
    2732:	8c 93       	st	X, r24
    2734:	26 81       	ldd	r18, Z+6	; 0x06
    2736:	37 81       	ldd	r19, Z+7	; 0x07
    2738:	2f 5f       	subi	r18, 0xFF	; 255
    273a:	3f 4f       	sbci	r19, 0xFF	; 255
    273c:	37 83       	std	Z+7, r19	; 0x07
    273e:	26 83       	std	Z+6, r18	; 0x06
    2740:	14 c0       	rjmp	.+40     	; 0x276a <fputc+0x6e>
    2742:	8b 01       	movw	r16, r22
    2744:	ec 01       	movw	r28, r24
    2746:	fb 01       	movw	r30, r22
    2748:	00 84       	ldd	r0, Z+8	; 0x08
    274a:	f1 85       	ldd	r31, Z+9	; 0x09
    274c:	e0 2d       	mov	r30, r0
    274e:	09 95       	icall
    2750:	89 2b       	or	r24, r25
    2752:	e1 f6       	brne	.-72     	; 0x270c <fputc+0x10>
    2754:	d8 01       	movw	r26, r16
    2756:	16 96       	adiw	r26, 0x06	; 6
    2758:	8d 91       	ld	r24, X+
    275a:	9c 91       	ld	r25, X
    275c:	17 97       	sbiw	r26, 0x07	; 7
    275e:	01 96       	adiw	r24, 0x01	; 1
    2760:	17 96       	adiw	r26, 0x07	; 7
    2762:	9c 93       	st	X, r25
    2764:	8e 93       	st	-X, r24
    2766:	16 97       	sbiw	r26, 0x06	; 6
    2768:	ce 01       	movw	r24, r28
    276a:	df 91       	pop	r29
    276c:	cf 91       	pop	r28
    276e:	1f 91       	pop	r17
    2770:	0f 91       	pop	r16
    2772:	08 95       	ret

00002774 <__ultoa_invert>:
    2774:	fa 01       	movw	r30, r20
    2776:	aa 27       	eor	r26, r26
    2778:	28 30       	cpi	r18, 0x08	; 8
    277a:	51 f1       	breq	.+84     	; 0x27d0 <__ultoa_invert+0x5c>
    277c:	20 31       	cpi	r18, 0x10	; 16
    277e:	81 f1       	breq	.+96     	; 0x27e0 <__ultoa_invert+0x6c>
    2780:	e8 94       	clt
    2782:	6f 93       	push	r22
    2784:	6e 7f       	andi	r22, 0xFE	; 254
    2786:	6e 5f       	subi	r22, 0xFE	; 254
    2788:	7f 4f       	sbci	r23, 0xFF	; 255
    278a:	8f 4f       	sbci	r24, 0xFF	; 255
    278c:	9f 4f       	sbci	r25, 0xFF	; 255
    278e:	af 4f       	sbci	r26, 0xFF	; 255
    2790:	b1 e0       	ldi	r27, 0x01	; 1
    2792:	3e d0       	rcall	.+124    	; 0x2810 <__ultoa_invert+0x9c>
    2794:	b4 e0       	ldi	r27, 0x04	; 4
    2796:	3c d0       	rcall	.+120    	; 0x2810 <__ultoa_invert+0x9c>
    2798:	67 0f       	add	r22, r23
    279a:	78 1f       	adc	r23, r24
    279c:	89 1f       	adc	r24, r25
    279e:	9a 1f       	adc	r25, r26
    27a0:	a1 1d       	adc	r26, r1
    27a2:	68 0f       	add	r22, r24
    27a4:	79 1f       	adc	r23, r25
    27a6:	8a 1f       	adc	r24, r26
    27a8:	91 1d       	adc	r25, r1
    27aa:	a1 1d       	adc	r26, r1
    27ac:	6a 0f       	add	r22, r26
    27ae:	71 1d       	adc	r23, r1
    27b0:	81 1d       	adc	r24, r1
    27b2:	91 1d       	adc	r25, r1
    27b4:	a1 1d       	adc	r26, r1
    27b6:	20 d0       	rcall	.+64     	; 0x27f8 <__ultoa_invert+0x84>
    27b8:	09 f4       	brne	.+2      	; 0x27bc <__ultoa_invert+0x48>
    27ba:	68 94       	set
    27bc:	3f 91       	pop	r19
    27be:	2a e0       	ldi	r18, 0x0A	; 10
    27c0:	26 9f       	mul	r18, r22
    27c2:	11 24       	eor	r1, r1
    27c4:	30 19       	sub	r19, r0
    27c6:	30 5d       	subi	r19, 0xD0	; 208
    27c8:	31 93       	st	Z+, r19
    27ca:	de f6       	brtc	.-74     	; 0x2782 <__ultoa_invert+0xe>
    27cc:	cf 01       	movw	r24, r30
    27ce:	08 95       	ret
    27d0:	46 2f       	mov	r20, r22
    27d2:	47 70       	andi	r20, 0x07	; 7
    27d4:	40 5d       	subi	r20, 0xD0	; 208
    27d6:	41 93       	st	Z+, r20
    27d8:	b3 e0       	ldi	r27, 0x03	; 3
    27da:	0f d0       	rcall	.+30     	; 0x27fa <__ultoa_invert+0x86>
    27dc:	c9 f7       	brne	.-14     	; 0x27d0 <__ultoa_invert+0x5c>
    27de:	f6 cf       	rjmp	.-20     	; 0x27cc <__ultoa_invert+0x58>
    27e0:	46 2f       	mov	r20, r22
    27e2:	4f 70       	andi	r20, 0x0F	; 15
    27e4:	40 5d       	subi	r20, 0xD0	; 208
    27e6:	4a 33       	cpi	r20, 0x3A	; 58
    27e8:	18 f0       	brcs	.+6      	; 0x27f0 <__ultoa_invert+0x7c>
    27ea:	49 5d       	subi	r20, 0xD9	; 217
    27ec:	31 fd       	sbrc	r19, 1
    27ee:	40 52       	subi	r20, 0x20	; 32
    27f0:	41 93       	st	Z+, r20
    27f2:	02 d0       	rcall	.+4      	; 0x27f8 <__ultoa_invert+0x84>
    27f4:	a9 f7       	brne	.-22     	; 0x27e0 <__ultoa_invert+0x6c>
    27f6:	ea cf       	rjmp	.-44     	; 0x27cc <__ultoa_invert+0x58>
    27f8:	b4 e0       	ldi	r27, 0x04	; 4
    27fa:	a6 95       	lsr	r26
    27fc:	97 95       	ror	r25
    27fe:	87 95       	ror	r24
    2800:	77 95       	ror	r23
    2802:	67 95       	ror	r22
    2804:	ba 95       	dec	r27
    2806:	c9 f7       	brne	.-14     	; 0x27fa <__ultoa_invert+0x86>
    2808:	00 97       	sbiw	r24, 0x00	; 0
    280a:	61 05       	cpc	r22, r1
    280c:	71 05       	cpc	r23, r1
    280e:	08 95       	ret
    2810:	9b 01       	movw	r18, r22
    2812:	ac 01       	movw	r20, r24
    2814:	0a 2e       	mov	r0, r26
    2816:	06 94       	lsr	r0
    2818:	57 95       	ror	r21
    281a:	47 95       	ror	r20
    281c:	37 95       	ror	r19
    281e:	27 95       	ror	r18
    2820:	ba 95       	dec	r27
    2822:	c9 f7       	brne	.-14     	; 0x2816 <__ultoa_invert+0xa2>
    2824:	62 0f       	add	r22, r18
    2826:	73 1f       	adc	r23, r19
    2828:	84 1f       	adc	r24, r20
    282a:	95 1f       	adc	r25, r21
    282c:	a0 1d       	adc	r26, r0
    282e:	08 95       	ret

00002830 <__prologue_saves__>:
    2830:	2f 92       	push	r2
    2832:	3f 92       	push	r3
    2834:	4f 92       	push	r4
    2836:	5f 92       	push	r5
    2838:	6f 92       	push	r6
    283a:	7f 92       	push	r7
    283c:	8f 92       	push	r8
    283e:	9f 92       	push	r9
    2840:	af 92       	push	r10
    2842:	bf 92       	push	r11
    2844:	cf 92       	push	r12
    2846:	df 92       	push	r13
    2848:	ef 92       	push	r14
    284a:	ff 92       	push	r15
    284c:	0f 93       	push	r16
    284e:	1f 93       	push	r17
    2850:	cf 93       	push	r28
    2852:	df 93       	push	r29
    2854:	cd b7       	in	r28, 0x3d	; 61
    2856:	de b7       	in	r29, 0x3e	; 62
    2858:	ca 1b       	sub	r28, r26
    285a:	db 0b       	sbc	r29, r27
    285c:	0f b6       	in	r0, 0x3f	; 63
    285e:	f8 94       	cli
    2860:	de bf       	out	0x3e, r29	; 62
    2862:	0f be       	out	0x3f, r0	; 63
    2864:	cd bf       	out	0x3d, r28	; 61
    2866:	09 94       	ijmp

00002868 <__epilogue_restores__>:
    2868:	2a 88       	ldd	r2, Y+18	; 0x12
    286a:	39 88       	ldd	r3, Y+17	; 0x11
    286c:	48 88       	ldd	r4, Y+16	; 0x10
    286e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2870:	6e 84       	ldd	r6, Y+14	; 0x0e
    2872:	7d 84       	ldd	r7, Y+13	; 0x0d
    2874:	8c 84       	ldd	r8, Y+12	; 0x0c
    2876:	9b 84       	ldd	r9, Y+11	; 0x0b
    2878:	aa 84       	ldd	r10, Y+10	; 0x0a
    287a:	b9 84       	ldd	r11, Y+9	; 0x09
    287c:	c8 84       	ldd	r12, Y+8	; 0x08
    287e:	df 80       	ldd	r13, Y+7	; 0x07
    2880:	ee 80       	ldd	r14, Y+6	; 0x06
    2882:	fd 80       	ldd	r15, Y+5	; 0x05
    2884:	0c 81       	ldd	r16, Y+4	; 0x04
    2886:	1b 81       	ldd	r17, Y+3	; 0x03
    2888:	aa 81       	ldd	r26, Y+2	; 0x02
    288a:	b9 81       	ldd	r27, Y+1	; 0x01
    288c:	ce 0f       	add	r28, r30
    288e:	d1 1d       	adc	r29, r1
    2890:	0f b6       	in	r0, 0x3f	; 63
    2892:	f8 94       	cli
    2894:	de bf       	out	0x3e, r29	; 62
    2896:	0f be       	out	0x3f, r0	; 63
    2898:	cd bf       	out	0x3d, r28	; 61
    289a:	ed 01       	movw	r28, r26
    289c:	08 95       	ret

0000289e <__do_global_dtors>:
    289e:	10 e0       	ldi	r17, 0x00	; 0
    28a0:	c7 e3       	ldi	r28, 0x37	; 55
    28a2:	d0 e0       	ldi	r29, 0x00	; 0
    28a4:	04 c0       	rjmp	.+8      	; 0x28ae <__do_global_dtors+0x10>
    28a6:	fe 01       	movw	r30, r28
    28a8:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <__tablejump2__>
    28ac:	21 96       	adiw	r28, 0x01	; 1
    28ae:	ca 33       	cpi	r28, 0x3A	; 58
    28b0:	d1 07       	cpc	r29, r17
    28b2:	c9 f7       	brne	.-14     	; 0x28a6 <__do_global_dtors+0x8>
    28b4:	f8 94       	cli

000028b6 <__stop_program>:
    28b6:	ff cf       	rjmp	.-2      	; 0x28b6 <__stop_program>
